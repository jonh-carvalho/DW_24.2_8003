{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desenvolvimento Web C\u00f3digo da Disciplina : IBM1738/13006249-8003 Sobre Disciplina que apresenta a introdu\u00e7\u00e3o a programa\u00e7\u00e3o web: HTML, CSS e Javascript. Ferramentas Linguagens : HTML, CSS e Javascript Tecnologias : Visual Studio Code e Github As APs dever\u00e3o ser enviadas no github e publicadas no github pages.","title":"Home"},{"location":"#desenvolvimento-web","text":"C\u00f3digo da Disciplina : IBM1738/13006249-8003","title":"Desenvolvimento Web"},{"location":"#sobre","text":"Disciplina que apresenta a introdu\u00e7\u00e3o a programa\u00e7\u00e3o web: HTML, CSS e Javascript.","title":"Sobre"},{"location":"#ferramentas","text":"Linguagens : HTML, CSS e Javascript Tecnologias : Visual Studio Code e Github As APs dever\u00e3o ser enviadas no github e publicadas no github pages.","title":"Ferramentas"},{"location":"_Disciplina/aulas/","text":"Aulas Aula Conte\u00fado 01 - 07/08/24 -------------------------------------------------------------------------- 02 - 14/08/24 Welcome Ibmec - Introdu\u00e7\u00e3o a Web 03 - 21/08/24 Introdu\u00e7\u00e3o ao HTML 04 - 28/08/24 Introdu\u00e7\u00e3o ao CSS 05 - 04/09/24 span , div , class , id , Selectors , etc... 06 - 11/09/24 Posicionamento e Layout - FlexBox e Grid CSS 07 - 18/09/24 Responsividade 08 - 25/09/24 AP1 09 - 02/10/24 Javascript 10 - 09/10/24 Javascript 11 - 16/10/24 Javascript 12 - 23/10/24 Javascript 13 - 30/10/24 Javascript 14 - 06/11/24 Javascript - Fetch/API 15 - 13/11/24 Javascript - Fetch/API 16 - 20/11/24 Feriado 17 - 27/11/24 AP2","title":"Aulas"},{"location":"_Disciplina/aulas/#aulas","text":"Aula Conte\u00fado 01 - 07/08/24 -------------------------------------------------------------------------- 02 - 14/08/24 Welcome Ibmec - Introdu\u00e7\u00e3o a Web 03 - 21/08/24 Introdu\u00e7\u00e3o ao HTML 04 - 28/08/24 Introdu\u00e7\u00e3o ao CSS 05 - 04/09/24 span , div , class , id , Selectors , etc... 06 - 11/09/24 Posicionamento e Layout - FlexBox e Grid CSS 07 - 18/09/24 Responsividade 08 - 25/09/24 AP1 09 - 02/10/24 Javascript 10 - 09/10/24 Javascript 11 - 16/10/24 Javascript 12 - 23/10/24 Javascript 13 - 30/10/24 Javascript 14 - 06/11/24 Javascript - Fetch/API 15 - 13/11/24 Javascript - Fetch/API 16 - 20/11/24 Feriado 17 - 27/11/24 AP2","title":"Aulas"},{"location":"_Disciplina/github/","text":"Versionamento Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub . O que \u00e9 Git? O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil. Como instalar o Git Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral. Como configurar o Git Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais. Como criar e inicializar um projeto no Git Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git. Arquivos de projeto no Git Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github. O que \u00e9 o GitHub? O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem. Como enviar um reposit\u00f3rio para o Github ** Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica. Como adicionar arquivos ao Git Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** ** Como confirmar (commit) arquivos no Git O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles. **Como usar branches no Git ** Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test . **Como extrair um reposit\u00f3rio no Git ** Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone Conclus\u00e3o Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** ** Links git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Versionamento"},{"location":"_Disciplina/github/#versionamento","text":"Git e GitHub \u2013 controle de vers\u00e3o para iniciantes Git e GitHub s\u00e3o duas tecnologias que todo desenvolvedor deve aprender, independentemente de sua \u00e1rea. Se voc\u00ea \u00e9 um desenvolvedor iniciante, pode pensar que esses dois termos significam a mesma coisa, mas s\u00e3o diferentes. Este roteiro ajudar\u00e1 voc\u00ea a entender o que \u00e9 Git e controle de vers\u00e3o, os comandos b\u00e1sicos do Git que voc\u00ea precisa conhecer, como voc\u00ea pode usar seus recursos para aumentar a efici\u00eancia do seu trabalho e como estender esses recursos usando o GitHub. Este roteiro \u00e9 voltado a iniciantes, pois os exemplos ser\u00e3o muito f\u00e1ceis de entender. Tamb\u00e9m ser\u00e1 um tutorial generalizado para que qualquer pessoa possa acompanhar, n\u00e3o importa qual seja sua linguagem de programa\u00e7\u00e3o favorita. Para nosso projeto, faremos uma lista de tarefas escrita em um arquivo de texto (txt). Voc\u00ea ver\u00e1 como podemos usar os recursos do Git para trabalhar e criar uma vers\u00e3o final da lista. Pr\u00e9-requisitos Para concluir este roteiro, voc\u00ea precisar\u00e1 do seguinte: Uma interface de linha de comando, um terminal. Um editor de texto de sua escolha (usarei o VS Code ). Uma conta no GitHub .","title":"Versionamento"},{"location":"_Disciplina/github/#o-que-e-git","text":"O Git \u00e9 um sistema de controle de vers\u00e3o que permite rastrear as altera\u00e7\u00f5es feitas em seus arquivos ao longo do tempo. Com o Git, voc\u00ea pode reverter para v\u00e1rios estados de seus arquivos (como se usasse uma m\u00e1quina do tempo). Voc\u00ea tamb\u00e9m pode fazer uma c\u00f3pia do arquivo, fazer altera\u00e7\u00f5es nessa c\u00f3pia e mesclar essas altera\u00e7\u00f5es na vers\u00e3o original. Por exemplo, voc\u00ea pode estar trabalhando na p\u00e1gina de destino de um site e descobrir que n\u00e3o gosta da barra de navega\u00e7\u00e3o. Ao mesmo tempo, voc\u00ea pode ficar apreensivo em come\u00e7ar a alterar seus componentes, porque o resultado pode ser pior. Com o Git, voc\u00ea pode criar uma c\u00f3pia id\u00eantica desse arquivo e mexer na barra de navega\u00e7\u00e3o. Ent\u00e3o, quando estiver satisfeito com suas altera\u00e7\u00f5es, poder\u00e1 mesclar a c\u00f3pia ao arquivo original. Voc\u00ea n\u00e3o est\u00e1 limitado a usar o Git apenas para arquivos de c\u00f3digo-fonte \u2013 voc\u00ea tamb\u00e9m pode us\u00e1-lo para acompanhar arquivos de texto ou at\u00e9 imagens. Isso significa que o Git n\u00e3o \u00e9 apenas para desenvolvedores \u2013 qualquer um pode ach\u00e1-lo \u00fatil.","title":"O que \u00e9 Git?"},{"location":"_Disciplina/github/#como-instalar-o-git","text":"Para usar o Git, voc\u00ea precisa instal\u00e1-lo em seu computador. Para fazer isso, voc\u00ea pode baixar a vers\u00e3o mais recente no site da web oficial . Voc\u00ea pode fazer o download para o seu sistema operacional a partir das op\u00e7\u00f5es fornecidas. Voc\u00ea tamb\u00e9m pode instalar o Git usando a linha de comando, mas, como os comandos variam de acordo com cada sistema operacional, vamos nos concentrar na abordagem mais geral.","title":"Como instalar o Git"},{"location":"_Disciplina/github/#como-configurar-o-git","text":"Vou assumir que, neste ponto, voc\u00ea j\u00e1 instalou o Git. Para verificar isso, voc\u00ea pode executar este comando no terminal: git --version. Ele mostra a vers\u00e3o atual instalada no seu PC. A pr\u00f3xima coisa que voc\u00ea precisa fazer \u00e9 definir seu nome de usu\u00e1rio e endere\u00e7o de e-mail. O Git usar\u00e1 essas informa\u00e7\u00f5es para identificar quem fez altera\u00e7\u00f5es espec\u00edficas nos arquivos. Para definir seu nome de usu\u00e1rio, digite e execute estes comandos: gitconfig --global user.name \"SEU_NOME_DE_USUARIO\"** gitconfig --global user.email \"SEU_E-MAIL\"**. Apenas certifique-se de substituir \"SEU_NOME_DE_USUARIO\" e \"SEU_E-MAIL\" pelos valores que voc\u00ea escolher \u2014 ou seja, seu nome de usu\u00e1rio e seu e-mail reais.","title":"Como configurar o Git"},{"location":"_Disciplina/github/#como-criar-e-inicializar-um-projeto-no-git","text":"Ap\u00f3s terminarmos de instalar e configurar o Git, agora \u00e9 hora de criar nosso projeto. Criamos uma pasta, no desktop, chamada Git and GitHub tutorial. Usando a linha de comando, navegue at\u00e9 o local do seu novo projeto. Para execute os seguintes comandos: cd desktop cd git and github tutorial Se voc\u00ea conhece a linha de comando h\u00e1 pouco e ainda est\u00e1 aprendendo a us\u00e1-la para navegar pelo seu PC, sugiro usar o Visual Studio Code da Microsoft. \u00c9 um editor de c\u00f3digo que possui um terminal embutido para executar comandos. Voc\u00ea pode baix\u00e1-lo aqui . Depois de instalar o VS Code, abra seu projeto no editor e abra um novo terminal para seu projeto. Isso apontar\u00e1 automaticamente o terminal/linha de comando para o caminho do seu projeto. Agora, para inicializar um reposit\u00f3rio do seu projeto, basta executar gitinit. Isso dir\u00e1 ao Git para come\u00e7ar a observar seus arquivos a cada altera\u00e7\u00e3o que ocorrer. Esta \u00e9 a apar\u00eancia na linha de comando/terminal:** ** git init A primeira linha tem informa\u00e7\u00f5es sobre meu PC e o caminho para a pasta. A segunda linha \u00e9 o comando gitinit e a terceira linha \u00e9 a resposta enviada de volta me dizendo que meu reposit\u00f3rio (ou repo) foi inicializado. Ele \u00e9 considerado vazio porque n\u00e3o informamos ao Git quais arquivos rastrear.** ** Um reposit\u00f3rio \u00e9 apenas outra maneira de definir um projeto que est\u00e1 sendo monitorado/rastreado pelo Git.","title":"Como criar e inicializar um projeto no Git"},{"location":"_Disciplina/github/#arquivos-de-projeto-no-git","text":"Criamos apenas um arquivo chamado todo.txt. Essa \u00e9 a apar\u00eancia do arquivo:** ** ** MINHA LISTA DE TAREFAS** Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. Me candidatar a trabalhos remotos. Antes de continuarmos aprendendo outros comandos do Git, vamos falar sobre o Github.","title":"Arquivos de projeto no Git"},{"location":"_Disciplina/github/#o-que-e-o-github","text":"O GitHub \u00e9 um servi\u00e7o de hospedagem on-line para reposit\u00f3rios do Git. Imagine trabalhar em um projeto em casa e, enquanto estiver fora \u2013 talvez na casa de um amigo, de repente \u2013 se dar conta da solu\u00e7\u00e3o para um erro de c\u00f3digo que o deixou inquieto por dias. Voc\u00ea n\u00e3o pode fazer essas altera\u00e7\u00f5es porque seu PC n\u00e3o est\u00e1 com voc\u00ea. Se, contudo, voc\u00ea tiver seu projeto hospedado no GitHub, poder\u00e1 acessar e baixar esse projeto com um comando em qualquer computador ao qual tenha acesso. Em seguida, voc\u00ea pode fazer suas altera\u00e7\u00f5es e enviar a vers\u00e3o mais recente de volta ao GitHub. Em resumo, o GitHub permite que voc\u00ea armazene seu reposit\u00f3rio em sua plataforma. Outro recurso incr\u00edvel que vem com o GitHub \u00e9 a capacidade de colaborar com outros desenvolvedores de qualquer local. Agora que criamos e inicializamos nosso projeto localmente, vamos envi\u00e1-lo para o GitHub. Se voc\u00ea \u00e9 iniciante, encontrar\u00e1 alguns termos novos como push, commit, adde assim por diante \u2013 mas n\u00e3o se deixe assustar com eles. Com alguma pr\u00e1tica, voc\u00ea ser\u00e1 capaz de lembrar desses termos e do que eles fazem.","title":"O que \u00e9 o GitHub?"},{"location":"_Disciplina/github/#como-enviar-um-repositorio-para-o-github","text":"Dividimos esta se\u00e7\u00e3o em etapas para ajud\u00e1-lo a entender o processo com mais clareza. Passo 1 \u2013 Crie uma conta no GitHub Para poder usar o GitHub, ter\u00e1 de criar uma conta primeiramente. Voc\u00ea pode fazer isso no[site da web](https://github.com/) do GitHub. Passo 2 \u2013 Crie um reposit\u00f3rio Voc\u00ea pode clicar no s\u00edmbolo + no canto superior direito da p\u00e1gina e escolher \"New repository\" (Novo reposit\u00f3rio). D\u00ea um nome ao seu reposit\u00f3rio, role para baixo e clique no bot\u00e3o \"Createrepository\" (Criar reposit\u00f3rio). Passo 3 \u2013 Adicionar e confirmar arquivos Antes de \"adicionar\" e \"confirmar\" nossos arquivos, voc\u00ea precisa entender os est\u00e1gios de um arquivo que est\u00e1 sendo rastreado peloGit. Estado confirmado (committed) Um arquivo est\u00e1 no estado confirmado quando todas as altera\u00e7\u00f5es feitas no arquivo foram salvas no reposit\u00f3rio local. Os arquivos no est\u00e1gio confirmado s\u00e3o arquivos prontos para serem enviados para o reposit\u00f3rio remoto (no GitHub). Estado modificado (modified) Um arquivo no estado modificado tem algumas altera\u00e7\u00f5es feitas nele, mas ainda n\u00e3o foi salvo. Isso significa que o estado do arquivo foi alterado de seu estado anterior no estado confirmado . Estado preparado (staged) Um arquivo no estado preparado significa que est\u00e1 pronto para ser confirmado. Nesse estado, todas as altera\u00e7\u00f5es necess\u00e1rias foram feitas. Portanto, o pr\u00f3ximo passo \u00e9 mover o arquivo para o estado de confirma\u00e7\u00e3o. Voc\u00ea pode entender isso melhor imaginando o Git como uma c\u00e2mera. A c\u00e2mera s\u00f3 tirar\u00e1 um instant\u00e2neo quando o arquivo atingir o estado de confirma\u00e7\u00e3o. Ap\u00f3s este estado, a c\u00e2mera come\u00e7a a comparar as altera\u00e7\u00f5es feitas no mesmo arquivo com o \u00faltimo instant\u00e2neo (este \u00e9 o estado modificado). Quando as altera\u00e7\u00f5es necess\u00e1rias forem feitas, o arquivo \u00e9 preparado e movido para o estado de confirma\u00e7\u00e3o para um novo instant\u00e2neo. Isso pode ser muita informa\u00e7\u00e3o para absorver no momento, mas n\u00e3o desanime \u2013 fica mais f\u00e1cil com a pr\u00e1tica.","title":"Como enviar um reposit\u00f3rio para o Github**"},{"location":"_Disciplina/github/#como-adicionar-arquivos-ao-git","text":"Quando inicializamos nosso projeto, o arquivo n\u00e3o estava sendo rastreado pelo Git. Para isso, usamos o comando gitadd . O ponto que vem depois de add representa todos os arquivos que existem no reposit\u00f3rio. Se voc\u00ea quiser adicionar um arquivo espec\u00edfico (por exemplo, um arquivo chamado about.txt), use gitadd about.txt . Agora, nosso arquivo est\u00e1 no estado preparado. Voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s este comando, mas, para saber em que estado seu arquivo est\u00e1, voc\u00ea pode executar o comando git status. ** **","title":"Como adicionar arquivos ao Git"},{"location":"_Disciplina/github/#como-confirmar-commit-arquivos-no-git","text":"O pr\u00f3ximo estado de um arquivo ap\u00f3s o estado preparado \u00e9 o estado confirmado. Para confirmar nosso arquivo, usamos o comando gitcommit -m \"firstcommit\" A primeira parte do comando gitcommit diz ao Git que todos os arquivos preparados est\u00e3o prontos para serem confirmados. Ent\u00e3o, \u00e9 hora de tirar um instant\u00e2neo. A segunda parte, -m \"firstcommit\" , \u00e9 a mensagem de confirma\u00e7\u00e3o. -m \u00e9 uma abrevia\u00e7\u00e3o de mensagem enquanto o texto entre aspas \u00e9 a mensagem de confirma\u00e7\u00e3o (que pode ser a mensagem que voc\u00ea quiser e no idioma que quiser). Depois de executar este comando, voc\u00ea deve obter uma resposta semelhante a esta: gitcommit Agora, nosso arquivo est\u00e1 no estado confirmado. Passo 4 \u2013 Envie o reposit\u00f3rio para o GitHub** ** Depois de criar o reposit\u00f3rio, voc\u00ea deve ser redirecionado para uma p\u00e1gina que informa como criar um reposit\u00f3rio localmente ou enviar um j\u00e1 existente. No nosso caso, o projeto j\u00e1 existe localmente, ent\u00e3o usaremos comandos na se\u00e7\u00e3o \"\u2026 ou enviar um reposit\u00f3rio existente a partir da linha de comando\". Estes s\u00e3o os comandos: gitremoteaddorigin** https://github.com/ihechikara/git-and-github-tutorial.git** gitbranch** -M main** git push -u origin main** ** O primeiro comando, gitremoteaddorigin https://github.com/ihechikara/git-and-github-tutorial.git , cria uma conex\u00e3o entre seu reposit\u00f3rio local e o reposit\u00f3rio remoto no GitHub.** ** O URL do seu projeto remoto deve ser totalmente diferente do anterior. Portanto, para acompanhar, certifique-se de seguir as etapas e trabalhar com seu pr\u00f3prio reposit\u00f3rio remoto. Normalmente, voc\u00ea n\u00e3o receber\u00e1 uma resposta ap\u00f3s executar este comando, mas certifique-se de ter uma conex\u00e3o com a internet. O segundo comando, gitbranch -M main, altera o nome do seu branch principal para \"main\". O branch padr\u00e3o pode ser criada como \"master\", mas \"main\" \u00e9 o nome padr\u00e3o para este reposit\u00f3rio agora. Geralmente, n\u00e3o h\u00e1 resposta aqui.** ** O \u00faltimo comando, gitpush -u originmain , envia seu reposit\u00f3rio do seu dispositivo local para o GitHub. Voc\u00ea deve obter uma resposta semelhante a esta: gitpush Para ajud\u00e1-lo a aprofundar sua compreens\u00e3o dos est\u00e1gios do arquivo, farei altera\u00e7\u00f5es no arquivo e, em seguida, enviarei a nova vers\u00e3o para o GitHub. Lembre-se de que nosso arquivo agora est\u00e1 no estado confirmado. Vamos fazer altera\u00e7\u00f5es no arquivo e anotar os estados. Vou adicionar uma nova tarefa \u00e0 lista de tarefas: MINHA LISTA DE TAREFAS Escrever um artigo. Programar. Estudar pelos livros. Chegar nas aulas a tempo. Visitar minha tia. **6. Me candidatar a trabalhos remotos. ** Praticar programa\u00e7\u00e3o Depois de adicionar a nova tarefa, execute o comando git status. Isto \u00e9 o que voc\u00ea dever\u00e1 ver:** ** git status Depois de fazer altera\u00e7\u00f5es no arquivo, ele foi movido para o estado modificado, mas ainda n\u00e3o est\u00e1 preparado para confirma\u00e7\u00e3o. Ent\u00e3o, voc\u00ea ainda n\u00e3o pode envi\u00e1-lo para o GitHub. O Git n\u00e3o tirou um instant\u00e2neo final desse estado atual, pois est\u00e1 apenas comparando as altera\u00e7\u00f5es que fizemos agora com o \u00faltimo instant\u00e2neo. Agora vamos adicionar (preparar) este arquivo e, em seguida, confirm\u00e1-lo e envi\u00e1-lo. Isto \u00e9 igual ao que fizemos na \u00faltima se\u00e7\u00e3o. Primeiro, adicionamos o arquivo usando gitadd ., que adiciona todos os arquivos na pasta (um \u00fanico arquivo, no nosso caso). Em seguida, confirmamos o arquivo executando gitcommit -m \"added new task\" (a mensagem significa \"nova tarefa adicionada\") seguido de gitpush -u originmain . Essas s\u00e3o as tr\u00eas etapas para enviar seus arquivos modificados para o GitHub. Voc\u00ea adiciona, confirma e, em seguida, envia. Espero que agora voc\u00ea entenda os est\u00e1gios do arquivo e os comandos associados a eles.","title":"Como confirmar (commit) arquivos no Git"},{"location":"_Disciplina/github/#como-usar-branches-no-git","text":"Com branches, voc\u00ea pode criar uma c\u00f3pia de um arquivo no qual gostaria de trabalhar sem estragar a c\u00f3pia original. Voc\u00ea pode mesclar essas altera\u00e7\u00f5es com a c\u00f3pia original ou apenas deixar o branch permanecer independente. Antes de come\u00e7armos a usar branches, quero mostrar uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio, que se parece com isso: branchmain A imagem acima mostra nosso branch principal com os dois \u00faltimos commits (o primeiro commit e o commit da nova tarefa adicionada). Neste ponto, quero adicionar mais tarefas \u00e0 lista, mas ainda n\u00e3o tenho certeza se as quero na minha lista principal. Ent\u00e3o, vou criar um outro branch chamado \u202ftest para ver como ficaria minha lista com mais tarefas inclu\u00eddas. Para criar um outro branch, execute este comando: git checkout -b test. Vamos dividir isso em partes e explicar. checkout diz ao Git que deve mudar para um outro branch. -bdiz ao Git para criar esse outro branch. test\u00e9 o nome do branch a ser criado e alterado. Aqui est\u00e1 a resposta que voc\u00ea deve obter: git checkout -b Agora que criamos um outro branch, \u00e9 assim que nosso reposit\u00f3rio ficar\u00e1: gitbranch Criamos o outro branch a partir do estado do nosso \u00faltimo commit. Vamos agora adicionar mais tarefas a esse novo branch. MINHA LISTA DE TAREFAS 1.Escrever um artigo.** ** 2.Programar. 3.Estudar pelos livros.** ** 4.Chegar nas aulas a tempo.** ** 5.Visitar minha tia.** ** 6.Me candidatar a trabalhos remotos.** ** 7.Praticar programa\u00e7\u00e3o 8.Completar a tarefa de est\u00e1gio.** ** 9.Praticar aberturas do xadrez.** ** 10.Resolver quebra-cabe\u00e7asdo xadrez .** ** 11.Verificar o cronograma dos testes . \u202f** ** ** Adicionamos quatro novas tarefas. Para mesclar o novo estado com o branchmain , voc\u00ea deve primeiro preparar e confirmar esse branch. N\u00e3o entrarei em detalhes sobre o assunto, pois fizemos isso duas vezes na \u00faltima se\u00e7\u00e3o. ** Voc\u00ea deve tentar fazer isso sozinho para entender como funciona. Como dica, adicione o arquivo e, em seguida, confirme com uma mensagem (consulte a se\u00e7\u00e3o anterior para obter detalhes de como fazer isso). Depois de confirmar seu branchtest, volte para o branchmainexecutando este comando: git checkout main. Voc\u00ea notou que n\u00e3o adicionamos o -b ? Isso ocorre porque n\u00e3o estamos criando um outro branch, mas mudando para um branch existente. Voc\u00ea pode verificar todos os branches que existem em seu reposit\u00f3rio executando o comando gitbranch ** ** Agora, podemos mesclar as altera\u00e7\u00f5es que fizemos no branchtestno branchmainexecutando git merge test. Neste ponto, voc\u00ea ver\u00e1 todas as altera\u00e7\u00f5es feitas no branchtestrefletidas no branchmain. Voc\u00ea tamb\u00e9m deve receber uma resposta semelhante a esta: git merge Aqui est\u00e1 uma representa\u00e7\u00e3o visual do nosso reposit\u00f3rio: git merge Se voc\u00ea continuar a enviar seu reposit\u00f3rio para o GitHub, ver\u00e1 que o branchtest n\u00e3o ser\u00e1 enviado. Ele permanecer\u00e1 apenas em seu reposit\u00f3rio local. Se voc\u00ea quiser enviar seu branchtest , mude para ele usando git checkout test e execute o comando gitpush -u origin test .","title":"**Como usar branches no Git **"},{"location":"_Disciplina/github/#como-extrair-um-repositorio-no-git","text":"Fazer pullno Git significa clonar o estado atual de um reposit\u00f3rio remoto em seu computador/reposit\u00f3rio. Isso \u00e9 \u00fatil quando voc\u00ea deseja trabalhar em seu reposit\u00f3rio de um computador diferente ou quando est\u00e1 contribuindo para um projeto de c\u00f3digo aberto on-line. Para testar isso, n\u00e3o se preocupe em mudar para um novo computador. Basta executar cd .. para sair do diret\u00f3rio atual e voltar uma etapa. No meu caso, naveguei de volta para a minha \u00e1rea de trabalho.** ** V\u00e1 para o GitHub e, na p\u00e1gina principal do seu reposit\u00f3rio, voc\u00ea ver\u00e1 um bot\u00e3o verde que diz \"Code\". Ao clicar no bot\u00e3o, voc\u00ea dever\u00e1 ver algumas op\u00e7\u00f5es em um menu suspenso. V\u00e1 em frente e copie o URL no formato HTTPS. Depois disso, execute git clone SEU_URL_DE_HTTPS. Este comando puxa o reposit\u00f3rio remoto para seu computador local em uma pasta chamada git-and-git-tutorial. Isto \u00e9 o que voc\u00ea dever\u00e1 ver em seu terminal:** ** git clone","title":"**Como extrair um reposit\u00f3rio no Git **"},{"location":"_Disciplina/github/#conclusao","text":"Este artigo abordou os comandos b\u00e1sicos que ajudar\u00e3o voc\u00ea a come\u00e7ar a usar o Git. Tamb\u00e9m come\u00e7amos a aprender a usar o GitHub. Se voc\u00ea seguiu at\u00e9 este ponto, parab\u00e9ns. Voc\u00ea est\u00e1 pronto para seguir em frente. Agora, voc\u00ea pode usar o Git em seus projetos, independentemente da linguagem de programa\u00e7\u00e3o que estiver usando. Voc\u00ea deve saber que esses n\u00e3o s\u00e3o todos os comandos que existem no Git \u2013 portanto, sinta-se \u00e0 vontade para fazer mais pesquisas para aprender mais comandos e seus usos. Este\u00e9 um \u00f3timo lugar para ver uma lista detalhada de mais comandos do Git (em ingl\u00eas).** **","title":"Conclus\u00e3o"},{"location":"_Disciplina/github/#links","text":"git - guia pr\u00e1tico** ** ** ** https://rogerdudler.github.io/git-guide/index.pt_BR.html **--fast-version-control ** https://git-scm.com/book/pt-br/v2 Interactive, Visual Git https://the-turing-way.netlify.app/reproducible-research/vcs/vcs-git-interactive LearnGitBranching!** ** https://learngitbranching.js.org/?locale=pt_BR UnderstandingGitthroughimages** ** https://dev.to/nopenoshishi/understanding-git-through-images-4an1 A Visual GitReference https://marklodato.github.io/visual-git-guide/index-en.html A Grip OnGit https://agripongit.vincenttunru.com/ VisualizingGitConceptswith D3 https://onlywei.github.io/explain-git-with-d3/#rebase Como criar um reposit\u00f3rio https://www.atlassian.com/br/git/tutorials/setting-up-a-repository","title":"Links"},{"location":"_Disciplina/mkdocs/","text":"MkDocs Commands * mkdocs new [dir-name] - Create a new project. * mkdocs serve - Start the live-reloading docs server. * mkdocs build - Build the documentation site. * mkdocs -h - Print help message and exit. * mkdocs deploy - Deploy site builded on Github. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDocs"},{"location":"_Disciplina/mkdocs/#mkdocs","text":"","title":"MkDocs"},{"location":"_Disciplina/mkdocs/#commands","text":"* mkdocs new [dir-name] - Create a new project. * mkdocs serve - Start the live-reloading docs server. * mkdocs build - Build the documentation site. * mkdocs -h - Print help message and exit. * mkdocs deploy - Deploy site builded on Github.","title":"Commands"},{"location":"_Disciplina/mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/avalia/","text":"Avalia\u00e7\u00f5es ACs AP1 - Entrega 25/09/2024 - Envio no Github(Prof. adicionado como colaborador) do aluno At\u00e9 as 9:20h AP2 Todas as atividades de avalia\u00e7\u00e3o devem ser publicadas numa pasta /docs. Nessa pasta dever\u00e1 ser criada as pastas ACs, AP1 e AP2. Ap\u00f3s a cria\u00e7\u00e3o das pastas deve ser feita a configura\u00e7\u00e3o do github pages. Settings Pages Em Branch fazer a sele\u00e7\u00e3o da pasta /docs para a publica\u00e7\u00e3o Salvar","title":"Avalia\u00e7\u00f5es"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/avalia/#avaliacoes","text":"ACs AP1 - Entrega 25/09/2024 - Envio no Github(Prof. adicionado como colaborador) do aluno At\u00e9 as 9:20h AP2 Todas as atividades de avalia\u00e7\u00e3o devem ser publicadas numa pasta /docs. Nessa pasta dever\u00e1 ser criada as pastas ACs, AP1 e AP2. Ap\u00f3s a cria\u00e7\u00e3o das pastas deve ser feita a configura\u00e7\u00e3o do github pages. Settings Pages Em Branch fazer a sele\u00e7\u00e3o da pasta /docs para a publica\u00e7\u00e3o Salvar","title":"Avalia\u00e7\u00f5es"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/","text":"Entregas dos ACs AC1 - Entrega 04/09/2024 AC2 - Entrega 11/09/2024 AC3 - Entrega 18/09/2024 AC4 - Entrega 22/10/2024 AC5 - Entrega 06/11/2024 AC6 - Entrega 13/11/2024 Reposit\u00f3rio de Avalia\u00e7\u00f5es ACs e APs Rafael Viana Guilherme Pedro Bernardo Vitor Gabriel Juliana Sarah Arthur - n\u00e3o estou adicionado como colaborador. Matheus Luiz Fabiano","title":"Index"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/#entregas-dos-acs","text":"AC1 - Entrega 04/09/2024 AC2 - Entrega 11/09/2024 AC3 - Entrega 18/09/2024 AC4 - Entrega 22/10/2024 AC5 - Entrega 06/11/2024 AC6 - Entrega 13/11/2024 Reposit\u00f3rio de Avalia\u00e7\u00f5es ACs e APs Rafael Viana Guilherme Pedro Bernardo Vitor Gabriel Juliana Sarah Arthur - n\u00e3o estou adicionado como colaborador. Matheus Luiz Fabiano","title":"Entregas dos ACs"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac1/","text":"AC1: Criando uma p\u00e1gina da Web b\u00e1sica Objetivo : Ao final desta atividade, os alunos devem ser capazes de demonstrar sua compreens\u00e3o dos elementos b\u00e1sicos e da estrutura do HTML, criando uma p\u00e1gina da web de perfil pessoal. Instru\u00e7\u00f5es para a p\u00e1gina : Cabe\u00e7alho : Inclua um t\u00edtulo no topo com seu nome e um subt\u00edtulo com uma breve descri\u00e7\u00e3o de voc\u00ea. Imagem : Incorpore uma foto de perfil ou qualquer imagem representativa. Par\u00e1grafo : Escreva um pequeno par\u00e1grafo apresentando a si mesmo, sua forma\u00e7\u00e3o, interesses ou quaisquer curiosidades. Listas: Crie uma lista ordenada de seus 3 livros/filmes/m\u00fasicas favoritos. Crie uma lista n\u00e3o ordenada de 3 hobbies ou interesses. Hiperlinks : Adicione pelo menos dois links externos - um para o seu site favorito e outro para um artigo ou recurso interessante que voc\u00ea leu recentemente. Imagens : Adicione uma nova se\u00e7\u00e3o com duas atividades que voc\u00ea gosta. Escreva um pequeno texto e adicione uma imagem da atividade com link para um site sobre ela. Notas de rodap\u00e9 : Na parte inferior, inclua uma pequena se\u00e7\u00e3o de notas de rodap\u00e9 com cr\u00e9ditos para quaisquer imagens ou conte\u00fado que voc\u00ea usou. Considera\u00e7\u00f5es adicionais : Certifique-se de que seu documento tenha uma declara\u00e7\u00e3o DOCTYPE adequada e inclua tags essenciais como , e . <html>``<head>``<body> Use coment\u00e1rios para rotular cada se\u00e7\u00e3o. Verifique se o c\u00f3digo est\u00e1 recuado corretamente para facilitar a leitura.","title":"Ac1"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac1/#ac1-criando-uma-pagina-da-web-basica","text":"Objetivo : Ao final desta atividade, os alunos devem ser capazes de demonstrar sua compreens\u00e3o dos elementos b\u00e1sicos e da estrutura do HTML, criando uma p\u00e1gina da web de perfil pessoal. Instru\u00e7\u00f5es para a p\u00e1gina : Cabe\u00e7alho : Inclua um t\u00edtulo no topo com seu nome e um subt\u00edtulo com uma breve descri\u00e7\u00e3o de voc\u00ea. Imagem : Incorpore uma foto de perfil ou qualquer imagem representativa. Par\u00e1grafo : Escreva um pequeno par\u00e1grafo apresentando a si mesmo, sua forma\u00e7\u00e3o, interesses ou quaisquer curiosidades. Listas: Crie uma lista ordenada de seus 3 livros/filmes/m\u00fasicas favoritos. Crie uma lista n\u00e3o ordenada de 3 hobbies ou interesses. Hiperlinks : Adicione pelo menos dois links externos - um para o seu site favorito e outro para um artigo ou recurso interessante que voc\u00ea leu recentemente. Imagens : Adicione uma nova se\u00e7\u00e3o com duas atividades que voc\u00ea gosta. Escreva um pequeno texto e adicione uma imagem da atividade com link para um site sobre ela. Notas de rodap\u00e9 : Na parte inferior, inclua uma pequena se\u00e7\u00e3o de notas de rodap\u00e9 com cr\u00e9ditos para quaisquer imagens ou conte\u00fado que voc\u00ea usou. Considera\u00e7\u00f5es adicionais : Certifique-se de que seu documento tenha uma declara\u00e7\u00e3o DOCTYPE adequada e inclua tags essenciais como , e . <html>``<head>``<body> Use coment\u00e1rios para rotular cada se\u00e7\u00e3o. Verifique se o c\u00f3digo est\u00e1 recuado corretamente para facilitar a leitura.","title":"AC1: Criando uma p\u00e1gina da Web b\u00e1sica"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac2/","text":"AC2: P\u00e1gina da Web com Formul\u00e1rios e Multim\u00eddia Objetivo : Os alunos devem ser capazes de implementar e compreender a funcionalidade dos formul\u00e1rios HTML e integrar elementos multim\u00eddia em uma p\u00e1gina da web. Instru\u00e7\u00f5es para a p\u00e1gina : T\u00edtulo : Comece com um t\u00edtulo, \"Feedback para a p\u00e1gina de perfil de [Seu nome]\". Formul\u00e1rio: Dados pessoais: Campos de entrada para (tipo de texto) e (tipo de email). Name``Email Uma sele\u00e7\u00e3o suspensa para com op\u00e7\u00f5es como \"Google\", \"M\u00eddia social\", \"Amigo\", etc. How did you find my profile? Se\u00e7\u00e3o de feedback: Inclua uma \u00e1rea de texto para os visitantes escreverem coment\u00e1rios ou feedback. Use os bot\u00f5es de op\u00e7\u00e3o para \"Voc\u00ea gostou do meu perfil?\" com as op\u00e7\u00f5es \"Sim\", \"N\u00e3o\" e \"Talvez\". Use caixas de sele\u00e7\u00e3o para \"O que voc\u00ea gostou no perfil?\" com op\u00e7\u00f5es como \"Design\", \"Conte\u00fado\", \"Facilidade de uso\" e \"Outros\". Submiss\u00e3o: Um bot\u00e3o \"Enviar\" para enviar o formul\u00e1rio. Um bot\u00e3o \"Redefinir\" para limpar o formul\u00e1rio. Multim\u00eddia: Incorpore um videoclipe (pode ser uma introdu\u00e7\u00e3o pessoal, uma cena de filme favorita, um videoclipe, etc.). Use uma plataforma como YouTube ou Vimeo ou crie um link direto para um arquivo de v\u00eddeo. Adicione um clipe de \u00e1udio ou uma m\u00fasica favorita. Voc\u00ea pode usar plataformas como o SoundCloud ou vincular diretamente a um arquivo de \u00e1udio. Notas de rodap\u00e9 : inclua uma se\u00e7\u00e3o na parte inferior agradecendo aos usu\u00e1rios por seus coment\u00e1rios. Considera\u00e7\u00f5es adicionais : Seu formul\u00e1rio n\u00e3o precisa enviar dados para um servidor. O foco est\u00e1 na estrutura e nos elementos da forma. Use o elemento corretamente para entradas de formul\u00e1rio. <label> Certifique-se de que seus componentes multim\u00eddia tenham controles adequados (como reproduzir, pausar, volume). Organize adequadamente o layout para facilidade de uso. Comente suas se\u00e7\u00f5es de c\u00f3digo para melhorar a legibilidade. Ao concluir essas atividades, os alunos ter\u00e3o experi\u00eancia pr\u00e1tica na cria\u00e7\u00e3o de p\u00e1ginas da web com elementos variados, desde estruturas b\u00e1sicas at\u00e9 formul\u00e1rios e conte\u00fado multim\u00eddia.","title":"Ac2"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac2/#ac2-pagina-da-web-com-formularios-e-multimidia","text":"Objetivo : Os alunos devem ser capazes de implementar e compreender a funcionalidade dos formul\u00e1rios HTML e integrar elementos multim\u00eddia em uma p\u00e1gina da web. Instru\u00e7\u00f5es para a p\u00e1gina : T\u00edtulo : Comece com um t\u00edtulo, \"Feedback para a p\u00e1gina de perfil de [Seu nome]\". Formul\u00e1rio: Dados pessoais: Campos de entrada para (tipo de texto) e (tipo de email). Name``Email Uma sele\u00e7\u00e3o suspensa para com op\u00e7\u00f5es como \"Google\", \"M\u00eddia social\", \"Amigo\", etc. How did you find my profile? Se\u00e7\u00e3o de feedback: Inclua uma \u00e1rea de texto para os visitantes escreverem coment\u00e1rios ou feedback. Use os bot\u00f5es de op\u00e7\u00e3o para \"Voc\u00ea gostou do meu perfil?\" com as op\u00e7\u00f5es \"Sim\", \"N\u00e3o\" e \"Talvez\". Use caixas de sele\u00e7\u00e3o para \"O que voc\u00ea gostou no perfil?\" com op\u00e7\u00f5es como \"Design\", \"Conte\u00fado\", \"Facilidade de uso\" e \"Outros\". Submiss\u00e3o: Um bot\u00e3o \"Enviar\" para enviar o formul\u00e1rio. Um bot\u00e3o \"Redefinir\" para limpar o formul\u00e1rio. Multim\u00eddia: Incorpore um videoclipe (pode ser uma introdu\u00e7\u00e3o pessoal, uma cena de filme favorita, um videoclipe, etc.). Use uma plataforma como YouTube ou Vimeo ou crie um link direto para um arquivo de v\u00eddeo. Adicione um clipe de \u00e1udio ou uma m\u00fasica favorita. Voc\u00ea pode usar plataformas como o SoundCloud ou vincular diretamente a um arquivo de \u00e1udio. Notas de rodap\u00e9 : inclua uma se\u00e7\u00e3o na parte inferior agradecendo aos usu\u00e1rios por seus coment\u00e1rios. Considera\u00e7\u00f5es adicionais : Seu formul\u00e1rio n\u00e3o precisa enviar dados para um servidor. O foco est\u00e1 na estrutura e nos elementos da forma. Use o elemento corretamente para entradas de formul\u00e1rio. <label> Certifique-se de que seus componentes multim\u00eddia tenham controles adequados (como reproduzir, pausar, volume). Organize adequadamente o layout para facilidade de uso. Comente suas se\u00e7\u00f5es de c\u00f3digo para melhorar a legibilidade. Ao concluir essas atividades, os alunos ter\u00e3o experi\u00eancia pr\u00e1tica na cria\u00e7\u00e3o de p\u00e1ginas da web com elementos variados, desde estruturas b\u00e1sicas at\u00e9 formul\u00e1rios e conte\u00fado multim\u00eddia.","title":"AC2: P\u00e1gina da Web com Formul\u00e1rios e Multim\u00eddia"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac3/","text":"AC3: Estilizando uma p\u00e1gina da Web b\u00e1sica com CSS ** Dura\u00e7\u00e3o : 70 minutos** Objetivo : Os alunos aplicar\u00e3o seletores, propriedades e valores CSS para aprimorar o design de uma determinada p\u00e1gina HTML b\u00e1sica. Instru\u00e7\u00f5es : Estrutura da p\u00e1gina : Baixe a p\u00e1gina HTML b\u00e1sica fornecida, que inclui um cabe\u00e7alho, alguns par\u00e1grafos, uma imagem e uma lista. Voc\u00ea tamb\u00e9m pode usar o arquivo HTML que desenvolveu para se apresentar. Comece adicionando um estilo geral: Defina uma cor de fundo para a p\u00e1gina inteira. Defina uma largura m\u00e1xima para o conte\u00fado e centralize-o. Tipografia e cor : Modifique o texto: Defina um tamanho de fonte base e uma altura de linha para a p\u00e1gina inteira. Escolha uma fam\u00edlia de fontes para cabe\u00e7alhos e outra para o corpo do texto. Ajuste a cor e o peso dos cabe\u00e7alhos. Adicione altera\u00e7\u00f5es de cor instant\u00e2neas para links. Estilizando imagens e listas : Para a imagem: Adicione uma borda. Adicione um pouco de sombra para um efeito lifting. Certifique-se de que seja responsivo, diminuindo com a largura da p\u00e1gina. Para a lista: Adicione marcadores ou n\u00fameros personalizados. Ajuste as margens e o preenchimento para obter o espa\u00e7amento adequado. Feedback e revis\u00e3o : Junte-se a outro aluno e revise o trabalho um do outro. Ofere\u00e7a feedback sobre suas escolhas de design e quaisquer melhorias que possam ser feitas. Essas atividades s\u00e3o estruturadas para garantir que os alunos n\u00e3o apenas pratiquem os aspectos t\u00e9cnicos do CSS, mas tamb\u00e9m pensem nas decis\u00f5es de design e obtenham feedback. No final, eles devem ter uma boa compreens\u00e3o de como projetar e fazer o layout de uma p\u00e1gina da Web usando CSS. ARQUIVO HTML: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Styling with CSS Activity</title> <!-- <style> Put your CSS here. For now, it's commented out. </style> --> </head> <body> <header> <h1>Welcome to My Page</h1> <p>This is a brief introduction about the page.</p> </header> <main> <section> <h2>About Me</h2> <p>My name is Jane Doe and I'm a web developer from New York. I love creating responsive and interactive websites. In my free time, I enjoy hiking, reading, and exploring new cafes in the city.</p> <img src=\"https://via.placeholder.com/350x150\" alt=\"A placeholder image of Jane Doe\"> </section> <section> <h2>My Favorite Books</h2> <ul> <li><a href=\"https://en.wikipedia.org/wiki/The_Great_Gatsby\">The Great Gatsby</a> by F. Scott Fitzgerald</li> <li><a href=\"https://en.wikipedia.org/wiki/To_Kill_a_Mockingbird\">To Kill a Mockingbird</a> by Harper Lee</li> <li><a href=\"https://en.wikipedia.org/wiki/Nineteen_Eighty-Four\">1984</a> by George Orwell</li> <li><a href=\"https://en.wikipedia.org/wiki/Pride_and_Prejudice\">Pride and Prejudice</a> by Jane Austen</li> </ul> </section> </main> <footer> <p>\u00a9 2023 by Jane Doe. All Rights Reserved.</p> </footer> </body> </html> Esta p\u00e1gina cont\u00e9m: Um cabe\u00e7alho com um t\u00edtulo principal e introdu\u00e7\u00e3o. Uma \u00e1rea de conte\u00fado principal com duas se\u00e7\u00f5es: Uma se\u00e7\u00e3o \"Sobre mim\" com uma pequena biografia e uma imagem. Uma se\u00e7\u00e3o listando livros favoritos. Um rodap\u00e9 com um aviso de direitos autorais. Espera-se que os alunos estilizem isso usando CSS, conforme descrito na atividade. O link da imagem \u00e9 um espa\u00e7o reservado e pode ser substitu\u00eddo por qualquer imagem que os alunos desejem usar.","title":"Ac3"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac3/#ac3-estilizando-uma-pagina-da-web-basica-com-css","text":"** Dura\u00e7\u00e3o : 70 minutos** Objetivo : Os alunos aplicar\u00e3o seletores, propriedades e valores CSS para aprimorar o design de uma determinada p\u00e1gina HTML b\u00e1sica. Instru\u00e7\u00f5es : Estrutura da p\u00e1gina : Baixe a p\u00e1gina HTML b\u00e1sica fornecida, que inclui um cabe\u00e7alho, alguns par\u00e1grafos, uma imagem e uma lista. Voc\u00ea tamb\u00e9m pode usar o arquivo HTML que desenvolveu para se apresentar. Comece adicionando um estilo geral: Defina uma cor de fundo para a p\u00e1gina inteira. Defina uma largura m\u00e1xima para o conte\u00fado e centralize-o. Tipografia e cor : Modifique o texto: Defina um tamanho de fonte base e uma altura de linha para a p\u00e1gina inteira. Escolha uma fam\u00edlia de fontes para cabe\u00e7alhos e outra para o corpo do texto. Ajuste a cor e o peso dos cabe\u00e7alhos. Adicione altera\u00e7\u00f5es de cor instant\u00e2neas para links. Estilizando imagens e listas : Para a imagem: Adicione uma borda. Adicione um pouco de sombra para um efeito lifting. Certifique-se de que seja responsivo, diminuindo com a largura da p\u00e1gina. Para a lista: Adicione marcadores ou n\u00fameros personalizados. Ajuste as margens e o preenchimento para obter o espa\u00e7amento adequado. Feedback e revis\u00e3o : Junte-se a outro aluno e revise o trabalho um do outro. Ofere\u00e7a feedback sobre suas escolhas de design e quaisquer melhorias que possam ser feitas. Essas atividades s\u00e3o estruturadas para garantir que os alunos n\u00e3o apenas pratiquem os aspectos t\u00e9cnicos do CSS, mas tamb\u00e9m pensem nas decis\u00f5es de design e obtenham feedback. No final, eles devem ter uma boa compreens\u00e3o de como projetar e fazer o layout de uma p\u00e1gina da Web usando CSS. ARQUIVO HTML: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Styling with CSS Activity</title> <!-- <style> Put your CSS here. For now, it's commented out. </style> --> </head> <body> <header> <h1>Welcome to My Page</h1> <p>This is a brief introduction about the page.</p> </header> <main> <section> <h2>About Me</h2> <p>My name is Jane Doe and I'm a web developer from New York. I love creating responsive and interactive websites. In my free time, I enjoy hiking, reading, and exploring new cafes in the city.</p> <img src=\"https://via.placeholder.com/350x150\" alt=\"A placeholder image of Jane Doe\"> </section> <section> <h2>My Favorite Books</h2> <ul> <li><a href=\"https://en.wikipedia.org/wiki/The_Great_Gatsby\">The Great Gatsby</a> by F. Scott Fitzgerald</li> <li><a href=\"https://en.wikipedia.org/wiki/To_Kill_a_Mockingbird\">To Kill a Mockingbird</a> by Harper Lee</li> <li><a href=\"https://en.wikipedia.org/wiki/Nineteen_Eighty-Four\">1984</a> by George Orwell</li> <li><a href=\"https://en.wikipedia.org/wiki/Pride_and_Prejudice\">Pride and Prejudice</a> by Jane Austen</li> </ul> </section> </main> <footer> <p>\u00a9 2023 by Jane Doe. All Rights Reserved.</p> </footer> </body> </html> Esta p\u00e1gina cont\u00e9m: Um cabe\u00e7alho com um t\u00edtulo principal e introdu\u00e7\u00e3o. Uma \u00e1rea de conte\u00fado principal com duas se\u00e7\u00f5es: Uma se\u00e7\u00e3o \"Sobre mim\" com uma pequena biografia e uma imagem. Uma se\u00e7\u00e3o listando livros favoritos. Um rodap\u00e9 com um aviso de direitos autorais. Espera-se que os alunos estilizem isso usando CSS, conforme descrito na atividade. O link da imagem \u00e9 um espa\u00e7o reservado e pode ser substitu\u00eddo por qualquer imagem que os alunos desejem usar.","title":"AC3: Estilizando uma p\u00e1gina da Web b\u00e1sica com CSS"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac4/","text":"AC4: Criando um Gerenciador de Lista de Tarefas ** Dura\u00e7\u00e3o : 70 minutos** Objetivo: Desenvolver um pequeno programa que permite gerenciar uma lista de tarefas. Esse programa ir\u00e1 adicionar, remover e listar as tarefas com base nas op\u00e7\u00f5es fornecidas pelo usu\u00e1rio. Instru\u00e7\u00f5es : Vari\u00e1veis e Tipos de Dados: Declare uma vari\u00e1vel que ser\u00e1 uma lista (array) vazia para armazenar as tarefas. Use diferentes tipos de dados, como strings para as tarefas e n\u00fameros para a escolha do usu\u00e1rio. Operadores e Controle de Fluxo: Use operadores de compara\u00e7\u00e3o para verificar a escolha do usu\u00e1rio. Use um loop para permitir que o usu\u00e1rio continue gerenciando a lista at\u00e9 que ele escolha sair. Fun\u00e7\u00f5es com Arrays e Strings: Adicionar uma nova tarefa. Remover uma tarefa espec\u00edfica. Listar todas as tarefas. Instru\u00e7\u00f5es: Crie um arquivo todo.js e adicione o c\u00f3digo JavaScript a seguir. Execute-o em um navegador ou vscode para testar. Conceitos Envolvidos: Vari\u00e1veis ( let , const , var ) : let tasks = [] : Uma vari\u00e1vel que pode mudar durante o programa (array). const newTask : Uma vari\u00e1vel constante que n\u00e3o mudar\u00e1 ap\u00f3s ser definida. Tipos de Dados: tasks : Um array que armazena strings. newTask : Uma string que representa o nome da tarefa. Fluxo de Controle: switch-case : Usado para tratar as op\u00e7\u00f5es do menu. while : Mant\u00e9m o programa em execu\u00e7\u00e3o at\u00e9 o usu\u00e1rio escolher sair. Arrays: M\u00e9todos como .push() para adicionar uma nova tarefa e .splice() para remover uma tarefa do array. Strings: Manipula\u00e7\u00e3o de strings para exibir mensagens e armazenar o nome das tarefas. Operadores: Operadores de compara\u00e7\u00e3o (como >= , < , e === ) para verificar as entradas do usu\u00e1rio.","title":"Ac4"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac4/#ac4-criando-um-gerenciador-de-lista-de-tarefas","text":"** Dura\u00e7\u00e3o : 70 minutos** Objetivo: Desenvolver um pequeno programa que permite gerenciar uma lista de tarefas. Esse programa ir\u00e1 adicionar, remover e listar as tarefas com base nas op\u00e7\u00f5es fornecidas pelo usu\u00e1rio.","title":"AC4: Criando um Gerenciador de Lista de Tarefas"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac4/#instrucoes","text":"Vari\u00e1veis e Tipos de Dados: Declare uma vari\u00e1vel que ser\u00e1 uma lista (array) vazia para armazenar as tarefas. Use diferentes tipos de dados, como strings para as tarefas e n\u00fameros para a escolha do usu\u00e1rio. Operadores e Controle de Fluxo: Use operadores de compara\u00e7\u00e3o para verificar a escolha do usu\u00e1rio. Use um loop para permitir que o usu\u00e1rio continue gerenciando a lista at\u00e9 que ele escolha sair. Fun\u00e7\u00f5es com Arrays e Strings: Adicionar uma nova tarefa. Remover uma tarefa espec\u00edfica. Listar todas as tarefas.","title":"Instru\u00e7\u00f5es :"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac4/#instrucoes_1","text":"Crie um arquivo todo.js e adicione o c\u00f3digo JavaScript a seguir. Execute-o em um navegador ou vscode para testar.","title":"Instru\u00e7\u00f5es:"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/AC/ac4/#conceitos-envolvidos","text":"Vari\u00e1veis ( let , const , var ) : let tasks = [] : Uma vari\u00e1vel que pode mudar durante o programa (array). const newTask : Uma vari\u00e1vel constante que n\u00e3o mudar\u00e1 ap\u00f3s ser definida. Tipos de Dados: tasks : Um array que armazena strings. newTask : Uma string que representa o nome da tarefa. Fluxo de Controle: switch-case : Usado para tratar as op\u00e7\u00f5es do menu. while : Mant\u00e9m o programa em execu\u00e7\u00e3o at\u00e9 o usu\u00e1rio escolher sair. Arrays: M\u00e9todos como .push() para adicionar uma nova tarefa e .splice() para remover uma tarefa do array. Strings: Manipula\u00e7\u00e3o de strings para exibir mensagens e armazenar o nome das tarefas. Operadores: Operadores de compara\u00e7\u00e3o (como >= , < , e === ) para verificar as entradas do usu\u00e1rio.","title":"Conceitos Envolvidos:"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/","text":"AP1 Objetivo: Desenvolver um site responsivo utilizando HTML , CSS e t\u00e9cnicas de layout como Flexbox e CSS Grid , seguindo boas pr\u00e1ticas de design web. Escolha um tema(Loja de hardware, brinquedos, clubes, f\u00e2-clube, etc.) Entrega: Prazo: 25/09/2024 at\u00e9 as 9:20h. Enviar o projeto para o reposit\u00f3rio em que o professor foi adicionado como colaborador em uma pasta chamada ap1 dentro da pasta docs, com HTML , CSS , e imagens utilizados. Crit\u00e9rios de Avalia\u00e7\u00e3o: Uso correto das tags HTML5 sem\u00e2nticas. Implementa\u00e7\u00e3o de layout responsivo com Flexbox e/ou Grid para o nav e footer. Design e usabilidade do site (est\u00e9tica, organiza\u00e7\u00e3o visual, navega\u00e7\u00e3o). Organiza\u00e7\u00e3o e clareza do c\u00f3digo. Implementa\u00e7\u00e3o correta de media queries para diferentes dispositivos. Funcionalidade e layout do formul\u00e1rio de contato . Requisitos: Estrutura do site: O site dever\u00e1 conter, no m\u00ednimo, 4 p\u00e1ginas interligadas (Home, Sobre, Servi\u00e7os, Contato). Utiliza\u00e7\u00e3o correta de tags sem\u00e2nticas do HTML5 (ex.: <header> , <nav> , <main> , <section> , <article> , <footer> ). Adicione estilos globais iniciais: tamanho da fonte, fam\u00edlia, cor de fundo, etc. Design da barra de navega\u00e7\u00e3o: Usando flexbox ou grid, crie uma barra de navega\u00e7\u00e3o que: Exibe seus itens em uma linha no desktop(telas grandes.) Empilha itens verticalmente para celular(tamanhos pequenos. Tem um logotipo \u00e0 esquerda e links de navega\u00e7\u00e3o \u00e0 direita. Responsividade: O site deve se adaptar corretamente a diferentes tamanhos de tela (desktop e smartphone). Utiliza\u00e7\u00e3o de media queries no CSS para ajustar o layout conforme a largura da tela. Layout: Dever\u00e1 ser poss\u00edvel ver diferentes layouts de p\u00e1gina dependendo do dispositivo (ex.: layout em uma coluna para mobile, e em duas ou mais colunas para desktop). Conte\u00fado: Cada p\u00e1gina deve conter conte\u00fado informativo fict\u00edcio (utilizar Lorem Ipsum quando necess\u00e1rio). Incluir imagens e v\u00eddeos relevantes e de alta qualidade. Certifique-se de que as imagens sejam redimension\u00e1veis e n\u00e3o distor\u00e7am em diferentes resolu\u00e7\u00f5es. Uma navega\u00e7\u00e3o clara entre as p\u00e1ginas deve ser poss\u00edvel por meio de um menu no <nav> , que deve ser responsivo. Na p\u00e1gina inicial o conte\u00fado principal deve usar a estrutura abaixo. Usando o sistema de layout de sua escolha: Crie um layout de tr\u00eas colunas. Garanta preenchimento consistente e margem entre os elementos. <main> <article> <h2>Lorem ipsum dolor sit amet</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus lacinia odio vitae vestibulum.</p> </article> <section class=\"flex-gallery\"> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 1\"> <figcaption>Image 1</figcaption> </figure> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 2\"> <figcaption>Image 2</figcaption> </figure> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 3\"> <figcaption>Image 3</figcaption> </figure> </section> <section class=\"grid-layout\"> <div>Grid Item A</div> <div>Grid Item B</div> <div>Grid Item C</div> <div>Grid Item D</div> </section> </main> 6. Formul\u00e1rio de Contato: Incluir um formul\u00e1rio de contato funcional na p\u00e1gina \"Contato\", com os campos: nome , e-mail , mensagem . Valida\u00e7\u00e3o b\u00e1sica dos campos no HTML5 (ex.: campos obrigat\u00f3rios, e-mail v\u00e1lido). 7. Design de rodap\u00e9: Usando flexbox ou grid: Crie um rodap\u00e9 que tenha tr\u00eas se\u00e7\u00f5es: Sobre, Links e \u00edcones de m\u00eddia social. 8. Estilo e Design: Aplicar um esquema de cores consistente e harmonioso. O design deve ser moderno e seguir boas pr\u00e1ticas de UX/UI , com foco na legibilidade e usabilidade. Uso de tipografia apropriada, com pelo menos duas fontes diferentes. Usar \u00edcones quando necess\u00e1rio (ex.: Font Awesome). 9. C\u00f3digo organizado: O c\u00f3digo deve ser organizado, indentado e comentado adequadamente. O CSS deve ser escrito em um arquivo separado e vinculado corretamente ao HTML. As imagens devem ser colocadas em uma subpasta \"imagens\"","title":"Index"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/#ap1","text":"","title":"AP1"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/#objetivo","text":"Desenvolver um site responsivo utilizando HTML , CSS e t\u00e9cnicas de layout como Flexbox e CSS Grid , seguindo boas pr\u00e1ticas de design web. Escolha um tema(Loja de hardware, brinquedos, clubes, f\u00e2-clube, etc.)","title":"Objetivo:"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/#entrega","text":"Prazo: 25/09/2024 at\u00e9 as 9:20h. Enviar o projeto para o reposit\u00f3rio em que o professor foi adicionado como colaborador em uma pasta chamada ap1 dentro da pasta docs, com HTML , CSS , e imagens utilizados.","title":"Entrega:"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/#criterios-de-avaliacao","text":"Uso correto das tags HTML5 sem\u00e2nticas. Implementa\u00e7\u00e3o de layout responsivo com Flexbox e/ou Grid para o nav e footer. Design e usabilidade do site (est\u00e9tica, organiza\u00e7\u00e3o visual, navega\u00e7\u00e3o). Organiza\u00e7\u00e3o e clareza do c\u00f3digo. Implementa\u00e7\u00e3o correta de media queries para diferentes dispositivos. Funcionalidade e layout do formul\u00e1rio de contato .","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o:"},{"location":"_Disciplina/Avalia%C3%A7%C3%B5es/ap1/#requisitos","text":"Estrutura do site: O site dever\u00e1 conter, no m\u00ednimo, 4 p\u00e1ginas interligadas (Home, Sobre, Servi\u00e7os, Contato). Utiliza\u00e7\u00e3o correta de tags sem\u00e2nticas do HTML5 (ex.: <header> , <nav> , <main> , <section> , <article> , <footer> ). Adicione estilos globais iniciais: tamanho da fonte, fam\u00edlia, cor de fundo, etc. Design da barra de navega\u00e7\u00e3o: Usando flexbox ou grid, crie uma barra de navega\u00e7\u00e3o que: Exibe seus itens em uma linha no desktop(telas grandes.) Empilha itens verticalmente para celular(tamanhos pequenos. Tem um logotipo \u00e0 esquerda e links de navega\u00e7\u00e3o \u00e0 direita. Responsividade: O site deve se adaptar corretamente a diferentes tamanhos de tela (desktop e smartphone). Utiliza\u00e7\u00e3o de media queries no CSS para ajustar o layout conforme a largura da tela. Layout: Dever\u00e1 ser poss\u00edvel ver diferentes layouts de p\u00e1gina dependendo do dispositivo (ex.: layout em uma coluna para mobile, e em duas ou mais colunas para desktop). Conte\u00fado: Cada p\u00e1gina deve conter conte\u00fado informativo fict\u00edcio (utilizar Lorem Ipsum quando necess\u00e1rio). Incluir imagens e v\u00eddeos relevantes e de alta qualidade. Certifique-se de que as imagens sejam redimension\u00e1veis e n\u00e3o distor\u00e7am em diferentes resolu\u00e7\u00f5es. Uma navega\u00e7\u00e3o clara entre as p\u00e1ginas deve ser poss\u00edvel por meio de um menu no <nav> , que deve ser responsivo. Na p\u00e1gina inicial o conte\u00fado principal deve usar a estrutura abaixo. Usando o sistema de layout de sua escolha: Crie um layout de tr\u00eas colunas. Garanta preenchimento consistente e margem entre os elementos. <main> <article> <h2>Lorem ipsum dolor sit amet</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus lacinia odio vitae vestibulum.</p> </article> <section class=\"flex-gallery\"> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 1\"> <figcaption>Image 1</figcaption> </figure> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 2\"> <figcaption>Image 2</figcaption> </figure> <figure> <img src=\"https://via.placeholder.com/150x150\" alt=\"Placeholder Image 3\"> <figcaption>Image 3</figcaption> </figure> </section> <section class=\"grid-layout\"> <div>Grid Item A</div> <div>Grid Item B</div> <div>Grid Item C</div> <div>Grid Item D</div> </section> </main> 6. Formul\u00e1rio de Contato: Incluir um formul\u00e1rio de contato funcional na p\u00e1gina \"Contato\", com os campos: nome , e-mail , mensagem . Valida\u00e7\u00e3o b\u00e1sica dos campos no HTML5 (ex.: campos obrigat\u00f3rios, e-mail v\u00e1lido). 7. Design de rodap\u00e9: Usando flexbox ou grid: Crie um rodap\u00e9 que tenha tr\u00eas se\u00e7\u00f5es: Sobre, Links e \u00edcones de m\u00eddia social. 8. Estilo e Design: Aplicar um esquema de cores consistente e harmonioso. O design deve ser moderno e seguir boas pr\u00e1ticas de UX/UI , com foco na legibilidade e usabilidade. Uso de tipografia apropriada, com pelo menos duas fontes diferentes. Usar \u00edcones quando necess\u00e1rio (ex.: Font Awesome). 9. C\u00f3digo organizado: O c\u00f3digo deve ser organizado, indentado e comentado adequadamente. O CSS deve ser escrito em um arquivo separado e vinculado corretamente ao HTML. As imagens devem ser colocadas em uma subpasta \"imagens\"","title":"Requisitos:"},{"location":"_Disciplina/Exerc%C3%ADcios/Javascript/","text":"Exerc\u00edcios w3schools w3schools exemplos tutorial republic","title":"Javascript"},{"location":"_Disciplina/Exerc%C3%ADcios/Javascript/#exercicios","text":"w3schools w3schools exemplos tutorial republic","title":"Exerc\u00edcios"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/","text":"Posisicionamento - Landing Page Aplique as t\u00e9cnicas de posicionamento CSS em uma landing page que usa tags sem\u00e2nticas de layout. Esse exemplo vai incorporar o uso de header , nav , main , section , article , aside , footer , juntamente com os tipos de posicionamento: static , relative , absolute , fixed , e sticky . Estrutura HTML com tags sem\u00e2nticas: <!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Landing Page Sem\u00e2ntica</title> <link rel=\"stylesheet\" href=\"style.css\"> </head> <body> <header> <nav class=\"fixed-nav\"> <ul> <li><a href=\"#home\">Home</a></li> <li><a href=\"#about\">Sobre</a></li> <li><a href=\"#services\">Servi\u00e7os</a></li> <li><a href=\"#contact\">Contato</a></li> </ul> </nav> </header> <main> <section id=\"home\" class=\"hero-section\"> <h1>Bem-vindo \u00e0 nossa Landing Page!</h1> <p>Oferecemos as melhores solu\u00e7\u00f5es para o seu neg\u00f3cio.</p> </section> <section id=\"about\" class=\"about-section\"> <article class=\"about-article\"> <h2>Sobre N\u00f3s</h2> <p>Nossa empresa tem mais de 10 anos de experi\u00eancia.</p> </article> </section> <section id=\"services\" class=\"services-section\"> <h2>Nossos Servi\u00e7os</h2> <aside class=\"relative-aside\"> <p>Conte\u00fado destacado.</p> <button class=\"absolute-button\">Clique Aqui</button> </aside> </section> <section id=\"contact\" class=\"contact-section\"> <h2>Fale Conosco</h2> <form> <label for=\"name\">Nome:</label> <input type=\"text\" id=\"name\" name=\"name\"> <label for=\"email\">Email:</label> <input type=\"email\" id=\"email\" name=\"email\"> <button type=\"submit\">Enviar</button> </form> </section> </main> <footer> <p>\u00a9 2024 Nossa Empresa. Todos os direitos reservados.</p> </footer> </body> </html> Estilos CSS com posicionamento: /* Reseta margens e padding padr\u00e3o */ * { margin: 0; padding: 0; box-sizing: border-box; } /* Estilo para o header com navega\u00e7\u00e3o fixa */ .fixed-nav { position: fixed; top: 0; left: 0; width: 100%; background-color: #333; color: white; padding: 15px; z-index: 100; } .fixed-nav ul { display: flex; justify-content: space-around; list-style: none; } .fixed-nav a { color: white; text-decoration: none; padding: 5px 10px; } .fixed-nav a:hover { background-color: #555; border-radius: 5px; } /* Espa\u00e7o para compensar a barra de navega\u00e7\u00e3o fixa */ main { margin-top: 60px; } /* Hero section */ .hero-section { background: url('hero-image.jpg') no-repeat center center/cover; height: 80vh; display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; color: white; } .hero-section h1 { font-size: 3em; } .hero-section p { font-size: 1.5em; } /* Sobre n\u00f3s com posicionamento relativo */ .about-section { padding: 50px; background-color: #f4f4f4; } .about-article { position: relative; background-color: white; padding: 30px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); top: 20px; left: 10px; } /* Servi\u00e7os com aside posicionado */ .services-section { padding: 50px; background-color: #e4e4e4; } .relative-aside { position: relative; background-color: #fff; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); } .absolute-button { position: absolute; top: 10px; right: 10px; padding: 10px 20px; background-color: #333; color: white; border: none; cursor: pointer; } .absolute-button:hover { background-color: #555; } /* Contato com header sticky */ .contact-section { padding: 50px; background-color: #fff; } .contact-section h2 { position: sticky; top: 60px; /* Considera o tamanho da barra de navega\u00e7\u00e3o fixa */ background-color: white; padding: 10px; margin-bottom: 20px; } .contact-section form { display: flex; flex-direction: column; } .contact-section label { margin: 10px 0 5px; } .contact-section input { padding: 10px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 4px; } .contact-section button { padding: 10px 20px; background-color: #333; color: white; border: none; cursor: pointer; } .contact-section button:hover { background-color: #555; } /* Footer */ footer { background-color: #333; color: white; text-align: center; padding: 20px 0; } Explica\u00e7\u00e3o das T\u00e9cnicas de Posicionamento: Navega\u00e7\u00e3o Fixa ( fixed ) : A barra de navega\u00e7\u00e3o usa position: fixed para permanecer sempre no topo da p\u00e1gina, independentemente do scroll. Conte\u00fado Relativo ( relative ) : O artigo da se\u00e7\u00e3o \"Sobre n\u00f3s\" tem position: relative , deslocando o bloco levemente para dar \u00eanfase, mas ainda ocupando seu espa\u00e7o normal no fluxo do documento. Bot\u00e3o Absoluto ( absolute ) : O bot\u00e3o dentro da se\u00e7\u00e3o de servi\u00e7os usa position: absolute para se posicionar em rela\u00e7\u00e3o ao cont\u00eainer aside com position: relative , permitindo que ele fique fixo no canto direito. Cabe\u00e7alho Sticky ( sticky ) : O t\u00edtulo \"Fale Conosco\" na se\u00e7\u00e3o de contato usa position: sticky para permanecer vis\u00edvel no topo da janela de visualiza\u00e7\u00e3o ao rolar a p\u00e1gina, mas apenas depois de rolar al\u00e9m de um determinado ponto. Resultado: Essa estrutura cria uma landing page sem\u00e2ntica, moderna e responsiva, que utiliza de forma eficaz todas as t\u00e9cnicas de posicionamento CSS para melhorar a experi\u00eancia do usu\u00e1rio.","title":"Posicionamento Landing Page"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/#posisicionamento-landing-page","text":"Aplique as t\u00e9cnicas de posicionamento CSS em uma landing page que usa tags sem\u00e2nticas de layout. Esse exemplo vai incorporar o uso de header , nav , main , section , article , aside , footer , juntamente com os tipos de posicionamento: static , relative , absolute , fixed , e sticky .","title":"Posisicionamento - Landing Page"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/#estrutura-html-com-tags-semanticas","text":"<!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Landing Page Sem\u00e2ntica</title> <link rel=\"stylesheet\" href=\"style.css\"> </head> <body> <header> <nav class=\"fixed-nav\"> <ul> <li><a href=\"#home\">Home</a></li> <li><a href=\"#about\">Sobre</a></li> <li><a href=\"#services\">Servi\u00e7os</a></li> <li><a href=\"#contact\">Contato</a></li> </ul> </nav> </header> <main> <section id=\"home\" class=\"hero-section\"> <h1>Bem-vindo \u00e0 nossa Landing Page!</h1> <p>Oferecemos as melhores solu\u00e7\u00f5es para o seu neg\u00f3cio.</p> </section> <section id=\"about\" class=\"about-section\"> <article class=\"about-article\"> <h2>Sobre N\u00f3s</h2> <p>Nossa empresa tem mais de 10 anos de experi\u00eancia.</p> </article> </section> <section id=\"services\" class=\"services-section\"> <h2>Nossos Servi\u00e7os</h2> <aside class=\"relative-aside\"> <p>Conte\u00fado destacado.</p> <button class=\"absolute-button\">Clique Aqui</button> </aside> </section> <section id=\"contact\" class=\"contact-section\"> <h2>Fale Conosco</h2> <form> <label for=\"name\">Nome:</label> <input type=\"text\" id=\"name\" name=\"name\"> <label for=\"email\">Email:</label> <input type=\"email\" id=\"email\" name=\"email\"> <button type=\"submit\">Enviar</button> </form> </section> </main> <footer> <p>\u00a9 2024 Nossa Empresa. Todos os direitos reservados.</p> </footer> </body> </html>","title":"Estrutura HTML com tags sem\u00e2nticas:"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/#estilos-css-com-posicionamento","text":"/* Reseta margens e padding padr\u00e3o */ * { margin: 0; padding: 0; box-sizing: border-box; } /* Estilo para o header com navega\u00e7\u00e3o fixa */ .fixed-nav { position: fixed; top: 0; left: 0; width: 100%; background-color: #333; color: white; padding: 15px; z-index: 100; } .fixed-nav ul { display: flex; justify-content: space-around; list-style: none; } .fixed-nav a { color: white; text-decoration: none; padding: 5px 10px; } .fixed-nav a:hover { background-color: #555; border-radius: 5px; } /* Espa\u00e7o para compensar a barra de navega\u00e7\u00e3o fixa */ main { margin-top: 60px; } /* Hero section */ .hero-section { background: url('hero-image.jpg') no-repeat center center/cover; height: 80vh; display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; color: white; } .hero-section h1 { font-size: 3em; } .hero-section p { font-size: 1.5em; } /* Sobre n\u00f3s com posicionamento relativo */ .about-section { padding: 50px; background-color: #f4f4f4; } .about-article { position: relative; background-color: white; padding: 30px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); top: 20px; left: 10px; } /* Servi\u00e7os com aside posicionado */ .services-section { padding: 50px; background-color: #e4e4e4; } .relative-aside { position: relative; background-color: #fff; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); } .absolute-button { position: absolute; top: 10px; right: 10px; padding: 10px 20px; background-color: #333; color: white; border: none; cursor: pointer; } .absolute-button:hover { background-color: #555; } /* Contato com header sticky */ .contact-section { padding: 50px; background-color: #fff; } .contact-section h2 { position: sticky; top: 60px; /* Considera o tamanho da barra de navega\u00e7\u00e3o fixa */ background-color: white; padding: 10px; margin-bottom: 20px; } .contact-section form { display: flex; flex-direction: column; } .contact-section label { margin: 10px 0 5px; } .contact-section input { padding: 10px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 4px; } .contact-section button { padding: 10px 20px; background-color: #333; color: white; border: none; cursor: pointer; } .contact-section button:hover { background-color: #555; } /* Footer */ footer { background-color: #333; color: white; text-align: center; padding: 20px 0; }","title":"Estilos CSS com posicionamento:"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/#explicacao-das-tecnicas-de-posicionamento","text":"Navega\u00e7\u00e3o Fixa ( fixed ) : A barra de navega\u00e7\u00e3o usa position: fixed para permanecer sempre no topo da p\u00e1gina, independentemente do scroll. Conte\u00fado Relativo ( relative ) : O artigo da se\u00e7\u00e3o \"Sobre n\u00f3s\" tem position: relative , deslocando o bloco levemente para dar \u00eanfase, mas ainda ocupando seu espa\u00e7o normal no fluxo do documento. Bot\u00e3o Absoluto ( absolute ) : O bot\u00e3o dentro da se\u00e7\u00e3o de servi\u00e7os usa position: absolute para se posicionar em rela\u00e7\u00e3o ao cont\u00eainer aside com position: relative , permitindo que ele fique fixo no canto direito. Cabe\u00e7alho Sticky ( sticky ) : O t\u00edtulo \"Fale Conosco\" na se\u00e7\u00e3o de contato usa position: sticky para permanecer vis\u00edvel no topo da janela de visualiza\u00e7\u00e3o ao rolar a p\u00e1gina, mas apenas depois de rolar al\u00e9m de um determinado ponto.","title":"Explica\u00e7\u00e3o das T\u00e9cnicas de Posicionamento:"},{"location":"_Disciplina/Exerc%C3%ADcios/Posicionamento_Landing_Page/#resultado","text":"Essa estrutura cria uma landing page sem\u00e2ntica, moderna e responsiva, que utiliza de forma eficaz todas as t\u00e9cnicas de posicionamento CSS para melhorar a experi\u00eancia do usu\u00e1rio.","title":"Resultado:"},{"location":"_Disciplina/Roteiros/css/flexbox/","text":"Flexbox Objetivo Esse roteiro utiliza o modelo de layout Flexbox para organizar e alinhar elementos dentro de uma p\u00e1gina HTML de maneira eficiente e flex\u00edvel. 1. Introdu\u00e7\u00e3o ao Flexbox O Flexbox \u00e9 um m\u00f3dulo de layout que permite distribuir o espa\u00e7o de forma mais din\u00e2mica e alinhar os itens dentro de um cont\u00eainer, mesmo que o tamanho dos itens seja desconhecido ou din\u00e2mico. 2. Elementos principais do Flexbox Cont\u00eainer Flex : O elemento pai que utiliza o display: flex; . Ele define o contexto flex\u00edvel para os filhos (itens flex). Itens Flex : Elementos filhos dentro do cont\u00eainer flex\u00edvel que s\u00e3o organizados de acordo com as regras do Flexbox. <div class=\"container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> </div> .container { display: flex; } .item { background-color: lightblue; padding: 10px; margin: 5px; border: 1px solid #000; } 3. Propriedades do Cont\u00eainer Flex Essas propriedades afetam o comportamento de seus itens filhos. 3.1 flex-direction Define a dire\u00e7\u00e3o dos itens no cont\u00eainer. row (padr\u00e3o): Alinha os itens horizontalmente. row-reverse : Alinha os itens horizontalmente na dire\u00e7\u00e3o inversa. column : Alinha os itens verticalmente. column-reverse : Alinha os itens verticalmente na dire\u00e7\u00e3o inversa. .container { display: flex; flex-direction: row; } 3.2 justify-content Alinha os itens no eixo principal (horizontal por padr\u00e3o). flex-start : Alinha os itens ao in\u00edcio do cont\u00eainer. flex-end : Alinha os itens ao final do cont\u00eainer. center : Centraliza os itens. space-between : Deixa espa\u00e7o igual entre os itens. space-around : Deixa espa\u00e7o ao redor dos itens. .container { display: flex; justify-content: center; } 3.3 align-items Alinha os itens no eixo cruzado (vertical por padr\u00e3o). flex-start : Alinha os itens no in\u00edcio do eixo cruzado. flex-end : Alinha os itens no final do eixo cruzado. center : Centraliza os itens no eixo cruzado. stretch : Os itens se estendem para preencher o cont\u00eainer. baseline : Alinha os itens de acordo com suas linhas de base. .container { display: flex; align-items: center; } 3.4 flex-wrap Permite que os itens do cont\u00eainer \"quebrem\" linha se n\u00e3o couberem. nowrap (padr\u00e3o): Todos os itens permanecem em uma \u00fanica linha. wrap : Itens quebram em m\u00faltiplas linhas, se necess\u00e1rio. wrap-reverse : Itens quebram em m\u00faltiplas linhas na dire\u00e7\u00e3o inversa. .container { display: flex; flex-wrap: wrap; } 4. Propriedades dos Itens Flex 4.1 flex-grow Define como um item pode crescer dentro do cont\u00eainer flex. Um valor maior permite que o item cres\u00e7a mais em rela\u00e7\u00e3o aos outros. .item { flex-grow: 1; /* Todos os itens ter\u00e3o o mesmo crescimento */ } 4.2 flex-shrink Controla como um item encolhe se n\u00e3o houver espa\u00e7o suficiente no cont\u00eainer. .item { flex-shrink: 1; /* Todos os itens podem encolher igualmente */ } 4.3 flex-basis Define o tamanho inicial de um item antes que o espa\u00e7o seja distribu\u00eddo entre os itens. .item { flex-basis: 200px; /* Todos os itens ter\u00e3o inicialmente 200px */ } 4.4 align-self Permite que um item individual tenha um comportamento de alinhamento diferente dos outros. .item { align-self: flex-end; } 5. Exemplo Pr\u00e1tico Completo <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Flexbox Example</title> <style> .container { display: flex; flex-direction: row; justify-content: space-between; align-items: center; flex-wrap: wrap; height: 300px; border: 2px solid black; } .item { background-color: lightblue; padding: 20px; margin: 10px; flex-grow: 1; } </style> </head> <body> <div class=\"container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> </div> </body> </html> 6. Atividade Proposta Recrie um layout flex\u00edvel usando flexbox , onde os elementos devem se reorganizar de acordo com o tamanho da tela. Por exemplo, tr\u00eas colunas de conte\u00fado que se ajustam em uma linha \u00fanica em telas grandes e se reorganizam verticalmente em telas menores. Sites Aqui est\u00e3o alguns dos principais sites de demonstra\u00e7\u00e3o e aprendizado do Flexbox CSS que ajudam a entender como ele funciona atrav\u00e9s de exemplos interativos e visuais: - Flexbox Froggy URL : Flexbox Froggy Descri\u00e7\u00e3o : Um jogo interativo que ensina as propriedades do Flexbox atrav\u00e9s de desafios. Nele, voc\u00ea precisa alinhar r\u00e3s em suas folhas de vit\u00f3ria-r\u00e9gia usando as propriedades de flexbox. - CSS Tricks: A Complete Guide to Flexbox URL : CSS Tricks - Flexbox Descri\u00e7\u00e3o : Um guia completo com explica\u00e7\u00f5es detalhadas sobre todas as propriedades de flexbox. Inclui diagramas visuais e exemplos pr\u00e1ticos de c\u00f3digo. - Flexbox Defense URL : Flexbox Defense Descri\u00e7\u00e3o : Um jogo onde voc\u00ea defende uma base posicionando torres com flexbox. Cada torre \u00e9 posicionada corretamente ao utilizar as propriedades do flexbox. - Flexbox Playground URL : Flexbox Playground Descri\u00e7\u00e3o : Uma sandbox interativa onde voc\u00ea pode experimentar e visualizar as propriedades do Flexbox em tempo real. \u00c9 um \u00f3timo ambiente para testar diferentes combina\u00e7\u00f5es de propriedades. - Flexy Boxes URL : Flexy Boxes Descri\u00e7\u00e3o : Um gerador visual de layouts flex\u00edveis. Ele permite ajustar v\u00e1rias op\u00e7\u00f5es de Flexbox e gerar o c\u00f3digo CSS correspondente para copiar e colar. - What The Flexbox?! URL : What The Flexbox?! Descri\u00e7\u00e3o : Um curso em v\u00eddeo gratuito que cobre o Flexbox desde o b\u00e1sico at\u00e9 usos avan\u00e7ados. O curso \u00e9 ideal para quem prefere aprender com v\u00eddeos e exemplos passo a passo. Esses recursos s\u00e3o \u00f3timos para entender o Flexbox de forma pr\u00e1tica, com interatividade e exemplos aplicados. 7. Conclus\u00e3o O Flexbox \u00e9 uma ferramenta poderosa para criar layouts din\u00e2micos e responsivos de maneira eficiente. Ele \u00e9 especialmente \u00fatil para alinhar, distribuir e organizar itens dentro de um cont\u00eainer, adaptando-se automaticamente a diferentes tamanhos de tela.","title":"Flexbox"},{"location":"_Disciplina/Roteiros/css/flexbox/#flexbox","text":"","title":"Flexbox"},{"location":"_Disciplina/Roteiros/css/flexbox/#objetivo","text":"Esse roteiro utiliza o modelo de layout Flexbox para organizar e alinhar elementos dentro de uma p\u00e1gina HTML de maneira eficiente e flex\u00edvel.","title":"Objetivo"},{"location":"_Disciplina/Roteiros/css/flexbox/#1-introducao-ao-flexbox","text":"O Flexbox \u00e9 um m\u00f3dulo de layout que permite distribuir o espa\u00e7o de forma mais din\u00e2mica e alinhar os itens dentro de um cont\u00eainer, mesmo que o tamanho dos itens seja desconhecido ou din\u00e2mico.","title":"1. Introdu\u00e7\u00e3o ao Flexbox"},{"location":"_Disciplina/Roteiros/css/flexbox/#2-elementos-principais-do-flexbox","text":"Cont\u00eainer Flex : O elemento pai que utiliza o display: flex; . Ele define o contexto flex\u00edvel para os filhos (itens flex). Itens Flex : Elementos filhos dentro do cont\u00eainer flex\u00edvel que s\u00e3o organizados de acordo com as regras do Flexbox. <div class=\"container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> </div> .container { display: flex; } .item { background-color: lightblue; padding: 10px; margin: 5px; border: 1px solid #000; }","title":"2. Elementos principais do Flexbox"},{"location":"_Disciplina/Roteiros/css/flexbox/#3-propriedades-do-conteiner-flex","text":"Essas propriedades afetam o comportamento de seus itens filhos.","title":"3. Propriedades do Cont\u00eainer Flex"},{"location":"_Disciplina/Roteiros/css/flexbox/#31-flex-direction","text":"Define a dire\u00e7\u00e3o dos itens no cont\u00eainer. row (padr\u00e3o): Alinha os itens horizontalmente. row-reverse : Alinha os itens horizontalmente na dire\u00e7\u00e3o inversa. column : Alinha os itens verticalmente. column-reverse : Alinha os itens verticalmente na dire\u00e7\u00e3o inversa. .container { display: flex; flex-direction: row; }","title":"3.1 flex-direction"},{"location":"_Disciplina/Roteiros/css/flexbox/#32-justify-content","text":"Alinha os itens no eixo principal (horizontal por padr\u00e3o). flex-start : Alinha os itens ao in\u00edcio do cont\u00eainer. flex-end : Alinha os itens ao final do cont\u00eainer. center : Centraliza os itens. space-between : Deixa espa\u00e7o igual entre os itens. space-around : Deixa espa\u00e7o ao redor dos itens. .container { display: flex; justify-content: center; }","title":"3.2 justify-content"},{"location":"_Disciplina/Roteiros/css/flexbox/#33-align-items","text":"Alinha os itens no eixo cruzado (vertical por padr\u00e3o). flex-start : Alinha os itens no in\u00edcio do eixo cruzado. flex-end : Alinha os itens no final do eixo cruzado. center : Centraliza os itens no eixo cruzado. stretch : Os itens se estendem para preencher o cont\u00eainer. baseline : Alinha os itens de acordo com suas linhas de base. .container { display: flex; align-items: center; }","title":"3.3 align-items"},{"location":"_Disciplina/Roteiros/css/flexbox/#34-flex-wrap","text":"Permite que os itens do cont\u00eainer \"quebrem\" linha se n\u00e3o couberem. nowrap (padr\u00e3o): Todos os itens permanecem em uma \u00fanica linha. wrap : Itens quebram em m\u00faltiplas linhas, se necess\u00e1rio. wrap-reverse : Itens quebram em m\u00faltiplas linhas na dire\u00e7\u00e3o inversa. .container { display: flex; flex-wrap: wrap; }","title":"3.4 flex-wrap"},{"location":"_Disciplina/Roteiros/css/flexbox/#4-propriedades-dos-itens-flex","text":"","title":"4. Propriedades dos Itens Flex"},{"location":"_Disciplina/Roteiros/css/flexbox/#41-flex-grow","text":"Define como um item pode crescer dentro do cont\u00eainer flex. Um valor maior permite que o item cres\u00e7a mais em rela\u00e7\u00e3o aos outros. .item { flex-grow: 1; /* Todos os itens ter\u00e3o o mesmo crescimento */ }","title":"4.1 flex-grow"},{"location":"_Disciplina/Roteiros/css/flexbox/#42-flex-shrink","text":"Controla como um item encolhe se n\u00e3o houver espa\u00e7o suficiente no cont\u00eainer. .item { flex-shrink: 1; /* Todos os itens podem encolher igualmente */ }","title":"4.2 flex-shrink"},{"location":"_Disciplina/Roteiros/css/flexbox/#43-flex-basis","text":"Define o tamanho inicial de um item antes que o espa\u00e7o seja distribu\u00eddo entre os itens. .item { flex-basis: 200px; /* Todos os itens ter\u00e3o inicialmente 200px */ }","title":"4.3 flex-basis"},{"location":"_Disciplina/Roteiros/css/flexbox/#44-align-self","text":"Permite que um item individual tenha um comportamento de alinhamento diferente dos outros. .item { align-self: flex-end; }","title":"4.4 align-self"},{"location":"_Disciplina/Roteiros/css/flexbox/#5-exemplo-pratico-completo","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Flexbox Example</title> <style> .container { display: flex; flex-direction: row; justify-content: space-between; align-items: center; flex-wrap: wrap; height: 300px; border: 2px solid black; } .item { background-color: lightblue; padding: 20px; margin: 10px; flex-grow: 1; } </style> </head> <body> <div class=\"container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> </div> </body> </html>","title":"5. Exemplo Pr\u00e1tico Completo"},{"location":"_Disciplina/Roteiros/css/flexbox/#6-atividade-proposta","text":"Recrie um layout flex\u00edvel usando flexbox , onde os elementos devem se reorganizar de acordo com o tamanho da tela. Por exemplo, tr\u00eas colunas de conte\u00fado que se ajustam em uma linha \u00fanica em telas grandes e se reorganizam verticalmente em telas menores.","title":"6. Atividade Proposta"},{"location":"_Disciplina/Roteiros/css/flexbox/#sites","text":"Aqui est\u00e3o alguns dos principais sites de demonstra\u00e7\u00e3o e aprendizado do Flexbox CSS que ajudam a entender como ele funciona atrav\u00e9s de exemplos interativos e visuais:","title":"Sites"},{"location":"_Disciplina/Roteiros/css/flexbox/#-flexbox-froggy","text":"URL : Flexbox Froggy Descri\u00e7\u00e3o : Um jogo interativo que ensina as propriedades do Flexbox atrav\u00e9s de desafios. Nele, voc\u00ea precisa alinhar r\u00e3s em suas folhas de vit\u00f3ria-r\u00e9gia usando as propriedades de flexbox.","title":"- Flexbox Froggy"},{"location":"_Disciplina/Roteiros/css/flexbox/#-css-tricks-a-complete-guide-to-flexbox","text":"URL : CSS Tricks - Flexbox Descri\u00e7\u00e3o : Um guia completo com explica\u00e7\u00f5es detalhadas sobre todas as propriedades de flexbox. Inclui diagramas visuais e exemplos pr\u00e1ticos de c\u00f3digo.","title":"- CSS Tricks: A Complete Guide to Flexbox"},{"location":"_Disciplina/Roteiros/css/flexbox/#-flexbox-defense","text":"URL : Flexbox Defense Descri\u00e7\u00e3o : Um jogo onde voc\u00ea defende uma base posicionando torres com flexbox. Cada torre \u00e9 posicionada corretamente ao utilizar as propriedades do flexbox.","title":"- Flexbox Defense"},{"location":"_Disciplina/Roteiros/css/flexbox/#-flexbox-playground","text":"URL : Flexbox Playground Descri\u00e7\u00e3o : Uma sandbox interativa onde voc\u00ea pode experimentar e visualizar as propriedades do Flexbox em tempo real. \u00c9 um \u00f3timo ambiente para testar diferentes combina\u00e7\u00f5es de propriedades.","title":"- Flexbox Playground"},{"location":"_Disciplina/Roteiros/css/flexbox/#-flexy-boxes","text":"URL : Flexy Boxes Descri\u00e7\u00e3o : Um gerador visual de layouts flex\u00edveis. Ele permite ajustar v\u00e1rias op\u00e7\u00f5es de Flexbox e gerar o c\u00f3digo CSS correspondente para copiar e colar.","title":"- Flexy Boxes"},{"location":"_Disciplina/Roteiros/css/flexbox/#-what-the-flexbox","text":"URL : What The Flexbox?! Descri\u00e7\u00e3o : Um curso em v\u00eddeo gratuito que cobre o Flexbox desde o b\u00e1sico at\u00e9 usos avan\u00e7ados. O curso \u00e9 ideal para quem prefere aprender com v\u00eddeos e exemplos passo a passo. Esses recursos s\u00e3o \u00f3timos para entender o Flexbox de forma pr\u00e1tica, com interatividade e exemplos aplicados.","title":"- What The Flexbox?!"},{"location":"_Disciplina/Roteiros/css/flexbox/#7-conclusao","text":"O Flexbox \u00e9 uma ferramenta poderosa para criar layouts din\u00e2micos e responsivos de maneira eficiente. Ele \u00e9 especialmente \u00fatil para alinhar, distribuir e organizar itens dentro de um cont\u00eainer, adaptando-se automaticamente a diferentes tamanhos de tela.","title":"7. Conclus\u00e3o"},{"location":"_Disciplina/Roteiros/css/grid/","text":"Grid CSS - Estruturando Layouts Modernos Objetivo: Apresentamos o uso do Grid Layout no CSS para criar layouts flex\u00edveis e responsivos e iremos criar grades, organizar colunas e linhas, e controlar o espa\u00e7amento entre os elementos. Principais pontos para estudo de GRID css: Introdu\u00e7\u00e3o ao Grid CSS O que \u00e9 Grid Layout? Diferen\u00e7a entre Grid e Flexbox Casos de uso do Grid Elementos B\u00e1sicos do Grid Definindo um container de grid: display: grid; Definindo colunas e linhas com grid-template-columns e grid-template-rows Ajustando o espa\u00e7amento com gap Posicionamento no Grid Posicionando itens com grid-column e grid-row Usando grid-area para criar \u00e1reas nomeadas Span e o conceito de mesclar colunas/linhas ( grid-column: span ) Alinhamento e Justifica\u00e7\u00e3o Controlando o alinhamento dos itens dentro do grid com justify-items , align-items , place-items Controlando a distribui\u00e7\u00e3o do grid: justify-content e align-content Grid Responsivo Uso de repeat() , minmax() , auto-fit e auto-fill para grids din\u00e2micos Usando media queries para layouts responsivos Exemplos Pr\u00e1ticos Layout b\u00e1sico com 3 colunas Galeria de imagens responsiva Layout de blog com header, main e footer Exemplo Pr\u00e1tico 1: Grid B\u00e1sico com 3 Colunas <!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo Grid CSS</title> <style> .grid-container { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; } .item { background-color: lightblue; padding: 20px; text-align: center; } </style> </head> <body> <div class=\"grid-container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> <div class=\"item\">Item 4</div> <div class=\"item\">Item 5</div> <div class=\"item\">Item 6</div> </div> </body> </html> Exemplo Pr\u00e1tico 2: Grid Responsivo <!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Grid Responsivo</title> <style> .grid-container { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 10px; } .item { background-color: lightcoral; padding: 20px; text-align: center; } </style> </head> <body> <div class=\"grid-container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> <div class=\"item\">Item 4</div> </div> </body> </html> Sites com exemplos e demonstra\u00e7\u00f5es : - CSS-Tricks - A Complete Guide to Grid URL: CSS-Tricks Descri\u00e7\u00e3o: Um guia abrangente que explica todos os conceitos do CSS Grid, com exemplos visuais e explica\u00e7\u00f5es detalhadas de cada propriedade. Inclui muitos exemplos de layout com grids. - Grid by Example URL: Grid by Example Descri\u00e7\u00e3o: Um site dedicado ao CSS Grid criado por Rachel Andrew. Oferece exemplos pr\u00e1ticos, templates e v\u00eddeos explicativos. \u00c9 um excelente recurso para entender como o Grid pode ser utilizado em diversos layouts. - CSS Grid Garden URL: CSS Grid Garden Descri\u00e7\u00e3o: Um jogo interativo onde voc\u00ea aprende CSS Grid jogando. Ele \u00e9 projetado para ensinar as propriedades do Grid de uma forma divertida e pr\u00e1tica, ajudando a memorizar os conceitos enquanto joga. - MDN Web Docs - CSS Grid Layout URL: MDN Web Docs Descri\u00e7\u00e3o: A documenta\u00e7\u00e3o oficial do Mozilla Developer Network (MDN) sobre o Grid Layout. Oferece exemplos detalhados de uso, com explica\u00e7\u00f5es t\u00e9cnicas das propriedades e comportamentos do Grid. - Grid Layout Generator URL: Grid Layout Generator Descri\u00e7\u00e3o: Uma ferramenta visual que permite criar layouts de Grid interativamente. Voc\u00ea pode desenhar seu grid, definir linhas e colunas, e gerar o c\u00f3digo CSS automaticamente. Ideal para experimentar e gerar prot\u00f3tipos rapidamente. - CSS Grid Generator URL: CSS Grid Generator Descri\u00e7\u00e3o: Um gerador de grids online, onde voc\u00ea pode arrastar e criar seu layout. Ele gera o c\u00f3digo CSS necess\u00e1rio com base nas configura\u00e7\u00f5es que voc\u00ea seleciona, tornando f\u00e1cil criar grids complexos. - Learn CSS Grid URL: Learn CSS Grid Descri\u00e7\u00e3o: Um site educacional que ensina CSS Grid com uma abordagem pr\u00e1tica e visual. Ele inclui uma s\u00e9rie de tutoriais e exemplos, focados em ensinar os conceitos passo a passo. Esses sites s\u00e3o \u00f3timos para aprender, praticar e experimentar com o CSS Grid em diversos n\u00edveis de complexidade. Exerc\u00edcios: Crie um layout com 4 colunas e 3 linhas, e adicione diferentes cores aos elementos. Use o Grid para criar um layout de p\u00e1gina com cabe\u00e7alho, barra lateral, conte\u00fado principal e rodap\u00e9. Ajuste o layout criado para que seja responsivo utilizando minmax() e auto-fit . Essa aula pode ser complementada com explica\u00e7\u00f5es te\u00f3ricas e desafios pr\u00e1ticos que incentivem a experimenta\u00e7\u00e3o dos alunos com o Grid CSS.","title":"Grid"},{"location":"_Disciplina/Roteiros/css/grid/#grid-css-estruturando-layouts-modernos","text":"Objetivo: Apresentamos o uso do Grid Layout no CSS para criar layouts flex\u00edveis e responsivos e iremos criar grades, organizar colunas e linhas, e controlar o espa\u00e7amento entre os elementos.","title":"Grid CSS - Estruturando Layouts Modernos"},{"location":"_Disciplina/Roteiros/css/grid/#principais-pontos-para-estudo-de-grid-css","text":"Introdu\u00e7\u00e3o ao Grid CSS O que \u00e9 Grid Layout? Diferen\u00e7a entre Grid e Flexbox Casos de uso do Grid Elementos B\u00e1sicos do Grid Definindo um container de grid: display: grid; Definindo colunas e linhas com grid-template-columns e grid-template-rows Ajustando o espa\u00e7amento com gap Posicionamento no Grid Posicionando itens com grid-column e grid-row Usando grid-area para criar \u00e1reas nomeadas Span e o conceito de mesclar colunas/linhas ( grid-column: span ) Alinhamento e Justifica\u00e7\u00e3o Controlando o alinhamento dos itens dentro do grid com justify-items , align-items , place-items Controlando a distribui\u00e7\u00e3o do grid: justify-content e align-content Grid Responsivo Uso de repeat() , minmax() , auto-fit e auto-fill para grids din\u00e2micos Usando media queries para layouts responsivos Exemplos Pr\u00e1ticos Layout b\u00e1sico com 3 colunas Galeria de imagens responsiva Layout de blog com header, main e footer","title":"Principais pontos para estudo de GRID css:"},{"location":"_Disciplina/Roteiros/css/grid/#exemplo-pratico-1-grid-basico-com-3-colunas","text":"<!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo Grid CSS</title> <style> .grid-container { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 20px; } .item { background-color: lightblue; padding: 20px; text-align: center; } </style> </head> <body> <div class=\"grid-container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> <div class=\"item\">Item 4</div> <div class=\"item\">Item 5</div> <div class=\"item\">Item 6</div> </div> </body> </html>","title":"Exemplo Pr\u00e1tico 1: Grid B\u00e1sico com 3 Colunas"},{"location":"_Disciplina/Roteiros/css/grid/#exemplo-pratico-2-grid-responsivo","text":"<!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Grid Responsivo</title> <style> .grid-container { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 10px; } .item { background-color: lightcoral; padding: 20px; text-align: center; } </style> </head> <body> <div class=\"grid-container\"> <div class=\"item\">Item 1</div> <div class=\"item\">Item 2</div> <div class=\"item\">Item 3</div> <div class=\"item\">Item 4</div> </div> </body> </html>","title":"Exemplo Pr\u00e1tico 2: Grid Responsivo"},{"location":"_Disciplina/Roteiros/css/grid/#sites-com-exemplos-e-demonstracoes","text":"","title":"Sites com exemplos e demonstra\u00e7\u00f5es:"},{"location":"_Disciplina/Roteiros/css/grid/#-css-tricks-a-complete-guide-to-grid","text":"URL: CSS-Tricks Descri\u00e7\u00e3o: Um guia abrangente que explica todos os conceitos do CSS Grid, com exemplos visuais e explica\u00e7\u00f5es detalhadas de cada propriedade. Inclui muitos exemplos de layout com grids.","title":"- CSS-Tricks - A Complete Guide to Grid"},{"location":"_Disciplina/Roteiros/css/grid/#-grid-by-example","text":"URL: Grid by Example Descri\u00e7\u00e3o: Um site dedicado ao CSS Grid criado por Rachel Andrew. Oferece exemplos pr\u00e1ticos, templates e v\u00eddeos explicativos. \u00c9 um excelente recurso para entender como o Grid pode ser utilizado em diversos layouts.","title":"- Grid by Example"},{"location":"_Disciplina/Roteiros/css/grid/#-css-grid-garden","text":"URL: CSS Grid Garden Descri\u00e7\u00e3o: Um jogo interativo onde voc\u00ea aprende CSS Grid jogando. Ele \u00e9 projetado para ensinar as propriedades do Grid de uma forma divertida e pr\u00e1tica, ajudando a memorizar os conceitos enquanto joga.","title":"- CSS Grid Garden"},{"location":"_Disciplina/Roteiros/css/grid/#-mdn-web-docs-css-grid-layout","text":"URL: MDN Web Docs Descri\u00e7\u00e3o: A documenta\u00e7\u00e3o oficial do Mozilla Developer Network (MDN) sobre o Grid Layout. Oferece exemplos detalhados de uso, com explica\u00e7\u00f5es t\u00e9cnicas das propriedades e comportamentos do Grid.","title":"- MDN Web Docs - CSS Grid Layout"},{"location":"_Disciplina/Roteiros/css/grid/#-grid-layout-generator","text":"URL: Grid Layout Generator Descri\u00e7\u00e3o: Uma ferramenta visual que permite criar layouts de Grid interativamente. Voc\u00ea pode desenhar seu grid, definir linhas e colunas, e gerar o c\u00f3digo CSS automaticamente. Ideal para experimentar e gerar prot\u00f3tipos rapidamente.","title":"- Grid Layout Generator"},{"location":"_Disciplina/Roteiros/css/grid/#-css-grid-generator","text":"URL: CSS Grid Generator Descri\u00e7\u00e3o: Um gerador de grids online, onde voc\u00ea pode arrastar e criar seu layout. Ele gera o c\u00f3digo CSS necess\u00e1rio com base nas configura\u00e7\u00f5es que voc\u00ea seleciona, tornando f\u00e1cil criar grids complexos.","title":"- CSS Grid Generator"},{"location":"_Disciplina/Roteiros/css/grid/#-learn-css-grid","text":"URL: Learn CSS Grid Descri\u00e7\u00e3o: Um site educacional que ensina CSS Grid com uma abordagem pr\u00e1tica e visual. Ele inclui uma s\u00e9rie de tutoriais e exemplos, focados em ensinar os conceitos passo a passo. Esses sites s\u00e3o \u00f3timos para aprender, praticar e experimentar com o CSS Grid em diversos n\u00edveis de complexidade.","title":"- Learn CSS Grid"},{"location":"_Disciplina/Roteiros/css/grid/#exercicios","text":"Crie um layout com 4 colunas e 3 linhas, e adicione diferentes cores aos elementos. Use o Grid para criar um layout de p\u00e1gina com cabe\u00e7alho, barra lateral, conte\u00fado principal e rodap\u00e9. Ajuste o layout criado para que seja responsivo utilizando minmax() e auto-fit . Essa aula pode ser complementada com explica\u00e7\u00f5es te\u00f3ricas e desafios pr\u00e1ticos que incentivem a experimenta\u00e7\u00e3o dos alunos com o Grid CSS.","title":"Exerc\u00edcios:"},{"location":"_Disciplina/Roteiros/css/posicionamento/","text":"Posicionamento Nesse roteiro apresentamos o posicionamento em CSS , cobrindo os conceitos principais de forma clara e pr\u00e1tica. O foco ser\u00e1 nos diferentes valores da propriedade position e suas intera\u00e7\u00f5es com outras propriedades de layout, como top , right , bottom , left , e z-index . 1. Introdu\u00e7\u00e3o ao Posicionamento no CSS A propriedade position \u00e9 importante para controlar o layout dos elementos. Conceitos de fluxo de documento normal (o comportamento padr\u00e3o dos elementos no HTML). 2. Valores da Propriedade position 2.1. static (Padr\u00e3o) Descri\u00e7\u00e3o : O valor padr\u00e3o. O elemento segue o fluxo normal da p\u00e1gina e n\u00e3o \u00e9 afetado por top , right , bottom , left . Exemplo : <div class=\"static-box\">Eu sou est\u00e1tico!</div>` .static-box { width: 200px; height: 100px; background-color: lightblue; position: static; } 2.2. relative Descri\u00e7\u00e3o : O elemento \u00e9 posicionado em rela\u00e7\u00e3o \u00e0 sua posi\u00e7\u00e3o original. As propriedades top , right , bottom , left podem mov\u00ea-lo, mas ele ainda ocupa o espa\u00e7o original. Exemplo : <div class=\"relative-box\">Eu sou relativo!</div> .relative-box { width: 200px; height: 100px; background-color: lightgreen; position: relative; top: 20px; /* Movido 20px para baixo */ left: 15px; /* Movido 15px para a direita */ } 2.3. absolute Descri\u00e7\u00e3o : O elemento \u00e9 removido do fluxo normal do documento e posicionado em rela\u00e7\u00e3o ao seu elemento pai mais pr\u00f3ximo que tenha position diferente de static . Se n\u00e3o houver um pai posicionado, ser\u00e1 em rela\u00e7\u00e3o ao body . Exemplo : <div class=\"parent\"> <div class=\"absolute-box\">Eu sou absoluto!</div> </div> .parent { position: relative; width: 300px; height: 200px; background-color: lightgray; } .absolute-box { position: absolute; top: 10px; right: 10px; width: 100px; height: 50px; background-color: salmon; } 2.4. fixed Descri\u00e7\u00e3o : O elemento \u00e9 posicionado em rela\u00e7\u00e3o \u00e0 janela de visualiza\u00e7\u00e3o (viewport) e n\u00e3o se move quando a p\u00e1gina \u00e9 rolada. Exemplo : <div class=\"fixed-box\">Eu sou fixo!</div> .fixed-box { position: fixed; bottom: 0; right: 0; width: 100px; height: 50px; background-color: yellow; } 2.5. sticky Descri\u00e7\u00e3o : O elemento alterna entre o comportamento relative e fixed , dependendo da rolagem da p\u00e1gina. Fica \"preso\" em uma posi\u00e7\u00e3o quando voc\u00ea rola al\u00e9m de um certo ponto. Exemplo : <div class=\"sticky-box\">Eu sou sticky!</div> .sticky-box { position: sticky; top: 0; /* Fica \"preso\" no topo ap\u00f3s rolar */ background-color: lightcoral; padding: 10px; } 3. Propriedades Auxiliares top , right , bottom , left : Controlam a posi\u00e7\u00e3o do elemento posicionado. S\u00e3o aplic\u00e1veis quando position n\u00e3o \u00e9 static . z-index : Controla a ordem de sobreposi\u00e7\u00e3o dos elementos. Elementos com valores maiores de z-index aparecem acima de elementos com valores menores. 4. Exerc\u00edcio Pr\u00e1tico Criar uma p\u00e1gina com uma barra de navega\u00e7\u00e3o fixa ( fixed ), um conte\u00fado principal com um cabe\u00e7alho \"sticky\", e uma se\u00e7\u00e3o posicionada de forma relativa a um cont\u00eainer com position: relative e um bot\u00e3o posicionado de forma absoluta. HTML : <nav class=\"fixed-nav\">Navega\u00e7\u00e3o</nav> <header class=\"sticky-header\">Cabe\u00e7alho Sticky</header> <section class=\"content\"> <div class=\"relative-container\"> <button class=\"absolute-button\">Eu sou absoluto</button> </div> </section> CSS : .fixed-nav { position: fixed; top: 0; left: 0; width: 100%; background-color: #333; color: white; padding: 10px; } .sticky-header { position: sticky; top: 50px; background-color: #f4f4f4; padding: 15px; } .relative-container { position: relative; background-color: lightblue; height: 300px; margin: 20px; } .absolute-button { position: absolute; top: 20px; right: 20px; padding: 10px; } Isso d\u00e1 uma vis\u00e3o abrangente do sistema de posicionamento no CSS e como ele pode ser aplicado em p\u00e1ginas web.","title":"Posicionamento"},{"location":"_Disciplina/Roteiros/css/posicionamento/#posicionamento","text":"Nesse roteiro apresentamos o posicionamento em CSS , cobrindo os conceitos principais de forma clara e pr\u00e1tica. O foco ser\u00e1 nos diferentes valores da propriedade position e suas intera\u00e7\u00f5es com outras propriedades de layout, como top , right , bottom , left , e z-index .","title":"Posicionamento"},{"location":"_Disciplina/Roteiros/css/posicionamento/#1-introducao-ao-posicionamento-no-css","text":"A propriedade position \u00e9 importante para controlar o layout dos elementos. Conceitos de fluxo de documento normal (o comportamento padr\u00e3o dos elementos no HTML).","title":"1. Introdu\u00e7\u00e3o ao Posicionamento no CSS"},{"location":"_Disciplina/Roteiros/css/posicionamento/#2-valores-da-propriedade-position","text":"","title":"2. Valores da Propriedade position"},{"location":"_Disciplina/Roteiros/css/posicionamento/#21-static-padrao","text":"Descri\u00e7\u00e3o : O valor padr\u00e3o. O elemento segue o fluxo normal da p\u00e1gina e n\u00e3o \u00e9 afetado por top , right , bottom , left . Exemplo : <div class=\"static-box\">Eu sou est\u00e1tico!</div>` .static-box { width: 200px; height: 100px; background-color: lightblue; position: static; }","title":"2.1. static (Padr\u00e3o)"},{"location":"_Disciplina/Roteiros/css/posicionamento/#22-relative","text":"Descri\u00e7\u00e3o : O elemento \u00e9 posicionado em rela\u00e7\u00e3o \u00e0 sua posi\u00e7\u00e3o original. As propriedades top , right , bottom , left podem mov\u00ea-lo, mas ele ainda ocupa o espa\u00e7o original. Exemplo : <div class=\"relative-box\">Eu sou relativo!</div> .relative-box { width: 200px; height: 100px; background-color: lightgreen; position: relative; top: 20px; /* Movido 20px para baixo */ left: 15px; /* Movido 15px para a direita */ }","title":"2.2. relative"},{"location":"_Disciplina/Roteiros/css/posicionamento/#23-absolute","text":"Descri\u00e7\u00e3o : O elemento \u00e9 removido do fluxo normal do documento e posicionado em rela\u00e7\u00e3o ao seu elemento pai mais pr\u00f3ximo que tenha position diferente de static . Se n\u00e3o houver um pai posicionado, ser\u00e1 em rela\u00e7\u00e3o ao body . Exemplo : <div class=\"parent\"> <div class=\"absolute-box\">Eu sou absoluto!</div> </div> .parent { position: relative; width: 300px; height: 200px; background-color: lightgray; } .absolute-box { position: absolute; top: 10px; right: 10px; width: 100px; height: 50px; background-color: salmon; }","title":"2.3. absolute"},{"location":"_Disciplina/Roteiros/css/posicionamento/#24-fixed","text":"Descri\u00e7\u00e3o : O elemento \u00e9 posicionado em rela\u00e7\u00e3o \u00e0 janela de visualiza\u00e7\u00e3o (viewport) e n\u00e3o se move quando a p\u00e1gina \u00e9 rolada. Exemplo : <div class=\"fixed-box\">Eu sou fixo!</div> .fixed-box { position: fixed; bottom: 0; right: 0; width: 100px; height: 50px; background-color: yellow; }","title":"2.4. fixed"},{"location":"_Disciplina/Roteiros/css/posicionamento/#25-sticky","text":"Descri\u00e7\u00e3o : O elemento alterna entre o comportamento relative e fixed , dependendo da rolagem da p\u00e1gina. Fica \"preso\" em uma posi\u00e7\u00e3o quando voc\u00ea rola al\u00e9m de um certo ponto. Exemplo : <div class=\"sticky-box\">Eu sou sticky!</div> .sticky-box { position: sticky; top: 0; /* Fica \"preso\" no topo ap\u00f3s rolar */ background-color: lightcoral; padding: 10px; }","title":"2.5. sticky"},{"location":"_Disciplina/Roteiros/css/posicionamento/#3-propriedades-auxiliares","text":"top , right , bottom , left : Controlam a posi\u00e7\u00e3o do elemento posicionado. S\u00e3o aplic\u00e1veis quando position n\u00e3o \u00e9 static . z-index : Controla a ordem de sobreposi\u00e7\u00e3o dos elementos. Elementos com valores maiores de z-index aparecem acima de elementos com valores menores.","title":"3. Propriedades Auxiliares"},{"location":"_Disciplina/Roteiros/css/posicionamento/#4-exercicio-pratico","text":"Criar uma p\u00e1gina com uma barra de navega\u00e7\u00e3o fixa ( fixed ), um conte\u00fado principal com um cabe\u00e7alho \"sticky\", e uma se\u00e7\u00e3o posicionada de forma relativa a um cont\u00eainer com position: relative e um bot\u00e3o posicionado de forma absoluta. HTML : <nav class=\"fixed-nav\">Navega\u00e7\u00e3o</nav> <header class=\"sticky-header\">Cabe\u00e7alho Sticky</header> <section class=\"content\"> <div class=\"relative-container\"> <button class=\"absolute-button\">Eu sou absoluto</button> </div> </section> CSS : .fixed-nav { position: fixed; top: 0; left: 0; width: 100%; background-color: #333; color: white; padding: 10px; } .sticky-header { position: sticky; top: 50px; background-color: #f4f4f4; padding: 15px; } .relative-container { position: relative; background-color: lightblue; height: 300px; margin: 20px; } .absolute-button { position: absolute; top: 20px; right: 20px; padding: 10px; } Isso d\u00e1 uma vis\u00e3o abrangente do sistema de posicionamento no CSS e como ele pode ser aplicado em p\u00e1ginas web.","title":"4. Exerc\u00edcio Pr\u00e1tico"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/","text":"Responsividade Para criar um site responsivo utilizando media queries e unidades de dimensionamento relativas , voc\u00ea pode seguir este exemplo b\u00e1sico: Estrutura do HTML: <!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Site Responsivo</title> <link rel=\"stylesheet\" href=\"style.css\"> </head> <body> <header> <h1>Bem-vindo ao site responsivo</h1> </header> <nav> <ul> <li><a href=\"#home\">Home</a></li> <li><a href=\"#sobre\">Sobre</a></li> <li><a href=\"#contato\">Contato</a></li> </ul> </nav> <main> <section id=\"home\"> <h2>Home</h2> <p>Esta \u00e9 a p\u00e1gina principal do nosso site.</p> </section> <section id=\"sobre\"> <h2>Sobre</h2> <p>Saiba mais sobre o prop\u00f3sito deste site.</p> </section> <section id=\"contato\"> <h2>Contato</h2> <p>Entre em contato conosco para mais informa\u00e7\u00f5es.</p> </section> </main> <footer> <p>&copy; 2024 Site Responsivo. Todos os direitos reservados.</p> </footer> </body> </html> Estilos CSS: /* Reset b\u00e1sico */ * { margin: 0; padding: 0; box-sizing: border-box; } /* Layout b\u00e1sico para mobile */ body { font-family: Arial, sans-serif; font-size: 16px; /* Unidades relativas, usando 'em' */ line-height: 1.6; padding: 10px; } header { text-align: center; background-color: #333; color: white; padding: 1em; } nav ul { list-style: none; padding: 0; text-align: center; background-color: #444; } nav ul li { display: inline; margin-right: 10px; } nav ul li a { color: white; text-decoration: none; padding: 10px; display: inline-block; } main { margin-top: 20px; } section { margin-bottom: 20px; } footer { text-align: center; padding: 10px; background-color: #333; color: white; } /* Media Queries para telas maiores */ @media (min-width: 600px) { body { font-size: 1.2em; /* Aumenta a fonte em telas maiores */ } nav ul li { margin-right: 20px; } main { max-width: 900px; margin: 0 auto; } } @media (min-width: 1024px) { body { font-size: 1.5em; /* Aumenta mais a fonte para grandes telas */ } header, footer { text-align: left; padding: 20px; } nav ul { text-align: left; } nav ul li { display: inline-block; } } Explica\u00e7\u00e3o: Unidades relativas : O uso de em e rem permite que o layout seja mais flex\u00edvel e responsivo. Por exemplo, a font-size: 1.2em significa que o tamanho da fonte ser\u00e1 1,2 vezes o tamanho da fonte padr\u00e3o do elemento pai. Media Queries : @media (min-width: 600px) : Altera o layout para telas com largura maior que 600px. Neste caso, o tamanho da fonte e o espa\u00e7amento s\u00e3o aumentados. @media (min-width: 1024px) : Para telas grandes, como desktops, a fonte e o layout s\u00e3o ajustados para dar uma melhor experi\u00eancia visual, com mais espa\u00e7amento e uma disposi\u00e7\u00e3o diferente. Como testar: Abra o c\u00f3digo no navegador e redimensione a janela para ver como o layout se adapta a diferentes larguras de tela. Imagem Responsiva Para adicionar uma imagem responsiva ao seu site, voc\u00ea pode usar a propriedade CSS max-width para garantir que a imagem se ajuste ao tamanho da tela, sem exceder a largura do container. Atualiza\u00e7\u00e3o no HTML: No c\u00f3digo HTML, voc\u00ea pode adicionar uma imagem dentro de uma se\u00e7\u00e3o, como no exemplo abaixo: <main> <section id=\"home\"> <h2>Home</h2> <p>Esta \u00e9 a p\u00e1gina principal do nosso site.</p> <img src=\"imagem-exemplo.jpg\" alt=\"Exemplo de imagem responsiva\"> </section> <section id=\"sobre\"> <h2>Sobre</h2> <p>Saiba mais sobre o prop\u00f3sito deste site.</p> </section> <section id=\"contato\"> <h2>Contato</h2> <p>Entre em contato conosco para mais informa\u00e7\u00f5es.</p> </section> </main> Atualiza\u00e7\u00e3o no CSS: No CSS, voc\u00ea pode usar max-width: 100% para que a imagem n\u00e3o ultrapasse a largura do container: img { max-width: 100%; height: auto; /* Mant\u00e9m a propor\u00e7\u00e3o da imagem */ display: block; /* Remove espa\u00e7os brancos ao redor da imagem */ margin: 20px auto; /* Centraliza a imagem e adiciona margem */ } Explica\u00e7\u00e3o: max-width: 100% : Garante que a imagem ocupe no m\u00e1ximo 100% da largura do container (por exemplo, a largura da se\u00e7\u00e3o ou da p\u00e1gina), mas nunca mais do que isso. Se a imagem for menor que o container, ela manter\u00e1 seu tamanho original. height: auto : Mant\u00e9m a propor\u00e7\u00e3o da imagem enquanto ela \u00e9 redimensionada. display: block : Remove o comportamento padr\u00e3o da imagem como um elemento inline e permite que margens funcionem corretamente para centraliz\u00e1-la. margin: 20px auto : Adiciona espa\u00e7o em volta da imagem e a centraliza horizontalmente ( auto no eixo horizontal). Testando: Quando voc\u00ea abrir o site no navegador, redimensione a janela para observar como a imagem se ajusta automaticamente, sem distor\u00e7\u00f5es, conforme o tamanho da tela muda. Fontes A melhor forma de declarar fontes em um site envolve combinar boas pr\u00e1ticas de legibilidade, flexibilidade e otimiza\u00e7\u00e3o de performance. Aqui est\u00e3o alguns pontos importantes e um exemplo pr\u00e1tico usando a fonte padr\u00e3o do sistema , fontes alternativas, e uma fonte personalizada do Google Fonts. 1. Usar Fontes Seguras para a Web (Web Safe Fonts) : Definir uma pilha de fontes que inclua fontes padr\u00e3o, como Arial , Verdana , Times New Roman , entre outras, garante que o texto seja exibido mesmo se a fonte personalizada n\u00e3o for carregada. Exemplo: css font-family: \"Arial\", \"Helvetica\", sans-serif; 2. Fonte Personalizada com Google Fonts : Google Fonts \u00e9 uma op\u00e7\u00e3o amplamente usada e gratuita para incluir fontes personalizadas. Usar fontes personalizadas melhora a est\u00e9tica do site, mas tamb\u00e9m deve-se garantir o uso de fontes alternativas, caso a personalizada n\u00e3o carregue. Exemplo de importa\u00e7\u00e3o de uma fonte do Google: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"> 3. Pilha de Fontes com Fontes Gen\u00e9ricas : Sempre \u00e9 importante fornecer fontes de fallback (alternativas) no caso de a fonte principal n\u00e3o estar dispon\u00edvel. Isso ajuda a manter a consist\u00eancia e a acessibilidade do design. Exemplo com uma pilha de fontes: css body { font-family: \"Roboto\", \"Arial\", sans-serif; } Aqui, se a fonte Roboto n\u00e3o for carregada, o navegador utilizar\u00e1 Arial . Se nenhuma estiver dispon\u00edvel, ele usar\u00e1 qualquer fonte sans-serif dispon\u00edvel no sistema do usu\u00e1rio. 4. Uso de Fontes Padr\u00e3o do Sistema : As fontes padr\u00e3o de sistema, como -apple-system no macOS e iOS, Segoe UI no Windows, s\u00e3o r\u00e1pidas de carregar, garantindo que o site tenha uma boa performance. Exemplo: css body { font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; } 5. Declarar Fontes com Diferentes Pesos e Estilos : Quando voc\u00ea importa uma fonte de servi\u00e7os como Google Fonts, \u00e9 poss\u00edvel especificar diferentes pesos e estilos. Isso garante flexibilidade no design, como o uso de negrito ou it\u00e1lico. Exemplo de importa\u00e7\u00e3o: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"> Aqui, s\u00e3o carregados os pesos 300 , 400 , 500 , e 700 da fonte Roboto . 6. Melhorar Performance com font-display: swap : O atributo display=swap ao importar fontes personalizadas no Google Fonts instrui o navegador a usar uma fonte de fallback at\u00e9 que a fonte personalizada seja carregada, evitando que o texto fique invis\u00edvel enquanto a fonte carrega. Exemplo: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"> Exemplo Completo: Aqui est\u00e1 um exemplo de como configurar uma pilha de fontes de maneira eficiente: <!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo de Fontes</title> <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"> <style> body { font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; font-size: 1rem; line-height: 1.5; margin: 20px; } h1 { font-weight: 700; /* Negrito */ } p { font-weight: 400; /* Normal */ } </style> </head> <body> <h1>Exemplo de uso de fontes</h1> <p>Este \u00e9 um exemplo de como declarar fontes de forma eficiente e responsiva para garantir a melhor performance e legibilidade.</p> </body> </html> Resumo das Melhores Pr\u00e1ticas: Use fontes padr\u00e3o do sistema para melhorar a performance. Inclua uma pilha de fontes com alternativas em caso de falha no carregamento. Use Google Fonts ou outra fonte personalizada com font-display: swap para melhorar a experi\u00eancia de carregamento. Adicione diferentes pesos de fonte, mas somente os necess\u00e1rios, para evitar sobrecarga de downloads.","title":"Responsividade"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#responsividade","text":"Para criar um site responsivo utilizando media queries e unidades de dimensionamento relativas , voc\u00ea pode seguir este exemplo b\u00e1sico:","title":"Responsividade"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#estrutura-do-html","text":"<!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Site Responsivo</title> <link rel=\"stylesheet\" href=\"style.css\"> </head> <body> <header> <h1>Bem-vindo ao site responsivo</h1> </header> <nav> <ul> <li><a href=\"#home\">Home</a></li> <li><a href=\"#sobre\">Sobre</a></li> <li><a href=\"#contato\">Contato</a></li> </ul> </nav> <main> <section id=\"home\"> <h2>Home</h2> <p>Esta \u00e9 a p\u00e1gina principal do nosso site.</p> </section> <section id=\"sobre\"> <h2>Sobre</h2> <p>Saiba mais sobre o prop\u00f3sito deste site.</p> </section> <section id=\"contato\"> <h2>Contato</h2> <p>Entre em contato conosco para mais informa\u00e7\u00f5es.</p> </section> </main> <footer> <p>&copy; 2024 Site Responsivo. Todos os direitos reservados.</p> </footer> </body> </html>","title":"Estrutura do HTML:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#estilos-css","text":"/* Reset b\u00e1sico */ * { margin: 0; padding: 0; box-sizing: border-box; } /* Layout b\u00e1sico para mobile */ body { font-family: Arial, sans-serif; font-size: 16px; /* Unidades relativas, usando 'em' */ line-height: 1.6; padding: 10px; } header { text-align: center; background-color: #333; color: white; padding: 1em; } nav ul { list-style: none; padding: 0; text-align: center; background-color: #444; } nav ul li { display: inline; margin-right: 10px; } nav ul li a { color: white; text-decoration: none; padding: 10px; display: inline-block; } main { margin-top: 20px; } section { margin-bottom: 20px; } footer { text-align: center; padding: 10px; background-color: #333; color: white; } /* Media Queries para telas maiores */ @media (min-width: 600px) { body { font-size: 1.2em; /* Aumenta a fonte em telas maiores */ } nav ul li { margin-right: 20px; } main { max-width: 900px; margin: 0 auto; } } @media (min-width: 1024px) { body { font-size: 1.5em; /* Aumenta mais a fonte para grandes telas */ } header, footer { text-align: left; padding: 20px; } nav ul { text-align: left; } nav ul li { display: inline-block; } }","title":"Estilos CSS:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#explicacao","text":"Unidades relativas : O uso de em e rem permite que o layout seja mais flex\u00edvel e responsivo. Por exemplo, a font-size: 1.2em significa que o tamanho da fonte ser\u00e1 1,2 vezes o tamanho da fonte padr\u00e3o do elemento pai. Media Queries : @media (min-width: 600px) : Altera o layout para telas com largura maior que 600px. Neste caso, o tamanho da fonte e o espa\u00e7amento s\u00e3o aumentados. @media (min-width: 1024px) : Para telas grandes, como desktops, a fonte e o layout s\u00e3o ajustados para dar uma melhor experi\u00eancia visual, com mais espa\u00e7amento e uma disposi\u00e7\u00e3o diferente.","title":"Explica\u00e7\u00e3o:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#como-testar","text":"Abra o c\u00f3digo no navegador e redimensione a janela para ver como o layout se adapta a diferentes larguras de tela.","title":"Como testar:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#imagem-responsiva","text":"Para adicionar uma imagem responsiva ao seu site, voc\u00ea pode usar a propriedade CSS max-width para garantir que a imagem se ajuste ao tamanho da tela, sem exceder a largura do container.","title":"Imagem Responsiva"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#atualizacao-no-html","text":"No c\u00f3digo HTML, voc\u00ea pode adicionar uma imagem dentro de uma se\u00e7\u00e3o, como no exemplo abaixo: <main> <section id=\"home\"> <h2>Home</h2> <p>Esta \u00e9 a p\u00e1gina principal do nosso site.</p> <img src=\"imagem-exemplo.jpg\" alt=\"Exemplo de imagem responsiva\"> </section> <section id=\"sobre\"> <h2>Sobre</h2> <p>Saiba mais sobre o prop\u00f3sito deste site.</p> </section> <section id=\"contato\"> <h2>Contato</h2> <p>Entre em contato conosco para mais informa\u00e7\u00f5es.</p> </section> </main>","title":"Atualiza\u00e7\u00e3o no HTML:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#atualizacao-no-css","text":"No CSS, voc\u00ea pode usar max-width: 100% para que a imagem n\u00e3o ultrapasse a largura do container: img { max-width: 100%; height: auto; /* Mant\u00e9m a propor\u00e7\u00e3o da imagem */ display: block; /* Remove espa\u00e7os brancos ao redor da imagem */ margin: 20px auto; /* Centraliza a imagem e adiciona margem */ }","title":"Atualiza\u00e7\u00e3o no CSS:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#explicacao_1","text":"max-width: 100% : Garante que a imagem ocupe no m\u00e1ximo 100% da largura do container (por exemplo, a largura da se\u00e7\u00e3o ou da p\u00e1gina), mas nunca mais do que isso. Se a imagem for menor que o container, ela manter\u00e1 seu tamanho original. height: auto : Mant\u00e9m a propor\u00e7\u00e3o da imagem enquanto ela \u00e9 redimensionada. display: block : Remove o comportamento padr\u00e3o da imagem como um elemento inline e permite que margens funcionem corretamente para centraliz\u00e1-la. margin: 20px auto : Adiciona espa\u00e7o em volta da imagem e a centraliza horizontalmente ( auto no eixo horizontal).","title":"Explica\u00e7\u00e3o:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#testando","text":"Quando voc\u00ea abrir o site no navegador, redimensione a janela para observar como a imagem se ajusta automaticamente, sem distor\u00e7\u00f5es, conforme o tamanho da tela muda.","title":"Testando:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#fontes","text":"A melhor forma de declarar fontes em um site envolve combinar boas pr\u00e1ticas de legibilidade, flexibilidade e otimiza\u00e7\u00e3o de performance. Aqui est\u00e3o alguns pontos importantes e um exemplo pr\u00e1tico usando a fonte padr\u00e3o do sistema , fontes alternativas, e uma fonte personalizada do Google Fonts.","title":"Fontes"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#1-usar-fontes-seguras-para-a-web-web-safe-fonts","text":"Definir uma pilha de fontes que inclua fontes padr\u00e3o, como Arial , Verdana , Times New Roman , entre outras, garante que o texto seja exibido mesmo se a fonte personalizada n\u00e3o for carregada. Exemplo: css font-family: \"Arial\", \"Helvetica\", sans-serif;","title":"1. Usar Fontes Seguras para a Web (Web Safe Fonts):"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#2-fonte-personalizada-com-google-fonts","text":"Google Fonts \u00e9 uma op\u00e7\u00e3o amplamente usada e gratuita para incluir fontes personalizadas. Usar fontes personalizadas melhora a est\u00e9tica do site, mas tamb\u00e9m deve-se garantir o uso de fontes alternativas, caso a personalizada n\u00e3o carregue. Exemplo de importa\u00e7\u00e3o de uma fonte do Google: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">","title":"2. Fonte Personalizada com Google Fonts:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#3-pilha-de-fontes-com-fontes-genericas","text":"Sempre \u00e9 importante fornecer fontes de fallback (alternativas) no caso de a fonte principal n\u00e3o estar dispon\u00edvel. Isso ajuda a manter a consist\u00eancia e a acessibilidade do design. Exemplo com uma pilha de fontes: css body { font-family: \"Roboto\", \"Arial\", sans-serif; } Aqui, se a fonte Roboto n\u00e3o for carregada, o navegador utilizar\u00e1 Arial . Se nenhuma estiver dispon\u00edvel, ele usar\u00e1 qualquer fonte sans-serif dispon\u00edvel no sistema do usu\u00e1rio.","title":"3. Pilha de Fontes com Fontes Gen\u00e9ricas:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#4-uso-de-fontes-padrao-do-sistema","text":"As fontes padr\u00e3o de sistema, como -apple-system no macOS e iOS, Segoe UI no Windows, s\u00e3o r\u00e1pidas de carregar, garantindo que o site tenha uma boa performance. Exemplo: css body { font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; }","title":"4. Uso de Fontes Padr\u00e3o do Sistema:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#5-declarar-fontes-com-diferentes-pesos-e-estilos","text":"Quando voc\u00ea importa uma fonte de servi\u00e7os como Google Fonts, \u00e9 poss\u00edvel especificar diferentes pesos e estilos. Isso garante flexibilidade no design, como o uso de negrito ou it\u00e1lico. Exemplo de importa\u00e7\u00e3o: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\"> Aqui, s\u00e3o carregados os pesos 300 , 400 , 500 , e 700 da fonte Roboto .","title":"5. Declarar Fontes com Diferentes Pesos e Estilos:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#6-melhorar-performance-com-font-display-swap","text":"O atributo display=swap ao importar fontes personalizadas no Google Fonts instrui o navegador a usar uma fonte de fallback at\u00e9 que a fonte personalizada seja carregada, evitando que o texto fique invis\u00edvel enquanto a fonte carrega. Exemplo: html <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">","title":"6. Melhorar Performance com font-display: swap:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#exemplo-completo","text":"Aqui est\u00e1 um exemplo de como configurar uma pilha de fontes de maneira eficiente: <!DOCTYPE html> <html lang=\"pt-br\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo de Fontes</title> <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"> <style> body { font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; font-size: 1rem; line-height: 1.5; margin: 20px; } h1 { font-weight: 700; /* Negrito */ } p { font-weight: 400; /* Normal */ } </style> </head> <body> <h1>Exemplo de uso de fontes</h1> <p>Este \u00e9 um exemplo de como declarar fontes de forma eficiente e responsiva para garantir a melhor performance e legibilidade.</p> </body> </html>","title":"Exemplo Completo:"},{"location":"_Disciplina/Roteiros/css/siteresponsivo/#resumo-das-melhores-praticas","text":"Use fontes padr\u00e3o do sistema para melhorar a performance. Inclua uma pilha de fontes com alternativas em caso de falha no carregamento. Use Google Fonts ou outra fonte personalizada com font-display: swap para melhorar a experi\u00eancia de carregamento. Adicione diferentes pesos de fonte, mas somente os necess\u00e1rios, para evitar sobrecarga de downloads.","title":"Resumo das Melhores Pr\u00e1ticas:"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/","text":"Unidades Relativas As unidades relativas s\u00e3o essenciais no design responsivo, pois se adaptam a diferentes tamanhos de tela, oferecendo flexibilidade e escalabilidade no layout. Vamos explorar as principais unidades relativas utilizadas no CSS: 1. em (relativo ao tamanho da fonte) A unidade em \u00e9 relativa ao tamanho da fonte do elemento pai. Se o tamanho da fonte do elemento pai for 16px , por exemplo, 1em ser\u00e1 equivalente a 16px . Exemplo: ```css body { font-size: 16px; } h1 { font-size: 2em; / 32px / } p { font-size: 1em; / 16px / } ``` 2. rem (relativo ao tamanho da fonte raiz) A unidade rem \u00e9 relativa ao tamanho da fonte da raiz do documento, geralmente o elemento html . \u00c9 \u00fatil para manter a consist\u00eancia no design, pois sempre se refere ao tamanho de fonte definido no html . Exemplo: ```css html { font-size: 16px; / 1rem = 16px / } h1 { font-size: 2rem; / 32px / } p { font-size: 1rem; / 16px / } ``` 3. % (porcentagem) As porcentagens s\u00e3o usadas para definir tamanhos relativos ao elemento pai. Elas podem ser aplicadas a margens, larguras, alturas, etc. Exemplo: css div { width: 50%; /* 50% da largura do elemento pai */ height: 100%; /* 100% da altura do elemento pai */ } 4. vh e vw (viewport height e viewport width) As unidades vh e vw s\u00e3o relativas \u00e0 altura e largura da viewport (janela vis\u00edvel). 1vh equivale a 1% da altura da viewport, e 1vw equivale a 1% da largura da viewport. Exemplo: css section { width: 100vw; /* 100% da largura da viewport */ height: 50vh; /* 50% da altura da viewport */ } 5. min-width , max-width , min-height , max-height Essas propriedades controlam o tamanho m\u00ednimo e m\u00e1ximo dos elementos, tornando-os mais responsivos em diferentes telas. Exemplo: css div { max-width: 100%; /* N\u00e3o excede 100% da largura da tela */ min-height: 300px; /* Altura m\u00ednima de 300px */ } Exemplo Pr\u00e1tico de Site Responsivo Aqui est\u00e1 um exemplo pr\u00e1tico aplicando algumas dessas unidades para criar um site responsivo: <!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo Responsivo</title> <style> body { font-size: 16px; margin: 0; padding: 0; } header { background-color: #333; color: white; text-align: center; padding: 2rem; } .container { width: 90%; max-width: 1200px; margin: 0 auto; padding: 1rem; } .box { background-color: #f4f4f4; margin: 1rem 0; padding: 2em; border-radius: 5px; } footer { background-color: #333; color: white; text-align: center; padding: 1rem; position: relative; bottom: 0; width: 100vw; } </style> </head> <body> <header> <h1>Site Responsivo</h1> </header> <div class=\"container\"> <div class=\"box\"> <p>Esta \u00e9 uma caixa que usa unidades relativas para se adaptar a diferentes tamanhos de tela.</p> </div> <div class=\"box\"> <p>A largura da p\u00e1gina est\u00e1 definida em porcentagens, e o espa\u00e7amento em `rem` e `em`.</p> </div> </div> <footer> <p>Rodap\u00e9 do site</p> </footer> </body> </html> Considera\u00e7\u00f5es Finais Ao combinar essas unidades relativas, voc\u00ea pode criar layouts que se adaptam a diferentes tamanhos de tela, tornando seu site mais responsivo e acess\u00edvel em dispositivos m\u00f3veis. \u00c9 importante testar os tamanhos e espa\u00e7amentos em v\u00e1rias resolu\u00e7\u00f5es para garantir uma boa experi\u00eancia de usu\u00e1rio. Se precisar de mais detalhes ou exemplos espec\u00edficos, posso ajudar a refinar o conte\u00fado!","title":"Unidades Relativas"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#unidades-relativas","text":"As unidades relativas s\u00e3o essenciais no design responsivo, pois se adaptam a diferentes tamanhos de tela, oferecendo flexibilidade e escalabilidade no layout. Vamos explorar as principais unidades relativas utilizadas no CSS:","title":"Unidades Relativas"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#1-em-relativo-ao-tamanho-da-fonte","text":"A unidade em \u00e9 relativa ao tamanho da fonte do elemento pai. Se o tamanho da fonte do elemento pai for 16px , por exemplo, 1em ser\u00e1 equivalente a 16px . Exemplo: ```css body { font-size: 16px; } h1 { font-size: 2em; / 32px / } p { font-size: 1em; / 16px / } ```","title":"1. em (relativo ao tamanho da fonte)"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#2-rem-relativo-ao-tamanho-da-fonte-raiz","text":"A unidade rem \u00e9 relativa ao tamanho da fonte da raiz do documento, geralmente o elemento html . \u00c9 \u00fatil para manter a consist\u00eancia no design, pois sempre se refere ao tamanho de fonte definido no html . Exemplo: ```css html { font-size: 16px; / 1rem = 16px / } h1 { font-size: 2rem; / 32px / } p { font-size: 1rem; / 16px / } ```","title":"2. rem (relativo ao tamanho da fonte raiz)"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#3-porcentagem","text":"As porcentagens s\u00e3o usadas para definir tamanhos relativos ao elemento pai. Elas podem ser aplicadas a margens, larguras, alturas, etc. Exemplo: css div { width: 50%; /* 50% da largura do elemento pai */ height: 100%; /* 100% da altura do elemento pai */ }","title":"3. % (porcentagem)"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#4-vh-e-vw-viewport-height-e-viewport-width","text":"As unidades vh e vw s\u00e3o relativas \u00e0 altura e largura da viewport (janela vis\u00edvel). 1vh equivale a 1% da altura da viewport, e 1vw equivale a 1% da largura da viewport. Exemplo: css section { width: 100vw; /* 100% da largura da viewport */ height: 50vh; /* 50% da altura da viewport */ }","title":"4. vh e vw (viewport height e viewport width)"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#5-min-width-max-width-min-height-max-height","text":"Essas propriedades controlam o tamanho m\u00ednimo e m\u00e1ximo dos elementos, tornando-os mais responsivos em diferentes telas. Exemplo: css div { max-width: 100%; /* N\u00e3o excede 100% da largura da tela */ min-height: 300px; /* Altura m\u00ednima de 300px */ }","title":"5. min-width, max-width, min-height, max-height"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#exemplo-pratico-de-site-responsivo","text":"Aqui est\u00e1 um exemplo pr\u00e1tico aplicando algumas dessas unidades para criar um site responsivo: <!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Exemplo Responsivo</title> <style> body { font-size: 16px; margin: 0; padding: 0; } header { background-color: #333; color: white; text-align: center; padding: 2rem; } .container { width: 90%; max-width: 1200px; margin: 0 auto; padding: 1rem; } .box { background-color: #f4f4f4; margin: 1rem 0; padding: 2em; border-radius: 5px; } footer { background-color: #333; color: white; text-align: center; padding: 1rem; position: relative; bottom: 0; width: 100vw; } </style> </head> <body> <header> <h1>Site Responsivo</h1> </header> <div class=\"container\"> <div class=\"box\"> <p>Esta \u00e9 uma caixa que usa unidades relativas para se adaptar a diferentes tamanhos de tela.</p> </div> <div class=\"box\"> <p>A largura da p\u00e1gina est\u00e1 definida em porcentagens, e o espa\u00e7amento em `rem` e `em`.</p> </div> </div> <footer> <p>Rodap\u00e9 do site</p> </footer> </body> </html>","title":"Exemplo Pr\u00e1tico de Site Responsivo"},{"location":"_Disciplina/Roteiros/css/unidadesrelativas/#consideracoes-finais","text":"Ao combinar essas unidades relativas, voc\u00ea pode criar layouts que se adaptam a diferentes tamanhos de tela, tornando seu site mais responsivo e acess\u00edvel em dispositivos m\u00f3veis. \u00c9 importante testar os tamanhos e espa\u00e7amentos em v\u00e1rias resolu\u00e7\u00f5es para garantir uma boa experi\u00eancia de usu\u00e1rio. Se precisar de mais detalhes ou exemplos espec\u00edficos, posso ajudar a refinar o conte\u00fado!","title":"Considera\u00e7\u00f5es Finais"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/","text":"Tags Sem\u00e2nticas em HTML Objetivo: Nesta aula, voc\u00ea aprender\u00e1 sobre as tags sem\u00e2nticas do HTML e como us\u00e1-las para criar uma estrutura de site b\u00e1sica. Utilizaremos conte\u00fado fict\u00edcio \"Lorem Ipsum\" para ilustrar a aplica\u00e7\u00e3o dessas tags. 1. Introdu\u00e7\u00e3o \u00e0s Tags Sem\u00e2nticas Tags sem\u00e2nticas s\u00e3o elementos HTML que n\u00e3o apenas definem o layout de um site, mas tamb\u00e9m fornecem significado ao conte\u00fado. Isso melhora a acessibilidade, a usabilidade e o SEO (Search Engine Optimization) de um site. Algumas das principais tags sem\u00e2nticas incluem: <header> : Cabe\u00e7alho do site ou de uma se\u00e7\u00e3o. <nav> : Menu de navega\u00e7\u00e3o. <article> : Conte\u00fado independente, como um post ou um artigo. <section> : Se\u00e7\u00e3o de conte\u00fado relacionada. <aside> : Conte\u00fado relacionado, como barras laterais. <footer> : Rodap\u00e9 do site ou de uma se\u00e7\u00e3o. 2. Estrutura do Site B\u00e1sico Vamos criar um site simples com as seguintes se\u00e7\u00f5es: Cabe\u00e7alho com o t\u00edtulo do site. Menu de navega\u00e7\u00e3o. Um artigo principal. Uma se\u00e7\u00e3o adicional. Um rodap\u00e9. 3. Exemplo de C\u00f3digo <!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Meu Site B\u00e1sico</title> <style> body { font-family: Arial, sans-serif; margin: 0; padding: 0; } header, nav, article, section, aside, footer { padding: 20px; margin: 10px; border: 1px solid #ddd; } header { background-color: #f8f8f8; } nav { background-color: #e8e8e8; } footer { background-color: #f1f1f1; } </style> </head> <body> <header> <h1>Bem-vindo ao Meu Site</h1> </header> <nav> <ul> <li><a href=\"#\">In\u00edcio</a></li> <li><a href=\"#\">Sobre</a></li> <li><a href=\"#\">Servi\u00e7os</a></li> <li><a href=\"#\">Contato</a></li> </ul> </nav> <article> <h2>Artigo Principal</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id dolor id nibh ultricies vehicula ut id elit. Cras mattis consectetur purus sit amet fermentum.</p> <p>Maecenas sed diam eget risus varius blandit sit amet non magna. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p> </article> <section> <h2>Outra Se\u00e7\u00e3o</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p> <p>Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper.</p> </section> <aside> <h2>Barra Lateral</h2> <p>Informa\u00e7\u00f5es adicionais ou links relacionados podem ser colocados aqui.</p> </aside> <footer> <p>\u00a9 2024 Meu Site B\u00e1sico. Todos os direitos reservados.</p> </footer> </body> </html> 4. Explica\u00e7\u00e3o do Exemplo <header> : Cont\u00e9m o t\u00edtulo do site. <nav> : Um menu de navega\u00e7\u00e3o b\u00e1sico com links fict\u00edcios. <article> : O conte\u00fado principal do site. <section> : Uma se\u00e7\u00e3o adicional que poderia conter mais conte\u00fado relacionado. <aside> : Uma barra lateral com informa\u00e7\u00f5es extras. <footer> : O rodap\u00e9 com informa\u00e7\u00f5es de direitos autorais. 5. Conclus\u00e3o As tags sem\u00e2nticas s\u00e3o fundamentais para criar sites bem estruturados e acess\u00edveis. Ao usar essas tags, o HTML fica mais claro tanto para desenvolvedores quanto para mecanismos de busca, melhorando a experi\u00eancia geral do usu\u00e1rio. Tarefa: Crie seu pr\u00f3prio site usando tags sem\u00e2nticas e substitua o conte\u00fado \"Lorem Ipsum\" por informa\u00e7\u00f5es reais de um projeto ou interesse pessoal.","title":"Tags sem\u00e2ntica"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#tags-semanticas-em-html","text":"","title":"Tags Sem\u00e2nticas em HTML"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#objetivo","text":"Nesta aula, voc\u00ea aprender\u00e1 sobre as tags sem\u00e2nticas do HTML e como us\u00e1-las para criar uma estrutura de site b\u00e1sica. Utilizaremos conte\u00fado fict\u00edcio \"Lorem Ipsum\" para ilustrar a aplica\u00e7\u00e3o dessas tags.","title":"Objetivo:"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#1-introducao-as-tags-semanticas","text":"Tags sem\u00e2nticas s\u00e3o elementos HTML que n\u00e3o apenas definem o layout de um site, mas tamb\u00e9m fornecem significado ao conte\u00fado. Isso melhora a acessibilidade, a usabilidade e o SEO (Search Engine Optimization) de um site. Algumas das principais tags sem\u00e2nticas incluem: <header> : Cabe\u00e7alho do site ou de uma se\u00e7\u00e3o. <nav> : Menu de navega\u00e7\u00e3o. <article> : Conte\u00fado independente, como um post ou um artigo. <section> : Se\u00e7\u00e3o de conte\u00fado relacionada. <aside> : Conte\u00fado relacionado, como barras laterais. <footer> : Rodap\u00e9 do site ou de uma se\u00e7\u00e3o.","title":"1. Introdu\u00e7\u00e3o \u00e0s Tags Sem\u00e2nticas"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#2-estrutura-do-site-basico","text":"Vamos criar um site simples com as seguintes se\u00e7\u00f5es: Cabe\u00e7alho com o t\u00edtulo do site. Menu de navega\u00e7\u00e3o. Um artigo principal. Uma se\u00e7\u00e3o adicional. Um rodap\u00e9.","title":"2. Estrutura do Site B\u00e1sico"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#3-exemplo-de-codigo","text":"<!DOCTYPE html> <html lang=\"pt-BR\"> <head> <meta charset=\"UTF-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Meu Site B\u00e1sico</title> <style> body { font-family: Arial, sans-serif; margin: 0; padding: 0; } header, nav, article, section, aside, footer { padding: 20px; margin: 10px; border: 1px solid #ddd; } header { background-color: #f8f8f8; } nav { background-color: #e8e8e8; } footer { background-color: #f1f1f1; } </style> </head> <body> <header> <h1>Bem-vindo ao Meu Site</h1> </header> <nav> <ul> <li><a href=\"#\">In\u00edcio</a></li> <li><a href=\"#\">Sobre</a></li> <li><a href=\"#\">Servi\u00e7os</a></li> <li><a href=\"#\">Contato</a></li> </ul> </nav> <article> <h2>Artigo Principal</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id dolor id nibh ultricies vehicula ut id elit. Cras mattis consectetur purus sit amet fermentum.</p> <p>Maecenas sed diam eget risus varius blandit sit amet non magna. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p> </article> <section> <h2>Outra Se\u00e7\u00e3o</h2> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p> <p>Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id ligula porta felis euismod semper.</p> </section> <aside> <h2>Barra Lateral</h2> <p>Informa\u00e7\u00f5es adicionais ou links relacionados podem ser colocados aqui.</p> </aside> <footer> <p>\u00a9 2024 Meu Site B\u00e1sico. Todos os direitos reservados.</p> </footer> </body> </html>","title":"3. Exemplo de C\u00f3digo"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#4-explicacao-do-exemplo","text":"<header> : Cont\u00e9m o t\u00edtulo do site. <nav> : Um menu de navega\u00e7\u00e3o b\u00e1sico com links fict\u00edcios. <article> : O conte\u00fado principal do site. <section> : Uma se\u00e7\u00e3o adicional que poderia conter mais conte\u00fado relacionado. <aside> : Uma barra lateral com informa\u00e7\u00f5es extras. <footer> : O rodap\u00e9 com informa\u00e7\u00f5es de direitos autorais.","title":"4. Explica\u00e7\u00e3o do Exemplo"},{"location":"_Disciplina/Roteiros/html/tags%20sem%C3%A2ntica/#5-conclusao","text":"As tags sem\u00e2nticas s\u00e3o fundamentais para criar sites bem estruturados e acess\u00edveis. Ao usar essas tags, o HTML fica mais claro tanto para desenvolvedores quanto para mecanismos de busca, melhorando a experi\u00eancia geral do usu\u00e1rio. Tarefa: Crie seu pr\u00f3prio site usando tags sem\u00e2nticas e substitua o conte\u00fado \"Lorem Ipsum\" por informa\u00e7\u00f5es reais de um projeto ou interesse pessoal.","title":"5. Conclus\u00e3o"},{"location":"_Disciplina/Roteiros/js/array/","text":"Neste artigo final do m\u00f3dulo, n\u00f3s vamos dar uma olhada em arrays - um elegante meio de armazenar uma lista de itens em uma mesmo vari\u00e1vel. Aqui n\u00f3s vemos o porqu\u00ea isto \u00e9 \u00fatil, depois exploraremos como criar uma array, recuperar, adicionar e remover itens armazenados em uma array, e mais. Pr\u00e9-requisitos: Leitura b\u00e1sica sobre computadores, um b\u00e1sico entendimento de HTML e CSS, e conhecimento sobre o que \u00e9 JavaScript. Objetivo: Entender o que \u00e9 array e como manipular ela em JavaScript. O que \u00e9 uma array? Arrays s\u00e3o geralmente descritas como \"lista de objetos\"; elas s\u00e3o basicamente objetos que contem m\u00faltiplos valores armazenados em uma lista. Um objeto array pode ser armazenado em vari\u00e1veis e ser tratado de forma muito similar a qualquer outro tipo de valor, a diferen\u00e7a est\u00e1 em podermos acessar cada valor dentro da lista individualmente, e fazer super \u00fateis e eficientes coisas com a lista, como la\u00e7o atrav\u00e9s da lista e fazer a mesma coisa para cada valor. Talvez n\u00f3s pegamos uma s\u00e9rie de produtos e seus pre\u00e7os armazenados em uma array, e n\u00f3s queremos fazer um la\u00e7o atrav\u00e9s de todos eles e mostrar em um recibo, enquanto somamos todos os pre\u00e7os e mostramos o pre\u00e7o total ao final. Se n\u00f3s n\u00e3o tivessemos arrays, ter\u00edamos que armazenar cada item em uma vari\u00e1vel separada, ent\u00e3o chamar o c\u00f3digo para mostrar e adicionar separadamente cada item. Isto seria muito mais longo de escrever, menos eficiente e mais suscet\u00edvel a erros. Se n\u00f3s temos 10 itens para adicionar na fatura, isto \u00e9 ruim o bastante, mas e se fosse 100 itens ou 1000? N\u00f3s vamos retornar a este exemplo mais tarde neste artigo. Criando uma array Arrays s\u00e3o contru\u00eddas de colchetes, os quais cont\u00e9m uma lista de itens separada por v\u00edrgulas. Vamos supor que queremos armazenar uma lista de compras em uma array \u2014 n\u00f3s temos algo como o seguinte. Digite as linhas abaixo no seu console: var shopping = [\"bread\", \"milk\", \"cheese\", \"hummus\", \"noodles\"]; shopping; Neste caso, cada item na array \u00e9 uma string, mas tenha em mente que voc\u00ea pode armazenar qualquer item em uma array \u2014 string, n\u00famero, objeto, outra vari\u00e1vel, at\u00e9 outra array. Voc\u00ea pode tamb\u00e9m misturar e combinar tipos de itens \u2014 eles n\u00e3o t\u00eam que ser todos n\u00fameros, strings, etc. Tente isto: var sequence = [1, 1, 2, 3, 5, 8, 13]; var random = [\"tree\", 795, [0, 1, 2]]; Tente criar um par de arrays voc\u00ea mesmo, antes de seguir em frente. Acessando e modificando itens de uma array Voc\u00ea pode acessar itens individuais em uma array usando a nota\u00e7\u00e3o de colchetes, da mesma forma que voc\u00ea acessa as letras em uma string . Digite o seguinte no seu console: shopping[0]; // returns \"bread\" Voc\u00ea tamb\u00e9m pode modificar um item em uma array simplesmente dando um novo valor ao item. Tente isto: shopping[0] = \"tahini\"; shopping; // shopping vai retornar agora [ \"tahini\", \"milk\", \"cheese\", \"hummus\", \"noodles\" ] N\u00f3s dissemos isto antes, mas como lembrete \u2014 computadores come\u00e7am a contar do 0! Note que uma array dentro de uma array \u00e9 chamada de array multidimensional. Voc\u00ea pode acessar um item dentro de uma array que est\u00e1 localizada dentro de outra array, colocando dois conjuntos de colchetes juntos. Por exemplo, para acessar um dos itens dentro de uma array, que \u00e9 o terceiro item dentro da array random (veja a se\u00e7\u00e3o anterior), n\u00f3s podemos fazer algo tipo isto: random[2][2]; Antes de continuar, fa\u00e7a algumas modifica\u00e7\u00f5es nos exemplos, crie seus pr\u00f3prios arrays e veja o que funciona e o que n\u00e3o funciona. Divirta-se! Encontrando o comprimento de uma array Voc\u00ea pode encontrar o comprimento de uma array (quantos itens existem nela) exatamente do mesmo jeito que voc\u00ea encontra o comprimento (em caracteres) de uma string \u2014 usando a propriedade {{jsxref(\"Array.prototype.length\",\"length\")}}. Tente o seguinte: sequence.length; // deve retornar 7 Isto tem outras funcionalidades, mas \u00e9 mais comum usar em um la\u00e7o para seguir todos os itens em uma array. Ent\u00e3o, por exemplo: var sequence = [1, 1, 2, 3, 5, 8, 13]; for (var i = 0; i < sequence.length; i++) { console.log(sequence[i]); } Voc\u00ea ir\u00e1 aprender sobre la\u00e7os propriamente em um artigo futuro, mas, brevemente, este c\u00f3digo est\u00e1 dizendo: Comece o la\u00e7o no item n\u00famero 0 na array. Pare o la\u00e7o no item de n\u00famero igual ao comprimento da array. Isto funcionar\u00e1 para uma array de qualquer tamanho, mas neste caso vai parar o la\u00e7o no item 7 (isto \u00e9 bom, como o \u00faltimo item \u2014 que n\u00f3s queremos que o la\u00e7o cubra \u2014 \u00e9 6. Para cada item, imprima no console do navegador com console.log() . Alguns m\u00e9todos \u00fateis em array Nesta se\u00e7\u00e3o vamos ver alguns m\u00e9todos relacionados a array \u00fateis que nos permitem dividir strings em itens de array e vice-versa, e adicionar novos itens em arrays. Convertendo entre strings e arrays Frequentemente voc\u00ea vai se deparar com alguns dados contidos em uma grande e longa string, e voc\u00ea pode querer separar os itens em uma forma mais \u00fatil e ent\u00e3o manipular eles, como mostrar em uma tabela. Para fazer isto, n\u00f3s podemos usar o m\u00e9todo {{jsxref(\"String.prototype.split()\",\"split()\")}}. Nesta forma mais simples, ela pega um par\u00e2metro solit\u00e1rio, o caracter que voc\u00ea deseja separar da string e retorna o restante antes e depois do item separado na array. Ok, isto \u00e9 tecnicamente um m\u00e9todo de string, n\u00e3o um m\u00e9todo de array, mas n\u00f3s podemos colocar em arrays j\u00e1 que cai bem. Vamos brincar com isto para ver como funciona. Primeiro, crie uma string no seu console: var myData = \"Manchester,London,Liverpool,Birmingham,Leeds,Carlisle\"; Agora vamos dividir isto em cada v\u00edrgula: var myArray = myData.split(\",\"); myArray; Finalmente, tentamos encontrar o comprimento da sua nova array, e recuperar alguns itens dela: myArray.length; myArray[0]; // the first item in the array myArray[1]; // the second item in the array myArray[myArray.length - 1]; // the last item in the array Voc\u00ea tamb\u00e9m pode ir no sentido oposto usando o m\u00e9todo {{jsxref(\"Array.prototype.join()\",\"join()\")}}. Tente o seguinte: var myNewString = myArray.join(\",\"); myNewString; Outro jeito de converter uma array em uma string \u00e9 usar o m\u00e9todo toString() \u00e9 indiscutivelmente mais simples que o join() pois n\u00e3o necessita um par\u00e2metro, mas mais limitado. Com join() voc\u00ea pode especificar diferentes separadores (tente o passo 4 com um caracter diferente da v\u00edrgula). var dogNames = [\"Rocket\", \"Flash\", \"Bella\", \"Slugger\"]; dogNames.toString(); //Rocket,Flash,Bella,Slugger Adicionando e removendo itens de arrays N\u00f3s ainda n\u00e3o falamos sobre adicionar e remover itens de uma array \u2014 vamos dar uma olhada agora. N\u00f3s vamos usar a array myArray que acabamos de criar na \u00faltima se\u00e7\u00e3o. Se voc\u00ea n\u00e3o viu a \u00faltima se\u00e7\u00e3o, primeiro crie a array no seu console: var myArray = [ \"Manchester\", \"London\", \"Liverpool\", \"Birmingham\", \"Leeds\", \"Carlisle\", ]; Antes de tudo, para adicionar ou remover um item no final de uma array, n\u00f3s podemos usar {{jsxref(\"Array.prototype.push()\",\"push()\")}} e {{jsxref(\"Array.prototype.pop()\",\"pop()\")}} respectivamente. note que voc\u00ea precisa para incluir um ou mais itens ao final da sua array. Tente isto: myArray.push(\"Cardiff\"); myArray; myArray.push(\"Bradford\", \"Brighton\"); myArray; O novo comprimento da array \u00e9 retornado quando a chamada do m\u00e9todo completa. Se voc\u00ea quer armazenar o novo comprimento da array em uma vari\u00e1vel, voc\u00ea poderia fazer algo como isto: var newLength = myArray.push(\"Bristol\"); myArray; newLength; Removendo o \u00faltimo item da array \u00e9 t\u00e3o simples como um pop() nele. Tente isto: myArray.pop(); O item que foi removido \u00e9 retornado quando a chamada do m\u00e9todo completa. Para salvar o item em uma nova vari\u00e1vel, voc\u00ea poderia fazer isto: var removedItem = myArray.pop(); myArray; removedItem; {{jsxref(\"Array.prototype.unshift()\",\"unshift()\")}} e {{jsxref(\"Array.prototype.shift()\",\"shift()\")}} funciona exatamente do mesmo modo que push() e pop() , respectivamente, exceto que eles funcionam no come\u00e7o da array, n\u00e3o no final. Primeiro unshift() \u2014 tente os seguintes comandos: myArray.unshift(\"Edinburgh\"); myArray; Agora shift() ;Tente estes! var removedItem = myArray.shift(); myArray; removedItem; Aprendizado ativo: Imprimindo aqueles produtos! Vamos retornar ao exemplo que descrevemos antes \u2014 imprimindo nomes de produtos e pre\u00e7os em uma fatura, ent\u00e3o totalizando os pre\u00e7os e imprindindo eles ao final. No exemplo edit\u00e1vel abaixo h\u00e1 coment\u00e1rios contendo n\u00fameros \u2014 cada um deles marcam um lugar onde voc\u00ea tem que acidionar algo ao c\u00f3digo. Eles s\u00e3o como segue: Abaixo do coment\u00e1rio // number 1 est\u00e1 um n\u00famero de strings, cada uma contendo um nome de produto e pre\u00e7o separado por uma v\u00edrgula. N\u00f3s gostar\u00edamos que voc\u00ea colocasse eles dentro de uma array e armazenasse eles na array chamada products . Na mesma linha o coment\u00e1rio // number 2 est\u00e1 no come\u00e7o de um la\u00e7o for. Nesta linha n\u00f3s temos i<=0 , o qual \u00e9 um teste condicional que faz o la\u00e7o for parar imediatamente, porque est\u00e1 dizendo \"pare quando i for menor ou igual a 0\", e i come\u00e7a em 0. N\u00f3s gostar\u00edamos de substituir isto com um teste condicional que termina o la\u00e7o quando o i for menor que o tamanho da array products . Logo abaixo do coment\u00e1rio // number 3 n\u00f3s queremos que voc\u00ea escreva uma linha de c\u00f3digo que divide o item da array ( name:price ) em dois itens separados, um contendo somente o nome e outro s\u00f3 com o pre\u00e7o. Se voc\u00ea n\u00e3o tem certeza de como fazer isto, consulte o artigo M\u00e9todos \u00fateis em string para alguma ajuda, ou ainda melhor, veja a se\u00e7\u00e3o Converting between strings and arrays neste artigo. Como parte da linha de c\u00f3digo acima, voc\u00ea tamb\u00e9m quer converter o pre\u00e7o de string para n\u00famero. Se voc\u00ea n\u00e3o se lembra como fazer isto, veja o artigo primeiras strings . H\u00e1 uma vari\u00e1vel chamada total que \u00e9 criada e atribu\u00edda o valor 0 no come\u00e7o do c\u00f3digo. Dentro do loop (abaixo // number 4 ) n\u00f3s queremos que voc\u00ea escreva uma linha que adicione o pre\u00e7o atual ao total em cada itera\u00e7\u00e3o do la\u00e7o, ent\u00e3o ao final do c\u00f3digo o pre\u00e7o total \u00e9 impresso na fatura. Voc\u00ea pode precisar de um operador aritim\u00e9ticos para isto. N\u00f3s queremos que voc\u00ea mude a linha logo abaixo de // number 5 para que a vari\u00e1vel itemText seja igual a \"nome do item atual - $pre\u00e7o do item atual\", por exemplo \"Shoes - $23.99\" em cada caso, ent\u00e3o a informa\u00e7\u00e3o correta para cada item \u00e9 impressa na fatura. Esta \u00e9 uma simples concatena\u00e7\u00e3o de string, a qual deveria ser familiar para voc\u00ea. <h2>Live output</h2> <div class=\"output\" style=\"min-height: 150px;\"> <ul></ul> <p></p> </div> <h2>Editable code</h2> <p class=\"a11y-label\"> Press Esc to move focus away from the code area (Tab inserts a tab character). </p> <textarea id=\"code\" class=\"playable-code\" style=\"height: 410px;width: 95%\"> var list = document.querySelector('.output ul'); var totalBox = document.querySelector('.output p'); var total = 0; list.innerHTML = ''; totalBox.textContent = ''; // number 1 'Underpants:6.99' 'Socks:5.99' 'T-shirt:14.99' 'Trousers:31.99' 'Shoes:23.99'; for (var i = 0; i <= 0; i++) { // number 2 // number 3 // number 4 // number 5 itemText = 0; var listItem = document.createElement('li'); listItem.textContent = itemText; list.appendChild(listItem); } totalBox.textContent = 'Total: $' + total.toFixed(2); </textarea> <div class=\"playable-buttons\"> <input id=\"reset\" type=\"button\" value=\"Reset\" /> <input id=\"solution\" type=\"button\" value=\"Show solution\" /> </div> var textarea = document.getElementById(\"code\"); var reset = document.getElementById(\"reset\"); var solution = document.getElementById(\"solution\"); var code = textarea.value; var userEntry = textarea.value; function updateCode() { eval(textarea.value); } reset.addEventListener(\"click\", function () { textarea.value = code; userEntry = textarea.value; solutionEntry = jsSolution; solution.value = \"Show solution\"; updateCode(); }); solution.addEventListener(\"click\", function () { if (solution.value === \"Show solution\") { textarea.value = solutionEntry; solution.value = \"Hide solution\"; } else { textarea.value = userEntry; solution.value = \"Show solution\"; } updateCode(); }); var jsSolution = \"var list = document.querySelector('.output ul');\\nvar totalBox = document.querySelector('.output p');\\nvar total = 0;\\nlist.innerHTML = '';\\ntotalBox.textContent = '';\\n\\nvar products = ['Underpants:6.99',\\n 'Socks:5.99',\\n 'T-shirt:14.99',\\n 'Trousers:31.99',\\n 'Shoes:23.99'];\\n\\nfor(var i = 0; i < products.length; i++) {\\n var subArray = products[i].split(':');\\n var name = subArray[0];\\n var price = Number(subArray[1]);\\n total += price;\\n itemText = name + ' \u2014 $' + price;\\n\\n var listItem = document.createElement('li');\\n listItem.textContent = itemText;\\n list.appendChild(listItem);\\n}\\n\\ntotalBox.textContent = 'Total: $' + total.toFixed(2);\"; var solutionEntry = jsSolution; textarea.addEventListener(\"input\", updateCode); window.addEventListener(\"load\", updateCode); // stop tab key tabbing out of textarea and // make it write a tab at the caret position instead textarea.onkeydown = function (e) { if (e.keyCode === 9) { e.preventDefault(); insertAtCaret(\"\\t\"); } if (e.keyCode === 27) { textarea.blur(); } }; function insertAtCaret(text) { var scrollPos = textarea.scrollTop; var caretPos = textarea.selectionStart; var front = textarea.value.substring(0, caretPos); var back = textarea.value.substring( textarea.selectionEnd, textarea.value.length, ); textarea.value = front + text + back; caretPos = caretPos + text.length; textarea.selectionStart = caretPos; textarea.selectionEnd = caretPos; textarea.focus(); textarea.scrollTop = scrollPos; } // Update the saved userCode every time the user updates the text area code textarea.onkeyup = function () { // We only want to save the state when the user code is being shown, // not the solution, so that solution is not saved over the user code if (solution.value === \"Show solution\") { userEntry = textarea.value; } else { solutionEntry = textarea.value; } updateCode(); }; html { font-family: sans-serif; } h2 { font-size: 16px; } .a11y-label { margin: 0; text-align: right; font-size: 0.7rem; width: 98%; } body { margin: 10px; background-color: #f5f9fa; } {{ EmbedLiveSample('Playable_code', '100%', 730, \"\", \"\", \"hide-codepen-jsfiddle\") }} Aprendizado ativo: Top 5 buscadores Um bom uso para os m\u00e9todos de array como {{jsxref(\"Array.prototype.push()\",\"push()\")}} e {{jsxref(\"Array.prototype.pop()\",\"pop()\")}} est\u00e1 quando voc\u00ea est\u00e1 mantendo um registro de itens atuais ativos em um aplicativo web. Em uma cena animada, por exemplo, voc\u00ea pode ter uma array de objetos representando o gr\u00e1fico de fundo mostrado atualmente, e voc\u00ea pode querer somente mostrar 50 por vez, para performace ou alguma raz\u00e3o de ordem. Como novos objetos s\u00e3o criados e adicionados na array, os antigos podem ser deletados da array para manter o n\u00famero desejado. Neste exemplo n\u00f3s vamos mostrar um uso bem mais simples \u2014 aqui n\u00f3s estamos dando a voc\u00ea um falso site de busca, com uma caixa de busca. A id\u00e9ia \u00e9 que quando termos s\u00e3o digitados na caixa de busca, os 5 principais termos de busca anterior sejam mostrados na lista. Quando o n\u00famero de termos passar de 5, o \u00faltimo termo come\u00e7a sendo deletado. A cada vez um novo termo \u00e9 adicionado ao topo, ent\u00e3o os 5 termos anteriores s\u00e3o sempre mostrados. [!NOTE] Em um aplicativo de busca real, voc\u00ea seria, provavelmente, habilitado a clicar nos termos anteriores para retornar \u00e0s pesquisas, e isto iria mostrar o reusltado atual! N\u00f3s estamos s\u00f3 mantendo simples, por agora. Para completar o aplicativo, n\u00f3s precisamos que voc\u00ea: Adicione uma linha abaixo do coment\u00e1rio // number 1 que adicione o valor digitado atual na busca ao come\u00e7o da array. Isto pode ser recuperado usando searchInput.value . Adicione uma linha abaixo do coment\u00e1rio // number 2 que remova o \u00faltimo valor no fim da array. <h2>Live output</h2> <div class=\"output\" style=\"min-height: 150px;\"> <input type=\"text\" /><button>Search</button> <ul></ul> </div> <h2>Editable code</h2> <p class=\"a11y-label\"> Press Esc to move focus away from the code area (Tab inserts a tab character). </p> <textarea id=\"code\" class=\"playable-code\" style=\"height: 370px; width: 95%\"> var list = document.querySelector('.output ul'); var searchInput = document.querySelector('.output input'); var searchBtn = document.querySelector('.output button'); list.innerHTML = ''; var myHistory = []; searchBtn.onclick = function() { // we will only allow a term to be entered if the search input isn't empty if (searchInput.value !== '') { // number 1 // empty the list so that we don't display duplicate entries // the display is regenerated every time a search term is entered. list.innerHTML = ''; // loop through the array, and display all the search terms in the list for (var i = 0; i < myHistory.length; i++) { itemText = myHistory[i]; var listItem = document.createElement('li'); listItem.textContent = itemText; list.appendChild(listItem); } // If the array length is 5 or more, remove the oldest search term if (myHistory.length >= 5) { // number 2 } // empty the search input and focus it, ready for the next term to be entered searchInput.value = ''; searchInput.focus(); } } </textarea> <div class=\"playable-buttons\"> <input id=\"reset\" type=\"button\" value=\"Reset\" /> <input id=\"solution\" type=\"button\" value=\"Show solution\" /> </div> html { font-family: sans-serif; } h2 { font-size: 16px; } .a11y-label { margin: 0; text-align: right; font-size: 0.7rem; width: 98%; } body { margin: 10px; background: #f5f9fa; } var textarea = document.getElementById(\"code\"); var reset = document.getElementById(\"reset\"); var solution = document.getElementById(\"solution\"); var code = textarea.value; var userEntry = textarea.value; function updateCode() { eval(textarea.value); } reset.addEventListener(\"click\", function () { textarea.value = code; userEntry = textarea.value; solutionEntry = jsSolution; solution.value = \"Show solution\"; updateCode(); }); solution.addEventListener(\"click\", function () { if (solution.value === \"Show solution\") { textarea.value = solutionEntry; solution.value = \"Hide solution\"; } else { textarea.value = userEntry; solution.value = \"Show solution\"; } updateCode(); }); var jsSolution = \"var list = document.querySelector('.output ul');\\nvar searchInput = document.querySelector('.output input');\\nvar searchBtn = document.querySelector('.output button');\\n\\nlist.innerHTML = '';\\n\\nvar myHistory= [];\\n\\nsearchBtn.onclick = function() {\\n if(searchInput.value !== '') {\\n myHistory.unshift(searchInput.value);\\n\\n list.innerHTML = '';\\n\\n for(var i = 0; i < myHistory.length; i++) {\\n itemText = myHistory[i];\\n var listItem = document.createElement('li');\\n listItem.textContent = itemText;\\n list.appendChild(listItem);\\n }\\n\\n if(myHistory.length >= 5) {\\n myHistory.pop();\\n }\\n\\n searchInput.value = '';\\n searchInput.focus();\\n }\\n}\"; var solutionEntry = jsSolution; textarea.addEventListener(\"input\", updateCode); window.addEventListener(\"load\", updateCode); // stop tab key tabbing out of textarea and // make it write a tab at the caret position instead textarea.onkeydown = function (e) { if (e.keyCode === 9) { e.preventDefault(); insertAtCaret(\"\\t\"); } if (e.keyCode === 27) { textarea.blur(); } }; function insertAtCaret(text) { var scrollPos = textarea.scrollTop; var caretPos = textarea.selectionStart; var front = textarea.value.substring(0, caretPos); var back = textarea.value.substring( textarea.selectionEnd, textarea.value.length, ); textarea.value = front + text + back; caretPos = caretPos + text.length; textarea.selectionStart = caretPos; textarea.selectionEnd = caretPos; textarea.focus(); textarea.scrollTop = scrollPos; } // Update the saved userCode every time the user updates the text area code textarea.onkeyup = function () { // We only want to save the state when the user code is being shown, // not the solution, so that solution is not saved over the user code if (solution.value === \"Show solution\") { userEntry = textarea.value; } else { solutionEntry = textarea.value; } updateCode(); }; Conclus\u00e3o Depois de ler este artigo, n\u00f3s temos certeza que voc\u00ea concordar\u00e1 que arrays parecem muito \u00fateis; voc\u00ea ver\u00e1 elas surgirem em todo lugar em JavaScript, frequentemente associadas com la\u00e7os para fazer a mesma coisa para cada item de uma array. N\u00f3s estaremos ensinando a voc\u00ea todo o b\u00e1sico que h\u00e1 para saber sobre la\u00e7os no pr\u00f3ximo m\u00f3dulo, mas por agora voc\u00ea deve se dar uma palmada de incentivo e dar uma bem merecida parada; voc\u00ea trabalhou durante todo os artigos neste m\u00f3dulo! A \u00fanica coisa que resta a fazer \u00e9 trabalhar na avalia\u00e7\u00e3o deste m\u00f3dulo, a qual vai testar seu entendimento dos artigos anteriores a este.","title":"Arrays"},{"location":"_Disciplina/Roteiros/js/array/#o-que-e-uma-array","text":"Arrays s\u00e3o geralmente descritas como \"lista de objetos\"; elas s\u00e3o basicamente objetos que contem m\u00faltiplos valores armazenados em uma lista. Um objeto array pode ser armazenado em vari\u00e1veis e ser tratado de forma muito similar a qualquer outro tipo de valor, a diferen\u00e7a est\u00e1 em podermos acessar cada valor dentro da lista individualmente, e fazer super \u00fateis e eficientes coisas com a lista, como la\u00e7o atrav\u00e9s da lista e fazer a mesma coisa para cada valor. Talvez n\u00f3s pegamos uma s\u00e9rie de produtos e seus pre\u00e7os armazenados em uma array, e n\u00f3s queremos fazer um la\u00e7o atrav\u00e9s de todos eles e mostrar em um recibo, enquanto somamos todos os pre\u00e7os e mostramos o pre\u00e7o total ao final. Se n\u00f3s n\u00e3o tivessemos arrays, ter\u00edamos que armazenar cada item em uma vari\u00e1vel separada, ent\u00e3o chamar o c\u00f3digo para mostrar e adicionar separadamente cada item. Isto seria muito mais longo de escrever, menos eficiente e mais suscet\u00edvel a erros. Se n\u00f3s temos 10 itens para adicionar na fatura, isto \u00e9 ruim o bastante, mas e se fosse 100 itens ou 1000? N\u00f3s vamos retornar a este exemplo mais tarde neste artigo.","title":"O que \u00e9 uma array?"},{"location":"_Disciplina/Roteiros/js/array/#criando-uma-array","text":"Arrays s\u00e3o contru\u00eddas de colchetes, os quais cont\u00e9m uma lista de itens separada por v\u00edrgulas. Vamos supor que queremos armazenar uma lista de compras em uma array \u2014 n\u00f3s temos algo como o seguinte. Digite as linhas abaixo no seu console: var shopping = [\"bread\", \"milk\", \"cheese\", \"hummus\", \"noodles\"]; shopping; Neste caso, cada item na array \u00e9 uma string, mas tenha em mente que voc\u00ea pode armazenar qualquer item em uma array \u2014 string, n\u00famero, objeto, outra vari\u00e1vel, at\u00e9 outra array. Voc\u00ea pode tamb\u00e9m misturar e combinar tipos de itens \u2014 eles n\u00e3o t\u00eam que ser todos n\u00fameros, strings, etc. Tente isto: var sequence = [1, 1, 2, 3, 5, 8, 13]; var random = [\"tree\", 795, [0, 1, 2]]; Tente criar um par de arrays voc\u00ea mesmo, antes de seguir em frente.","title":"Criando uma array"},{"location":"_Disciplina/Roteiros/js/array/#acessando-e-modificando-itens-de-uma-array","text":"Voc\u00ea pode acessar itens individuais em uma array usando a nota\u00e7\u00e3o de colchetes, da mesma forma que voc\u00ea acessa as letras em uma string . Digite o seguinte no seu console: shopping[0]; // returns \"bread\" Voc\u00ea tamb\u00e9m pode modificar um item em uma array simplesmente dando um novo valor ao item. Tente isto: shopping[0] = \"tahini\"; shopping; // shopping vai retornar agora [ \"tahini\", \"milk\", \"cheese\", \"hummus\", \"noodles\" ] N\u00f3s dissemos isto antes, mas como lembrete \u2014 computadores come\u00e7am a contar do 0! Note que uma array dentro de uma array \u00e9 chamada de array multidimensional. Voc\u00ea pode acessar um item dentro de uma array que est\u00e1 localizada dentro de outra array, colocando dois conjuntos de colchetes juntos. Por exemplo, para acessar um dos itens dentro de uma array, que \u00e9 o terceiro item dentro da array random (veja a se\u00e7\u00e3o anterior), n\u00f3s podemos fazer algo tipo isto: random[2][2]; Antes de continuar, fa\u00e7a algumas modifica\u00e7\u00f5es nos exemplos, crie seus pr\u00f3prios arrays e veja o que funciona e o que n\u00e3o funciona. Divirta-se!","title":"Acessando e modificando itens de uma array"},{"location":"_Disciplina/Roteiros/js/array/#encontrando-o-comprimento-de-uma-array","text":"Voc\u00ea pode encontrar o comprimento de uma array (quantos itens existem nela) exatamente do mesmo jeito que voc\u00ea encontra o comprimento (em caracteres) de uma string \u2014 usando a propriedade {{jsxref(\"Array.prototype.length\",\"length\")}}. Tente o seguinte: sequence.length; // deve retornar 7 Isto tem outras funcionalidades, mas \u00e9 mais comum usar em um la\u00e7o para seguir todos os itens em uma array. Ent\u00e3o, por exemplo: var sequence = [1, 1, 2, 3, 5, 8, 13]; for (var i = 0; i < sequence.length; i++) { console.log(sequence[i]); } Voc\u00ea ir\u00e1 aprender sobre la\u00e7os propriamente em um artigo futuro, mas, brevemente, este c\u00f3digo est\u00e1 dizendo: Comece o la\u00e7o no item n\u00famero 0 na array. Pare o la\u00e7o no item de n\u00famero igual ao comprimento da array. Isto funcionar\u00e1 para uma array de qualquer tamanho, mas neste caso vai parar o la\u00e7o no item 7 (isto \u00e9 bom, como o \u00faltimo item \u2014 que n\u00f3s queremos que o la\u00e7o cubra \u2014 \u00e9 6. Para cada item, imprima no console do navegador com console.log() .","title":"Encontrando o comprimento de uma array"},{"location":"_Disciplina/Roteiros/js/array/#alguns-metodos-uteis-em-array","text":"Nesta se\u00e7\u00e3o vamos ver alguns m\u00e9todos relacionados a array \u00fateis que nos permitem dividir strings em itens de array e vice-versa, e adicionar novos itens em arrays.","title":"Alguns m\u00e9todos \u00fateis em array"},{"location":"_Disciplina/Roteiros/js/array/#convertendo-entre-strings-e-arrays","text":"Frequentemente voc\u00ea vai se deparar com alguns dados contidos em uma grande e longa string, e voc\u00ea pode querer separar os itens em uma forma mais \u00fatil e ent\u00e3o manipular eles, como mostrar em uma tabela. Para fazer isto, n\u00f3s podemos usar o m\u00e9todo {{jsxref(\"String.prototype.split()\",\"split()\")}}. Nesta forma mais simples, ela pega um par\u00e2metro solit\u00e1rio, o caracter que voc\u00ea deseja separar da string e retorna o restante antes e depois do item separado na array. Ok, isto \u00e9 tecnicamente um m\u00e9todo de string, n\u00e3o um m\u00e9todo de array, mas n\u00f3s podemos colocar em arrays j\u00e1 que cai bem. Vamos brincar com isto para ver como funciona. Primeiro, crie uma string no seu console: var myData = \"Manchester,London,Liverpool,Birmingham,Leeds,Carlisle\"; Agora vamos dividir isto em cada v\u00edrgula: var myArray = myData.split(\",\"); myArray; Finalmente, tentamos encontrar o comprimento da sua nova array, e recuperar alguns itens dela: myArray.length; myArray[0]; // the first item in the array myArray[1]; // the second item in the array myArray[myArray.length - 1]; // the last item in the array Voc\u00ea tamb\u00e9m pode ir no sentido oposto usando o m\u00e9todo {{jsxref(\"Array.prototype.join()\",\"join()\")}}. Tente o seguinte: var myNewString = myArray.join(\",\"); myNewString; Outro jeito de converter uma array em uma string \u00e9 usar o m\u00e9todo toString() \u00e9 indiscutivelmente mais simples que o join() pois n\u00e3o necessita um par\u00e2metro, mas mais limitado. Com join() voc\u00ea pode especificar diferentes separadores (tente o passo 4 com um caracter diferente da v\u00edrgula). var dogNames = [\"Rocket\", \"Flash\", \"Bella\", \"Slugger\"]; dogNames.toString(); //Rocket,Flash,Bella,Slugger","title":"Convertendo entre strings e arrays"},{"location":"_Disciplina/Roteiros/js/array/#adicionando-e-removendo-itens-de-arrays","text":"N\u00f3s ainda n\u00e3o falamos sobre adicionar e remover itens de uma array \u2014 vamos dar uma olhada agora. N\u00f3s vamos usar a array myArray que acabamos de criar na \u00faltima se\u00e7\u00e3o. Se voc\u00ea n\u00e3o viu a \u00faltima se\u00e7\u00e3o, primeiro crie a array no seu console: var myArray = [ \"Manchester\", \"London\", \"Liverpool\", \"Birmingham\", \"Leeds\", \"Carlisle\", ]; Antes de tudo, para adicionar ou remover um item no final de uma array, n\u00f3s podemos usar {{jsxref(\"Array.prototype.push()\",\"push()\")}} e {{jsxref(\"Array.prototype.pop()\",\"pop()\")}} respectivamente. note que voc\u00ea precisa para incluir um ou mais itens ao final da sua array. Tente isto: myArray.push(\"Cardiff\"); myArray; myArray.push(\"Bradford\", \"Brighton\"); myArray; O novo comprimento da array \u00e9 retornado quando a chamada do m\u00e9todo completa. Se voc\u00ea quer armazenar o novo comprimento da array em uma vari\u00e1vel, voc\u00ea poderia fazer algo como isto: var newLength = myArray.push(\"Bristol\"); myArray; newLength; Removendo o \u00faltimo item da array \u00e9 t\u00e3o simples como um pop() nele. Tente isto: myArray.pop(); O item que foi removido \u00e9 retornado quando a chamada do m\u00e9todo completa. Para salvar o item em uma nova vari\u00e1vel, voc\u00ea poderia fazer isto: var removedItem = myArray.pop(); myArray; removedItem; {{jsxref(\"Array.prototype.unshift()\",\"unshift()\")}} e {{jsxref(\"Array.prototype.shift()\",\"shift()\")}} funciona exatamente do mesmo modo que push() e pop() , respectivamente, exceto que eles funcionam no come\u00e7o da array, n\u00e3o no final. Primeiro unshift() \u2014 tente os seguintes comandos: myArray.unshift(\"Edinburgh\"); myArray; Agora shift() ;Tente estes! var removedItem = myArray.shift(); myArray; removedItem;","title":"Adicionando e removendo itens de arrays"},{"location":"_Disciplina/Roteiros/js/array/#aprendizado-ativo-imprimindo-aqueles-produtos","text":"Vamos retornar ao exemplo que descrevemos antes \u2014 imprimindo nomes de produtos e pre\u00e7os em uma fatura, ent\u00e3o totalizando os pre\u00e7os e imprindindo eles ao final. No exemplo edit\u00e1vel abaixo h\u00e1 coment\u00e1rios contendo n\u00fameros \u2014 cada um deles marcam um lugar onde voc\u00ea tem que acidionar algo ao c\u00f3digo. Eles s\u00e3o como segue: Abaixo do coment\u00e1rio // number 1 est\u00e1 um n\u00famero de strings, cada uma contendo um nome de produto e pre\u00e7o separado por uma v\u00edrgula. N\u00f3s gostar\u00edamos que voc\u00ea colocasse eles dentro de uma array e armazenasse eles na array chamada products . Na mesma linha o coment\u00e1rio // number 2 est\u00e1 no come\u00e7o de um la\u00e7o for. Nesta linha n\u00f3s temos i<=0 , o qual \u00e9 um teste condicional que faz o la\u00e7o for parar imediatamente, porque est\u00e1 dizendo \"pare quando i for menor ou igual a 0\", e i come\u00e7a em 0. N\u00f3s gostar\u00edamos de substituir isto com um teste condicional que termina o la\u00e7o quando o i for menor que o tamanho da array products . Logo abaixo do coment\u00e1rio // number 3 n\u00f3s queremos que voc\u00ea escreva uma linha de c\u00f3digo que divide o item da array ( name:price ) em dois itens separados, um contendo somente o nome e outro s\u00f3 com o pre\u00e7o. Se voc\u00ea n\u00e3o tem certeza de como fazer isto, consulte o artigo M\u00e9todos \u00fateis em string para alguma ajuda, ou ainda melhor, veja a se\u00e7\u00e3o Converting between strings and arrays neste artigo. Como parte da linha de c\u00f3digo acima, voc\u00ea tamb\u00e9m quer converter o pre\u00e7o de string para n\u00famero. Se voc\u00ea n\u00e3o se lembra como fazer isto, veja o artigo primeiras strings . H\u00e1 uma vari\u00e1vel chamada total que \u00e9 criada e atribu\u00edda o valor 0 no come\u00e7o do c\u00f3digo. Dentro do loop (abaixo // number 4 ) n\u00f3s queremos que voc\u00ea escreva uma linha que adicione o pre\u00e7o atual ao total em cada itera\u00e7\u00e3o do la\u00e7o, ent\u00e3o ao final do c\u00f3digo o pre\u00e7o total \u00e9 impresso na fatura. Voc\u00ea pode precisar de um operador aritim\u00e9ticos para isto. N\u00f3s queremos que voc\u00ea mude a linha logo abaixo de // number 5 para que a vari\u00e1vel itemText seja igual a \"nome do item atual - $pre\u00e7o do item atual\", por exemplo \"Shoes - $23.99\" em cada caso, ent\u00e3o a informa\u00e7\u00e3o correta para cada item \u00e9 impressa na fatura. Esta \u00e9 uma simples concatena\u00e7\u00e3o de string, a qual deveria ser familiar para voc\u00ea. <h2>Live output</h2> <div class=\"output\" style=\"min-height: 150px;\"> <ul></ul> <p></p> </div> <h2>Editable code</h2> <p class=\"a11y-label\"> Press Esc to move focus away from the code area (Tab inserts a tab character). </p> <textarea id=\"code\" class=\"playable-code\" style=\"height: 410px;width: 95%\"> var list = document.querySelector('.output ul'); var totalBox = document.querySelector('.output p'); var total = 0; list.innerHTML = ''; totalBox.textContent = ''; // number 1 'Underpants:6.99' 'Socks:5.99' 'T-shirt:14.99' 'Trousers:31.99' 'Shoes:23.99'; for (var i = 0; i <= 0; i++) { // number 2 // number 3 // number 4 // number 5 itemText = 0; var listItem = document.createElement('li'); listItem.textContent = itemText; list.appendChild(listItem); } totalBox.textContent = 'Total: $' + total.toFixed(2); </textarea> <div class=\"playable-buttons\"> <input id=\"reset\" type=\"button\" value=\"Reset\" /> <input id=\"solution\" type=\"button\" value=\"Show solution\" /> </div> var textarea = document.getElementById(\"code\"); var reset = document.getElementById(\"reset\"); var solution = document.getElementById(\"solution\"); var code = textarea.value; var userEntry = textarea.value; function updateCode() { eval(textarea.value); } reset.addEventListener(\"click\", function () { textarea.value = code; userEntry = textarea.value; solutionEntry = jsSolution; solution.value = \"Show solution\"; updateCode(); }); solution.addEventListener(\"click\", function () { if (solution.value === \"Show solution\") { textarea.value = solutionEntry; solution.value = \"Hide solution\"; } else { textarea.value = userEntry; solution.value = \"Show solution\"; } updateCode(); }); var jsSolution = \"var list = document.querySelector('.output ul');\\nvar totalBox = document.querySelector('.output p');\\nvar total = 0;\\nlist.innerHTML = '';\\ntotalBox.textContent = '';\\n\\nvar products = ['Underpants:6.99',\\n 'Socks:5.99',\\n 'T-shirt:14.99',\\n 'Trousers:31.99',\\n 'Shoes:23.99'];\\n\\nfor(var i = 0; i < products.length; i++) {\\n var subArray = products[i].split(':');\\n var name = subArray[0];\\n var price = Number(subArray[1]);\\n total += price;\\n itemText = name + ' \u2014 $' + price;\\n\\n var listItem = document.createElement('li');\\n listItem.textContent = itemText;\\n list.appendChild(listItem);\\n}\\n\\ntotalBox.textContent = 'Total: $' + total.toFixed(2);\"; var solutionEntry = jsSolution; textarea.addEventListener(\"input\", updateCode); window.addEventListener(\"load\", updateCode); // stop tab key tabbing out of textarea and // make it write a tab at the caret position instead textarea.onkeydown = function (e) { if (e.keyCode === 9) { e.preventDefault(); insertAtCaret(\"\\t\"); } if (e.keyCode === 27) { textarea.blur(); } }; function insertAtCaret(text) { var scrollPos = textarea.scrollTop; var caretPos = textarea.selectionStart; var front = textarea.value.substring(0, caretPos); var back = textarea.value.substring( textarea.selectionEnd, textarea.value.length, ); textarea.value = front + text + back; caretPos = caretPos + text.length; textarea.selectionStart = caretPos; textarea.selectionEnd = caretPos; textarea.focus(); textarea.scrollTop = scrollPos; } // Update the saved userCode every time the user updates the text area code textarea.onkeyup = function () { // We only want to save the state when the user code is being shown, // not the solution, so that solution is not saved over the user code if (solution.value === \"Show solution\") { userEntry = textarea.value; } else { solutionEntry = textarea.value; } updateCode(); }; html { font-family: sans-serif; } h2 { font-size: 16px; } .a11y-label { margin: 0; text-align: right; font-size: 0.7rem; width: 98%; } body { margin: 10px; background-color: #f5f9fa; } {{ EmbedLiveSample('Playable_code', '100%', 730, \"\", \"\", \"hide-codepen-jsfiddle\") }}","title":"Aprendizado ativo: Imprimindo aqueles produtos!"},{"location":"_Disciplina/Roteiros/js/array/#aprendizado-ativo-top-5-buscadores","text":"Um bom uso para os m\u00e9todos de array como {{jsxref(\"Array.prototype.push()\",\"push()\")}} e {{jsxref(\"Array.prototype.pop()\",\"pop()\")}} est\u00e1 quando voc\u00ea est\u00e1 mantendo um registro de itens atuais ativos em um aplicativo web. Em uma cena animada, por exemplo, voc\u00ea pode ter uma array de objetos representando o gr\u00e1fico de fundo mostrado atualmente, e voc\u00ea pode querer somente mostrar 50 por vez, para performace ou alguma raz\u00e3o de ordem. Como novos objetos s\u00e3o criados e adicionados na array, os antigos podem ser deletados da array para manter o n\u00famero desejado. Neste exemplo n\u00f3s vamos mostrar um uso bem mais simples \u2014 aqui n\u00f3s estamos dando a voc\u00ea um falso site de busca, com uma caixa de busca. A id\u00e9ia \u00e9 que quando termos s\u00e3o digitados na caixa de busca, os 5 principais termos de busca anterior sejam mostrados na lista. Quando o n\u00famero de termos passar de 5, o \u00faltimo termo come\u00e7a sendo deletado. A cada vez um novo termo \u00e9 adicionado ao topo, ent\u00e3o os 5 termos anteriores s\u00e3o sempre mostrados. [!NOTE] Em um aplicativo de busca real, voc\u00ea seria, provavelmente, habilitado a clicar nos termos anteriores para retornar \u00e0s pesquisas, e isto iria mostrar o reusltado atual! N\u00f3s estamos s\u00f3 mantendo simples, por agora. Para completar o aplicativo, n\u00f3s precisamos que voc\u00ea: Adicione uma linha abaixo do coment\u00e1rio // number 1 que adicione o valor digitado atual na busca ao come\u00e7o da array. Isto pode ser recuperado usando searchInput.value . Adicione uma linha abaixo do coment\u00e1rio // number 2 que remova o \u00faltimo valor no fim da array. <h2>Live output</h2> <div class=\"output\" style=\"min-height: 150px;\"> <input type=\"text\" /><button>Search</button> <ul></ul> </div> <h2>Editable code</h2> <p class=\"a11y-label\"> Press Esc to move focus away from the code area (Tab inserts a tab character). </p> <textarea id=\"code\" class=\"playable-code\" style=\"height: 370px; width: 95%\"> var list = document.querySelector('.output ul'); var searchInput = document.querySelector('.output input'); var searchBtn = document.querySelector('.output button'); list.innerHTML = ''; var myHistory = []; searchBtn.onclick = function() { // we will only allow a term to be entered if the search input isn't empty if (searchInput.value !== '') { // number 1 // empty the list so that we don't display duplicate entries // the display is regenerated every time a search term is entered. list.innerHTML = ''; // loop through the array, and display all the search terms in the list for (var i = 0; i < myHistory.length; i++) { itemText = myHistory[i]; var listItem = document.createElement('li'); listItem.textContent = itemText; list.appendChild(listItem); } // If the array length is 5 or more, remove the oldest search term if (myHistory.length >= 5) { // number 2 } // empty the search input and focus it, ready for the next term to be entered searchInput.value = ''; searchInput.focus(); } } </textarea> <div class=\"playable-buttons\"> <input id=\"reset\" type=\"button\" value=\"Reset\" /> <input id=\"solution\" type=\"button\" value=\"Show solution\" /> </div> html { font-family: sans-serif; } h2 { font-size: 16px; } .a11y-label { margin: 0; text-align: right; font-size: 0.7rem; width: 98%; } body { margin: 10px; background: #f5f9fa; } var textarea = document.getElementById(\"code\"); var reset = document.getElementById(\"reset\"); var solution = document.getElementById(\"solution\"); var code = textarea.value; var userEntry = textarea.value; function updateCode() { eval(textarea.value); } reset.addEventListener(\"click\", function () { textarea.value = code; userEntry = textarea.value; solutionEntry = jsSolution; solution.value = \"Show solution\"; updateCode(); }); solution.addEventListener(\"click\", function () { if (solution.value === \"Show solution\") { textarea.value = solutionEntry; solution.value = \"Hide solution\"; } else { textarea.value = userEntry; solution.value = \"Show solution\"; } updateCode(); }); var jsSolution = \"var list = document.querySelector('.output ul');\\nvar searchInput = document.querySelector('.output input');\\nvar searchBtn = document.querySelector('.output button');\\n\\nlist.innerHTML = '';\\n\\nvar myHistory= [];\\n\\nsearchBtn.onclick = function() {\\n if(searchInput.value !== '') {\\n myHistory.unshift(searchInput.value);\\n\\n list.innerHTML = '';\\n\\n for(var i = 0; i < myHistory.length; i++) {\\n itemText = myHistory[i];\\n var listItem = document.createElement('li');\\n listItem.textContent = itemText;\\n list.appendChild(listItem);\\n }\\n\\n if(myHistory.length >= 5) {\\n myHistory.pop();\\n }\\n\\n searchInput.value = '';\\n searchInput.focus();\\n }\\n}\"; var solutionEntry = jsSolution; textarea.addEventListener(\"input\", updateCode); window.addEventListener(\"load\", updateCode); // stop tab key tabbing out of textarea and // make it write a tab at the caret position instead textarea.onkeydown = function (e) { if (e.keyCode === 9) { e.preventDefault(); insertAtCaret(\"\\t\"); } if (e.keyCode === 27) { textarea.blur(); } }; function insertAtCaret(text) { var scrollPos = textarea.scrollTop; var caretPos = textarea.selectionStart; var front = textarea.value.substring(0, caretPos); var back = textarea.value.substring( textarea.selectionEnd, textarea.value.length, ); textarea.value = front + text + back; caretPos = caretPos + text.length; textarea.selectionStart = caretPos; textarea.selectionEnd = caretPos; textarea.focus(); textarea.scrollTop = scrollPos; } // Update the saved userCode every time the user updates the text area code textarea.onkeyup = function () { // We only want to save the state when the user code is being shown, // not the solution, so that solution is not saved over the user code if (solution.value === \"Show solution\") { userEntry = textarea.value; } else { solutionEntry = textarea.value; } updateCode(); };","title":"Aprendizado ativo: Top 5 buscadores"},{"location":"_Disciplina/Roteiros/js/array/#conclusao","text":"Depois de ler este artigo, n\u00f3s temos certeza que voc\u00ea concordar\u00e1 que arrays parecem muito \u00fateis; voc\u00ea ver\u00e1 elas surgirem em todo lugar em JavaScript, frequentemente associadas com la\u00e7os para fazer a mesma coisa para cada item de uma array. N\u00f3s estaremos ensinando a voc\u00ea todo o b\u00e1sico que h\u00e1 para saber sobre la\u00e7os no pr\u00f3ximo m\u00f3dulo, mas por agora voc\u00ea deve se dar uma palmada de incentivo e dar uma bem merecida parada; voc\u00ea trabalhou durante todo os artigos neste m\u00f3dulo! A \u00fanica coisa que resta a fazer \u00e9 trabalhar na avalia\u00e7\u00e3o deste m\u00f3dulo, a qual vai testar seu entendimento dos artigos anteriores a este.","title":"Conclus\u00e3o"},{"location":"_Disciplina/Roteiros/js/chartmap/","text":"Criando um Gr\u00e1fico de Linhas Simples com JavaScript e o M\u00e9todo map() Entendendo o Problema: Queremos transformar um conjunto de dados em um formato que possa ser utilizado para desenhar um gr\u00e1fico de linhas. Para isso, vamos utilizar o m\u00e9todo map() para gerar um array de coordenadas (x, y) a partir dos nossos dados. Bibliotecas para Visualiza\u00e7\u00e3o: Existem diversas bibliotecas JavaScript que facilitam a cria\u00e7\u00e3o de gr\u00e1ficos, como: Chart.js: Popular por sua facilidade de uso e customiza\u00e7\u00e3o. D3.js: Uma biblioteca mais poderosa e flex\u00edvel, ideal para gr\u00e1ficos complexos. Plotly.js: Uma biblioteca interativa com diversos tipos de gr\u00e1ficos. Exemplo com Chart.js: Vamos supor que temos um array de dados representando a temperatura ao longo de uma semana: const temperaturas = [18, 22, 25, 20, 19, 23, 24]; Para criar um gr\u00e1fico de linhas com Chart.js, precisamos de um elemento HTML <canvas> e um conjunto de dados no formato adequado. Utilizaremos o map() para transformar o array de temperaturas em um array de objetos, onde cada objeto representa um ponto no gr\u00e1fico: const ctx = document.getElementById('myChart').getContext('2d'); const labels = ['Domingo', 'Segunda', 'Ter\u00e7a', 'Quarta', 'Quinta', 'Sexta', 'S\u00e1bado']; const data = { labels: labels, datasets: [{ label: 'Temperatura (\u00b0C)', data: temperaturas, borderColor: 'rgb(75, 192, 192)', fill: false }] }; const myChart = new Chart(ctx, { type: 'line', data: data, options: {} }); <!DOCTYPE html> <html> <head> <title>Gr\u00e1fico de Linhas com Chart.js</title> <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script> </head> <body> <canvas id=\"myChart\"></canvas> <script> // JavaScript (j\u00e1 mostrado anteriormente) </script> </body> </html> Explicando o C\u00f3digo: Criamos um canvas: O elemento <canvas> \u00e9 onde o gr\u00e1fico ser\u00e1 desenhado. Definimos os r\u00f3tulos: O array labels cont\u00e9m os r\u00f3tulos para cada ponto do eixo x (dias da semana). Transformamos os dados: O map() \u00e9 usado para criar um novo array de objetos, onde cada objeto possui as propriedades x (\u00edndice) e y (temperatura). No entanto, para o Chart.js, n\u00e3o precisamos criar explicitamente as coordenadas x, pois os r\u00f3tulos j\u00e1 servem como essa informa\u00e7\u00e3o. Configuramos o gr\u00e1fico: Criamos um novo objeto Chart, definindo o tipo do gr\u00e1fico (linha), os dados e as op\u00e7\u00f5es de configura\u00e7\u00e3o. Personalizando o Gr\u00e1fico: O Chart.js oferece diversas op\u00e7\u00f5es para personalizar o gr\u00e1fico, como cores, espessura das linhas, marcadores, etc. Consulte a documenta\u00e7\u00e3o oficial para mais detalhes: https://www.chartjs.org/docs/latest/ Outros Exemplos: Gr\u00e1fico de barras: Substitua type: 'line' por type: 'bar' . Gr\u00e1fico de pizza: Utilize type: 'pie' . M\u00faltiplas s\u00e9ries: Adicione mais datasets ao objeto data para comparar diferentes conjuntos de dados. Desafio: Adapte o exemplo acima para criar um gr\u00e1fico de linhas que mostre a evolu\u00e7\u00e3o do pre\u00e7o de uma a\u00e7\u00e3o ao longo de um m\u00eas. Voc\u00ea pode gerar dados aleat\u00f3rios para simular os pre\u00e7os. Recursos Adicionais: Documenta\u00e7\u00e3o Chart.js: https://www.chartjs.org/docs/latest/ Com o map() e bibliotecas como Chart.js, voc\u00ea pode criar gr\u00e1ficos personalizados e informativos para visualizar seus dados de forma eficaz.","title":"Chartmap"},{"location":"_Disciplina/Roteiros/js/chartmap/#criando-um-grafico-de-linhas-simples-com-javascript-e-o-metodo-map","text":"Entendendo o Problema: Queremos transformar um conjunto de dados em um formato que possa ser utilizado para desenhar um gr\u00e1fico de linhas. Para isso, vamos utilizar o m\u00e9todo map() para gerar um array de coordenadas (x, y) a partir dos nossos dados. Bibliotecas para Visualiza\u00e7\u00e3o: Existem diversas bibliotecas JavaScript que facilitam a cria\u00e7\u00e3o de gr\u00e1ficos, como: Chart.js: Popular por sua facilidade de uso e customiza\u00e7\u00e3o. D3.js: Uma biblioteca mais poderosa e flex\u00edvel, ideal para gr\u00e1ficos complexos. Plotly.js: Uma biblioteca interativa com diversos tipos de gr\u00e1ficos. Exemplo com Chart.js: Vamos supor que temos um array de dados representando a temperatura ao longo de uma semana: const temperaturas = [18, 22, 25, 20, 19, 23, 24]; Para criar um gr\u00e1fico de linhas com Chart.js, precisamos de um elemento HTML <canvas> e um conjunto de dados no formato adequado. Utilizaremos o map() para transformar o array de temperaturas em um array de objetos, onde cada objeto representa um ponto no gr\u00e1fico: const ctx = document.getElementById('myChart').getContext('2d'); const labels = ['Domingo', 'Segunda', 'Ter\u00e7a', 'Quarta', 'Quinta', 'Sexta', 'S\u00e1bado']; const data = { labels: labels, datasets: [{ label: 'Temperatura (\u00b0C)', data: temperaturas, borderColor: 'rgb(75, 192, 192)', fill: false }] }; const myChart = new Chart(ctx, { type: 'line', data: data, options: {} }); <!DOCTYPE html> <html> <head> <title>Gr\u00e1fico de Linhas com Chart.js</title> <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script> </head> <body> <canvas id=\"myChart\"></canvas> <script> // JavaScript (j\u00e1 mostrado anteriormente) </script> </body> </html> Explicando o C\u00f3digo: Criamos um canvas: O elemento <canvas> \u00e9 onde o gr\u00e1fico ser\u00e1 desenhado. Definimos os r\u00f3tulos: O array labels cont\u00e9m os r\u00f3tulos para cada ponto do eixo x (dias da semana). Transformamos os dados: O map() \u00e9 usado para criar um novo array de objetos, onde cada objeto possui as propriedades x (\u00edndice) e y (temperatura). No entanto, para o Chart.js, n\u00e3o precisamos criar explicitamente as coordenadas x, pois os r\u00f3tulos j\u00e1 servem como essa informa\u00e7\u00e3o. Configuramos o gr\u00e1fico: Criamos um novo objeto Chart, definindo o tipo do gr\u00e1fico (linha), os dados e as op\u00e7\u00f5es de configura\u00e7\u00e3o. Personalizando o Gr\u00e1fico: O Chart.js oferece diversas op\u00e7\u00f5es para personalizar o gr\u00e1fico, como cores, espessura das linhas, marcadores, etc. Consulte a documenta\u00e7\u00e3o oficial para mais detalhes: https://www.chartjs.org/docs/latest/ Outros Exemplos: Gr\u00e1fico de barras: Substitua type: 'line' por type: 'bar' . Gr\u00e1fico de pizza: Utilize type: 'pie' . M\u00faltiplas s\u00e9ries: Adicione mais datasets ao objeto data para comparar diferentes conjuntos de dados. Desafio: Adapte o exemplo acima para criar um gr\u00e1fico de linhas que mostre a evolu\u00e7\u00e3o do pre\u00e7o de uma a\u00e7\u00e3o ao longo de um m\u00eas. Voc\u00ea pode gerar dados aleat\u00f3rios para simular os pre\u00e7os. Recursos Adicionais: Documenta\u00e7\u00e3o Chart.js: https://www.chartjs.org/docs/latest/ Com o map() e bibliotecas como Chart.js, voc\u00ea pode criar gr\u00e1ficos personalizados e informativos para visualizar seus dados de forma eficaz.","title":"Criando um Gr\u00e1fico de Linhas Simples com JavaScript e o M\u00e9todo map()"},{"location":"_Disciplina/Roteiros/js/map/","text":"O Comando Map em JavaScript Introdu\u00e7\u00e3o O m\u00e9todo map() \u00e9 uma ferramenta poderosa em JavaScript que permite transformar cada elemento de um array em um novo elemento, criando um novo array com os resultados. \u00c9 uma forma eficiente de aplicar uma fun\u00e7\u00e3o a cada item de um array, sem modificar o array original. Objetivos da Aula Compreender o conceito de map() ; Aprender a sintaxe e a utiliza\u00e7\u00e3o do map() ; Realizar opera\u00e7\u00f5es comuns com map() ; Diferenciar map() de outros m\u00e9todos como forEach() ; Aplicar map() em exemplos pr\u00e1ticos. Conte\u00fado da Aula 1. O que \u00e9 o map() ? Defini\u00e7\u00e3o e prop\u00f3sito do m\u00e9todo. Como o map() funciona internamente. Compara\u00e7\u00e3o com outros m\u00e9todos como forEach() . 2. Sintaxe do map() Estrutura b\u00e1sica do m\u00e9todo. Par\u00e2metros da fun\u00e7\u00e3o de callback: elemento atual, \u00edndice, array original. Retorno da fun\u00e7\u00e3o de callback. 3. Exemplos B\u00e1sicos Dobrar todos os n\u00fameros de um array. Transformar um array de nomes em letras mai\u00fasculas. Criar um novo array com os quadrados dos n\u00fameros. 4. Usos Comuns Criar novos arrays a partir de dados existentes. Aplicar formata\u00e7\u00f5es a elementos de um array. Extrair informa\u00e7\u00f5es espec\u00edficas de um array de objetos. 5. map() com Arrow Functions Como utilizar arrow functions para simplificar o c\u00f3digo. Exemplos pr\u00e1ticos. Atividades Pr\u00e1ticas Exerc\u00edcios: Crie um array de n\u00fameros e utilize map() para obter um novo array com os n\u00fameros multiplicados por 2. Transforme um array de objetos (pessoas) em um novo array contendo apenas os nomes. Crie um array de strings e utilize map() para converter cada string em um elemento HTML (e.g., <li> ). Projeto: Crie uma aplica\u00e7\u00e3o simples que permita ao usu\u00e1rio adicionar itens a uma lista de compras. Utilize map() para exibir a lista formatada em HTML. Recursos Adicionais Documenta\u00e7\u00e3o MDN: A documenta\u00e7\u00e3o oficial do JavaScript oferece exemplos e explica\u00e7\u00f5es detalhadas sobre o m\u00e9todo map() . Exerc\u00edcios interativos: Sites como Exercism e Codewars oferecem desafios para praticar os conceitos aprendidos. Exemplos Pr\u00e1ticos // Dobrar todos os n\u00fameros de um array const numeros = [1, 2, 3, 4, 5]; const numerosDobrados = numeros.map(numero => numero * 2); // Transformar um array de nomes em letras mai\u00fasculas const nomes = ['ana', 'jo\u00e3o', 'maria']; const nomesMaiusculos = nomes.map(nome => nome.toUpperCase()); // Criar um novo array com os quadrados dos n\u00fameros const quadrados = numeros.map(numero => numero * numero); Exemplos Pr\u00e1ticos e Relevantes para o M\u00e9todo map() em JavaScript Cen\u00e1rios e Exemplos 1. Manipula\u00e7\u00e3o de Dados de Usu\u00e1rios Exemplo: Transformar um array de objetos representando usu\u00e1rios em um novo array contendo apenas os nomes. const usuarios = [ { nome: 'Ana', idade: 30 }, { nome: 'Jo\u00e3o', idade: 25 }, { nome: 'Maria', idade: 35 } ]; const nomes = usuarios.map(usuario => usuario.nome); console.log(nomes); // Output: ['Ana', 'Jo\u00e3o', 'Maria'] 2. Formata\u00e7\u00e3o de Dados para Exibi\u00e7\u00e3o Exemplo: Formatar um array de pre\u00e7os para exibir com o s\u00edmbolo de real e duas casas decimais. const precos = [10.99, 25.49, 15.99]; const precosFormatados = precos.map(preco => `R$ ${preco.toFixed(2)}`); console.log(precosFormatados); // Output: ['R$ 10.99', 'R$ 25.49', 'R$ 15.99'] 3. Cria\u00e7\u00e3o de Elementos HTML Exemplo: Criar uma lista n\u00e3o ordenada (ul) com os itens de um array. const itens = ['ma\u00e7\u00e3', 'banana', 'laranja']; const listaHtml = itens.map(item => `<li>${item}</li>`).join(''); console.log(listaHtml); 4. Processamento de Dados de Formul\u00e1rios Exemplo: Extrair os valores de um formul\u00e1rio e criar um objeto com os dados. const formulario = document.querySelector('form'); const dadosFormulario = new FormData(formulario); const dadosObjeto = [...dadosFormulario.entries()].map(([chave, valor]) => ({ [chave]: valor })); console.log(dadosObjeto); 5. Transforma\u00e7\u00e3o de Unidades de Medida Exemplo: Converter uma lista de temperaturas em Celsius para Fahrenheit. const temperaturasCelsius = [0, 10, 20, 30]; const temperaturasFahrenheit = temperaturasCelsius.map(celsius => (celsius * 9/5) + 32); 6. Cria\u00e7\u00e3o de Novos Objetos a Partir de Arrays Exemplo: Criar um array de objetos com propriedades chave-valor a partir de dois arrays. const nomes = ['Ana', 'Jo\u00e3o', 'Maria']; const idades = [30, 25, 35]; const pessoas = nomes.map((nome, index) => ({ nome, idade: idades[index] })); Atividades Pr\u00e1ticas Criar um cat\u00e1logo de produtos: Dado um array de objetos representando produtos (nome, pre\u00e7o, categoria), criar um novo array com os produtos de uma categoria espec\u00edfica. Transformar uma lista de datas em um novo formato: Converter um array de strings representando datas no formato \"YYYY-MM-DD\" para o formato \"DD/MM/YYYY\". Validar um formul\u00e1rio: Utilizar map() para verificar se todos os campos obrigat\u00f3rios de um formul\u00e1rio foram preenchidos. Criar um gr\u00e1fico simples: Gerar um array de coordenadas a partir de um conjunto de dados e utiliz\u00e1-lo para criar um gr\u00e1fico de linhas b\u00e1sico. Dicas Adicionais: Enfatize a imutabilidade: O map() cria um novo array, n\u00e3o modificando o original. Explore diferentes cen\u00e1rios: Apresente exemplos que envolvam diferentes tipos de dados e estruturas. Incentive a experimenta\u00e7\u00e3o: Deixe os alunos explorarem diferentes formas de utilizar o map() . Relacione com outros m\u00e9todos: Mostre como o map() pode ser combinado com outros m\u00e9todos como filter e reduce para realizar opera\u00e7\u00f5es mais complexas. Com esses exemplos e atividades, seus alunos ter\u00e3o uma base s\u00f3lida para utilizar o map() em seus projetos JavaScript.","title":"Map"},{"location":"_Disciplina/Roteiros/js/map/#o-comando-map-em-javascript","text":"","title":"O Comando Map em JavaScript"},{"location":"_Disciplina/Roteiros/js/map/#introducao","text":"O m\u00e9todo map() \u00e9 uma ferramenta poderosa em JavaScript que permite transformar cada elemento de um array em um novo elemento, criando um novo array com os resultados. \u00c9 uma forma eficiente de aplicar uma fun\u00e7\u00e3o a cada item de um array, sem modificar o array original.","title":"Introdu\u00e7\u00e3o"},{"location":"_Disciplina/Roteiros/js/map/#objetivos-da-aula","text":"Compreender o conceito de map() ; Aprender a sintaxe e a utiliza\u00e7\u00e3o do map() ; Realizar opera\u00e7\u00f5es comuns com map() ; Diferenciar map() de outros m\u00e9todos como forEach() ; Aplicar map() em exemplos pr\u00e1ticos.","title":"Objetivos da Aula"},{"location":"_Disciplina/Roteiros/js/map/#conteudo-da-aula","text":"","title":"Conte\u00fado da Aula"},{"location":"_Disciplina/Roteiros/js/map/#1-o-que-e-o-map","text":"Defini\u00e7\u00e3o e prop\u00f3sito do m\u00e9todo. Como o map() funciona internamente. Compara\u00e7\u00e3o com outros m\u00e9todos como forEach() .","title":"1. O que \u00e9 o map()?"},{"location":"_Disciplina/Roteiros/js/map/#2-sintaxe-do-map","text":"Estrutura b\u00e1sica do m\u00e9todo. Par\u00e2metros da fun\u00e7\u00e3o de callback: elemento atual, \u00edndice, array original. Retorno da fun\u00e7\u00e3o de callback.","title":"2. Sintaxe do map()"},{"location":"_Disciplina/Roteiros/js/map/#3-exemplos-basicos","text":"Dobrar todos os n\u00fameros de um array. Transformar um array de nomes em letras mai\u00fasculas. Criar um novo array com os quadrados dos n\u00fameros.","title":"3. Exemplos B\u00e1sicos"},{"location":"_Disciplina/Roteiros/js/map/#4-usos-comuns","text":"Criar novos arrays a partir de dados existentes. Aplicar formata\u00e7\u00f5es a elementos de um array. Extrair informa\u00e7\u00f5es espec\u00edficas de um array de objetos.","title":"4. Usos Comuns"},{"location":"_Disciplina/Roteiros/js/map/#5-map-com-arrow-functions","text":"Como utilizar arrow functions para simplificar o c\u00f3digo. Exemplos pr\u00e1ticos.","title":"5. map() com Arrow Functions"},{"location":"_Disciplina/Roteiros/js/map/#atividades-praticas","text":"Exerc\u00edcios: Crie um array de n\u00fameros e utilize map() para obter um novo array com os n\u00fameros multiplicados por 2. Transforme um array de objetos (pessoas) em um novo array contendo apenas os nomes. Crie um array de strings e utilize map() para converter cada string em um elemento HTML (e.g., <li> ). Projeto: Crie uma aplica\u00e7\u00e3o simples que permita ao usu\u00e1rio adicionar itens a uma lista de compras. Utilize map() para exibir a lista formatada em HTML.","title":"Atividades Pr\u00e1ticas"},{"location":"_Disciplina/Roteiros/js/map/#recursos-adicionais","text":"Documenta\u00e7\u00e3o MDN: A documenta\u00e7\u00e3o oficial do JavaScript oferece exemplos e explica\u00e7\u00f5es detalhadas sobre o m\u00e9todo map() . Exerc\u00edcios interativos: Sites como Exercism e Codewars oferecem desafios para praticar os conceitos aprendidos.","title":"Recursos Adicionais"},{"location":"_Disciplina/Roteiros/js/map/#exemplos-praticos","text":"// Dobrar todos os n\u00fameros de um array const numeros = [1, 2, 3, 4, 5]; const numerosDobrados = numeros.map(numero => numero * 2); // Transformar um array de nomes em letras mai\u00fasculas const nomes = ['ana', 'jo\u00e3o', 'maria']; const nomesMaiusculos = nomes.map(nome => nome.toUpperCase()); // Criar um novo array com os quadrados dos n\u00fameros const quadrados = numeros.map(numero => numero * numero);","title":"Exemplos Pr\u00e1ticos"},{"location":"_Disciplina/Roteiros/js/map/#exemplos-praticos-e-relevantes-para-o-metodo-map-em-javascript","text":"","title":"Exemplos Pr\u00e1ticos e Relevantes para o M\u00e9todo map() em JavaScript"},{"location":"_Disciplina/Roteiros/js/map/#cenarios-e-exemplos","text":"","title":"Cen\u00e1rios e Exemplos"},{"location":"_Disciplina/Roteiros/js/map/#1-manipulacao-de-dados-de-usuarios","text":"Exemplo: Transformar um array de objetos representando usu\u00e1rios em um novo array contendo apenas os nomes. const usuarios = [ { nome: 'Ana', idade: 30 }, { nome: 'Jo\u00e3o', idade: 25 }, { nome: 'Maria', idade: 35 } ]; const nomes = usuarios.map(usuario => usuario.nome); console.log(nomes); // Output: ['Ana', 'Jo\u00e3o', 'Maria']","title":"1. Manipula\u00e7\u00e3o de Dados de Usu\u00e1rios"},{"location":"_Disciplina/Roteiros/js/map/#2-formatacao-de-dados-para-exibicao","text":"Exemplo: Formatar um array de pre\u00e7os para exibir com o s\u00edmbolo de real e duas casas decimais. const precos = [10.99, 25.49, 15.99]; const precosFormatados = precos.map(preco => `R$ ${preco.toFixed(2)}`); console.log(precosFormatados); // Output: ['R$ 10.99', 'R$ 25.49', 'R$ 15.99']","title":"2. Formata\u00e7\u00e3o de Dados para Exibi\u00e7\u00e3o"},{"location":"_Disciplina/Roteiros/js/map/#3-criacao-de-elementos-html","text":"Exemplo: Criar uma lista n\u00e3o ordenada (ul) com os itens de um array. const itens = ['ma\u00e7\u00e3', 'banana', 'laranja']; const listaHtml = itens.map(item => `<li>${item}</li>`).join(''); console.log(listaHtml);","title":"3. Cria\u00e7\u00e3o de Elementos HTML"},{"location":"_Disciplina/Roteiros/js/map/#4-processamento-de-dados-de-formularios","text":"Exemplo: Extrair os valores de um formul\u00e1rio e criar um objeto com os dados. const formulario = document.querySelector('form'); const dadosFormulario = new FormData(formulario); const dadosObjeto = [...dadosFormulario.entries()].map(([chave, valor]) => ({ [chave]: valor })); console.log(dadosObjeto);","title":"4. Processamento de Dados de Formul\u00e1rios"},{"location":"_Disciplina/Roteiros/js/map/#5-transformacao-de-unidades-de-medida","text":"Exemplo: Converter uma lista de temperaturas em Celsius para Fahrenheit. const temperaturasCelsius = [0, 10, 20, 30]; const temperaturasFahrenheit = temperaturasCelsius.map(celsius => (celsius * 9/5) + 32);","title":"5. Transforma\u00e7\u00e3o de Unidades de Medida"},{"location":"_Disciplina/Roteiros/js/map/#6-criacao-de-novos-objetos-a-partir-de-arrays","text":"Exemplo: Criar um array de objetos com propriedades chave-valor a partir de dois arrays. const nomes = ['Ana', 'Jo\u00e3o', 'Maria']; const idades = [30, 25, 35]; const pessoas = nomes.map((nome, index) => ({ nome, idade: idades[index] }));","title":"6. Cria\u00e7\u00e3o de Novos Objetos a Partir de Arrays"},{"location":"_Disciplina/Roteiros/js/map/#atividades-praticas_1","text":"Criar um cat\u00e1logo de produtos: Dado um array de objetos representando produtos (nome, pre\u00e7o, categoria), criar um novo array com os produtos de uma categoria espec\u00edfica. Transformar uma lista de datas em um novo formato: Converter um array de strings representando datas no formato \"YYYY-MM-DD\" para o formato \"DD/MM/YYYY\". Validar um formul\u00e1rio: Utilizar map() para verificar se todos os campos obrigat\u00f3rios de um formul\u00e1rio foram preenchidos. Criar um gr\u00e1fico simples: Gerar um array de coordenadas a partir de um conjunto de dados e utiliz\u00e1-lo para criar um gr\u00e1fico de linhas b\u00e1sico. Dicas Adicionais: Enfatize a imutabilidade: O map() cria um novo array, n\u00e3o modificando o original. Explore diferentes cen\u00e1rios: Apresente exemplos que envolvam diferentes tipos de dados e estruturas. Incentive a experimenta\u00e7\u00e3o: Deixe os alunos explorarem diferentes formas de utilizar o map() . Relacione com outros m\u00e9todos: Mostre como o map() pode ser combinado com outros m\u00e9todos como filter e reduce para realizar opera\u00e7\u00f5es mais complexas. Com esses exemplos e atividades, seus alunos ter\u00e3o uma base s\u00f3lida para utilizar o map() em seus projetos JavaScript.","title":"Atividades Pr\u00e1ticas"},{"location":"_Ferramentas/Sites%20Importantes/","text":"Sites Importantes Web.dev [ responsividade, media queries, etc...] Frontend checklist W3resource tutorial W3resource exerc\u00edcios","title":"Sites Importantes"},{"location":"_Ferramentas/Sites%20Importantes/#sites-importantes","text":"Web.dev [ responsividade, media queries, etc...] Frontend checklist W3resource tutorial W3resource exerc\u00edcios","title":"Sites Importantes"},{"location":"_Ferramentas/validadores/","text":"Validadores HTML CSS LINK","title":"Validadores"},{"location":"_Ferramentas/validadores/#validadores","text":"HTML CSS LINK","title":"Validadores"},{"location":"_Ferramentas/w3c/","text":"w3c O World Wide Web Consortium \u00e9 a principal organiza\u00e7\u00e3o de padroniza\u00e7\u00e3o da World Wide Web. Consiste em um cons\u00f3rcio internacional com 450 membros, agrega empresas, \u00f3rg\u00e3os governamentais e organiza\u00e7\u00f5es independentes com a finalidade de estabelecer padr\u00f5es para a cria\u00e7\u00e3o e a interpreta\u00e7\u00e3o de conte\u00fados para a Web.","title":"W3C Web Standards"},{"location":"_Ferramentas/w3c/#w3c","text":"O World Wide Web Consortium \u00e9 a principal organiza\u00e7\u00e3o de padroniza\u00e7\u00e3o da World Wide Web. Consiste em um cons\u00f3rcio internacional com 450 membros, agrega empresas, \u00f3rg\u00e3os governamentais e organiza\u00e7\u00f5es independentes com a finalidade de estabelecer padr\u00f5es para a cria\u00e7\u00e3o e a interpreta\u00e7\u00e3o de conte\u00fados para a Web.","title":"w3c"},{"location":"_Ferramentas/w3schools/","text":"w3schools O W3Schools \u00e9 um site em l\u00edngua inglesa criado em 1998 e voltado para quem quer aprender mais sobre desenvolvimento e programa\u00e7\u00e3o para a web . O W3Schools \u00e9 uma \u00f3tima indica\u00e7\u00e3o para iniciantes e profissionais que se interessem em avan\u00e7ar no estudo de linguagens de programa\u00e7\u00e3o.","title":"W3Schools"},{"location":"_Ferramentas/w3schools/#w3schools","text":"O W3Schools \u00e9 um site em l\u00edngua inglesa criado em 1998 e voltado para quem quer aprender mais sobre desenvolvimento e programa\u00e7\u00e3o para a web . O W3Schools \u00e9 uma \u00f3tima indica\u00e7\u00e3o para iniciantes e profissionais que se interessem em avan\u00e7ar no estudo de linguagens de programa\u00e7\u00e3o.","title":"w3schools"}]}